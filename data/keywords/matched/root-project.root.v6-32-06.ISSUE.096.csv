id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/14048:112,availability,error,error,112,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:190,availability,error,error,190,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:112,performance,error,error,112,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:190,performance,error,error,190,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:112,safety,error,error,112,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:190,safety,error,error,190,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:171,security,hardcod,hardcoded,171,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:112,usability,error,error,112,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14048:190,usability,error,error,190,"[math] Use `EXPECT_DOUBLE_EQ` in test_tprofile2poly.cxx; As seen in #9601, using `EXCEPT_NEAR` with an absolute error is not so good, because if the numbers are large the hardcoded absolute error can be smaller than the double precision. In these cases, `EXPECT_DOUBLE_EQ` is recommended instead. @ellert, I'm suggesting this as an alternative to what you suggested in #9601, but without magic numbers of two. Can you maybe check if this approach with `EXPECT_DOUBLE_EQ` also works? Thanks!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14048
https://github.com/root-project/root/pull/14049:10,deployability,Updat,Update,10,[skip-ci] Update fonts' documentation (CMS request); Better description of fonts' names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14049
https://github.com/root-project/root/pull/14049:10,safety,Updat,Update,10,[skip-ci] Update fonts' documentation (CMS request); Better description of fonts' names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14049
https://github.com/root-project/root/pull/14049:10,security,Updat,Update,10,[skip-ci] Update fonts' documentation (CMS request); Better description of fonts' names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14049
https://github.com/root-project/root/pull/14049:24,usability,document,documentation,24,[skip-ci] Update fonts' documentation (CMS request); Better description of fonts' names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14049
https://github.com/root-project/root/pull/14050:13,availability,cluster,cluster,13,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:82,availability,cluster,cluster,82,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:132,availability,slo,slots,132,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:181,availability,cluster,cluster,181,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:211,availability,slo,slots,211,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:13,deployability,cluster,cluster,13,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:82,deployability,cluster,cluster,82,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:181,deployability,cluster,cluster,181,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:132,reliability,slo,slots,132,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:211,reliability,slo,slots,211,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:175,safety,avoid,avoid,175,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:301,safety,test,tested,301,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/pull/14050:301,testability,test,tested,301,[ntuple] use cluster boundaries in RDF iteration; # This Pull request:. - Respect cluster boundaries when assigning entry ranges to slots. - Add RPageSource::SetEntryRange to avoid cluster read-ahead into other slots entry range. ## Changes or fixes:. Fixes RDF-IMT with RNTuple. ## Checklist:. - [X] tested changes locally.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14050
https://github.com/root-project/root/issues/14051:850,availability,Operat,Operating,850,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:644,deployability,version,versions,644,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:788,deployability,version,version,788,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:817,deployability,Instal,Installation,817,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:663,energy efficiency,current,current,663,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:797,energy efficiency,current,current,797,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:644,integrability,version,versions,644,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:788,integrability,version,version,788,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:644,modifiability,version,versions,644,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:788,modifiability,version,version,788,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/issues/14051:890,testability,context,context,890,"[web graphics] Web graphics resizes canvas despite canvas size definition in the macro; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When running the tutorials via ""old"" graphics, the set canvas size is correctly saved, but once the same macro is executed via the web graphics, the size is changed - it should be a square of 600x600 and it is a rectangle instead. (A few weeks ago this problem was resolved but it is back). . ![Screenshot 2023-11-14 at 13 28 59](https://github.com/root-project/root/assets/80402204/03fa92eb-06b7-4b2c-a506-b41bc2ace4f8). ### Reproducer. Higgs to 4 leptons tutorial (cpp or python versions) from the current master: . https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons.C . ### ROOT version. current master. ### Installation method. source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14051
https://github.com/root-project/root/pull/14052:82,deployability,updat,updating,82,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:135,deployability,build,build-root,135,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:159,deployability,updat,update,159,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:489,deployability,updat,update,489,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:250,integrability,sub,submitter,250,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:274,integrability,repositor,repository,274,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:274,interoperability,repositor,repository,274,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:41,reliability,doe,does,41,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:82,safety,updat,updating,82,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:159,safety,updat,update,159,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:489,safety,updat,update,489,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:82,security,updat,updating,82,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:159,security,updat,update,159,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14052:489,security,updat,update,489,"CI: Clone roottest before cmake; This PR does two things:. 1. move the cloning or updating of `roottest` from the `CMake` step to the `build-root.py` step and update the step to take the `roottest` branch with the same name as the PR branch from the submitter's `rootttest` repository if it exist. 2. Rather than using the symbolic name for the PR branch, use the commit seen at the triggering of the CI to rebase the code. This insures that all runners sees the same code (before hand an update to the incoming or target branch would have changed what the various runners see). 2. is implemented by:. a. looking at the merge commit create by github. b. extracting the parents commit (from base and from the incoming branch). c. checkout the incoming branch commit. d. rebasing the base branch onto it. An alternative implementation could have been. e. checkout the commit merge. f. rebase the base branch (using the base fork point) onto it (and hope/expect that git will remove the commit merge).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14052
https://github.com/root-project/root/pull/14053:33,safety,test,test,33,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:108,safety,test,test,108,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:122,safety,test,testfile,122,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:28,testability,unit,unit,28,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:33,testability,test,test,33,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:103,testability,unit,unit,103,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:108,testability,test,test,108,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14053:122,testability,test,testfile,122,[io] adjust RRawFile/XRootD unit test to new target; # This Pull request:. Adjusts the XRootD RRawFile unit test to a new testfile location.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14053
https://github.com/root-project/root/pull/14054:60,energy efficiency,profil,profile,60,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:101,energy efficiency,profil,profile,101,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:171,energy efficiency,profil,profile,171,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:353,energy efficiency,profil,profile,353,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:189,integrability,configur,configure,189,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:121,modifiability,paramet,parameters,121,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:189,modifiability,configur,configure,189,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:230,modifiability,paramet,parameters,230,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:566,modifiability,deco,decorations,566,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:60,performance,profil,profile,60,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:101,performance,profil,profile,101,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:171,performance,profil,profile,171,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:353,performance,profil,profile,353,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:415,reliability,doe,does,415,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:84,security,session,session,84,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:189,security,configur,configure,189,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:25,usability,support,support,25,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:45,usability,custom,custom,45,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:72,usability,interact,interactive,72,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:153,usability,widget,widget,153,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:164,usability,Custom,Custom,164,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/pull/14054:615,usability,support,support,615,[webgui] Improve firefox support ; 1. Create custom firefox profile for interactive session. In this profile set several parameters to hide URL and tabs widget. 2. Custom profile allows to configure initial -width and -height URL parameters for window geometry. 3. Introduce `runfirefox.sh` shell script to use 'trap' functionality to cleanup temporary profile after firefox is exiting. Trying to cleanup from ROOT does not work - while ROOT exit faster than firefox. With these changes Firefox behaves much better than before - one gets normal window without extra decorations. The only missing part for Firefox - support of PDF output in headless mode.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14054
https://github.com/root-project/root/issues/14055:2334,availability,Operat,Operating,2334," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:0,deployability,Fail,Failing,0,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:8,deployability,build,build,8,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:58,deployability,build,build,58,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:409,deployability,fail,failing,409,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:790,deployability,fail,failed,790,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:923,deployability,build,build,923,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1139,deployability,fail,failing,1139,"requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.dem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1336,deployability,build,build,1336,"T in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Opera",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1342,deployability,fail,fails,1342,"n external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1460,deployability,build,building,1460,"s sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, where",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1560,deployability,build,build,1560," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1646,deployability,version,version,1646," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1669,deployability,contain,container,1669," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1694,deployability,build,build,1694," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2264,deployability,Instal,Installation,2264," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2285,deployability,Build,Build,2285," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2314,deployability,version,version,2314," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2449,deployability,version,versions,2449," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1646,integrability,version,version,1646," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2314,integrability,version,version,2314," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2449,integrability,version,versions,2449," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1646,modifiability,version,version,1646," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2314,modifiability,version,version,2314," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2449,modifiability,version,versions,2449," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:35,performance,memor,memory,35,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:430,performance,memor,memory,430,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1169,performance,time,time,1169,"n #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1452,performance,time,time,1452,"the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:0,reliability,Fail,Failing,0,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:409,reliability,fail,failing,409,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:790,reliability,fail,failed,790,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1139,reliability,fail,failing,1139,"requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.dem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1342,reliability,fail,fails,1342,"n external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:403,safety,test,tests,403,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:442,safety,detect,detected,442,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:466,safety,sanit,sanitiser,466,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1104,safety,test,tests,1104,"for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1609,safety,sanit,sanitiser,1609," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:442,security,detect,detected,442,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:466,security,sanit,sanitiser,466,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1609,security,sanit,sanitiser,1609," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1935,security,Team,Team,1935," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:398,testability,unit,unit,398,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:403,testability,test,tests,403,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1104,testability,test,tests,1104,"for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2387,testability,context,context,2387," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:35,usability,memor,memory,35,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:50,usability,minim,minimal,50,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:430,usability,memor,memory,430,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:915,usability,minim,minimal,915,"Failing build with `-Dasan=ON` and memory leak in minimal build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As requested by @Axel-Naumann in #13130 this is a follow up of [my note there](https://github.com/root-project/root/issues/13130#issuecomment-1798152115). Basically I recently built and linked to ROOT in an external project (in a Docker image) and I got all unit tests failing because of a memory leak detected by the address sanitiser. As ROOT was set up using CMake via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:1686,usability,minim,minimal,1686," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/issues/14055:2126,usability,help,help,2126," -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF. ```. the backtrace reported in my previous note was pretty small. Hence, I tried to compile ROOT as. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON. ```. but this failed with [this output](https://github.com/root-project/root/files/13353729/ROOT_failed_build.txt). Then I tried to make a minimal build via. ```. cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src -Dxrootd=OFF -Dasan=ON -Dminimal=ON. ```. and this succeeded and I got my Docker image built. Inside it the tests of my application were still failing as expected, but this time the backtrace was way larger. In [this file](https://github.com/root-project/root/files/13353730/ROOT_backtrace_leak.txt) you find it all. ### Reproducer. As the build fails because of a leak, I am pretty much expecting that the two issues are related and I did not invest more time in building up a MWE to reproduce the second issue. However, I would naively guess that linking to the build library in any executable with the address sanitiser on would make it. ### ROOT version. In the Docker container in the minimal build ROOT binary folder, I get:. ```. root@fc0d5912f35b:/SMASH/root_install/bin# ./root.exe -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/06 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Aug 28 2023, 11:29:15 |. | From tags/v6-28-06@v6-28-06 |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Build from source with CMake version 3.22.1. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. The same problem occurred with previous ROOT `v6.28` versions, whereas switching back to `v6.26.10` made the problem disappear.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14055
https://github.com/root-project/root/pull/14056:55,integrability,pub,public,55,"[RF] Move internal enums of RooResolutionModels out of public interface; This gives us more freedom when refactoring things to also support code. generation with AD. Also apply other code modernizations, like less use of `TString` or. delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14056:62,integrability,interfac,interface,62,"[RF] Move internal enums of RooResolutionModels out of public interface; This gives us more freedom when refactoring things to also support code. generation with AD. Also apply other code modernizations, like less use of `TString` or. delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14056:62,interoperability,interfac,interface,62,"[RF] Move internal enums of RooResolutionModels out of public interface; This gives us more freedom when refactoring things to also support code. generation with AD. Also apply other code modernizations, like less use of `TString` or. delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14056:62,modifiability,interfac,interface,62,"[RF] Move internal enums of RooResolutionModels out of public interface; This gives us more freedom when refactoring things to also support code. generation with AD. Also apply other code modernizations, like less use of `TString` or. delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14056:105,modifiability,refact,refactoring,105,"[RF] Move internal enums of RooResolutionModels out of public interface; This gives us more freedom when refactoring things to also support code. generation with AD. Also apply other code modernizations, like less use of `TString` or. delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14056:105,performance,refactor,refactoring,105,"[RF] Move internal enums of RooResolutionModels out of public interface; This gives us more freedom when refactoring things to also support code. generation with AD. Also apply other code modernizations, like less use of `TString` or. delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14056:132,usability,support,support,132,"[RF] Move internal enums of RooResolutionModels out of public interface; This gives us more freedom when refactoring things to also support code. generation with AD. Also apply other code modernizations, like less use of `TString` or. delegating constructors.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14056
https://github.com/root-project/root/pull/14058:301,integrability,interfac,interface,301,[math][mathmore] Fix setting optional parameters for GSLMCIntegrator; Calling `GSLMCIntegrator::SetMode` crashed because the internal workspace was not yet created. . This PR fixes this and also the way the extra option parameters are retrieved and set in the GSLMCIntegrator. . A small change in the interface is done by returning now a unique_ptr instead of a row pointer in . `GSLMCIntegrator::ExtraOptions()`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14058
https://github.com/root-project/root/pull/14058:301,interoperability,interfac,interface,301,[math][mathmore] Fix setting optional parameters for GSLMCIntegrator; Calling `GSLMCIntegrator::SetMode` crashed because the internal workspace was not yet created. . This PR fixes this and also the way the extra option parameters are retrieved and set in the GSLMCIntegrator. . A small change in the interface is done by returning now a unique_ptr instead of a row pointer in . `GSLMCIntegrator::ExtraOptions()`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14058
https://github.com/root-project/root/pull/14058:38,modifiability,paramet,parameters,38,[math][mathmore] Fix setting optional parameters for GSLMCIntegrator; Calling `GSLMCIntegrator::SetMode` crashed because the internal workspace was not yet created. . This PR fixes this and also the way the extra option parameters are retrieved and set in the GSLMCIntegrator. . A small change in the interface is done by returning now a unique_ptr instead of a row pointer in . `GSLMCIntegrator::ExtraOptions()`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14058
https://github.com/root-project/root/pull/14058:220,modifiability,paramet,parameters,220,[math][mathmore] Fix setting optional parameters for GSLMCIntegrator; Calling `GSLMCIntegrator::SetMode` crashed because the internal workspace was not yet created. . This PR fixes this and also the way the extra option parameters are retrieved and set in the GSLMCIntegrator. . A small change in the interface is done by returning now a unique_ptr instead of a row pointer in . `GSLMCIntegrator::ExtraOptions()`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14058
https://github.com/root-project/root/pull/14058:301,modifiability,interfac,interface,301,[math][mathmore] Fix setting optional parameters for GSLMCIntegrator; Calling `GSLMCIntegrator::SetMode` crashed because the internal workspace was not yet created. . This PR fixes this and also the way the extra option parameters are retrieved and set in the GSLMCIntegrator. . A small change in the interface is done by returning now a unique_ptr instead of a row pointer in . `GSLMCIntegrator::ExtraOptions()`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14058
https://github.com/root-project/root/issues/14061:997,availability,operat,operation,997,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:21,deployability,build,build,21,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:321,deployability,configurat,configuration,321,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:903,deployability,build,build,903,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:909,deployability,artifact,artifacts,909,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:930,deployability,build,builds,930,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:195,energy efficiency,current,current,195,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:321,integrability,configur,configuration,321,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:719,integrability,repositor,repository,719,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:719,interoperability,repositor,repository,719,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:321,modifiability,configur,configuration,321,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:232,performance,time,time,232,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:753,reliability,doe,doesn,753,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:369,safety,test,test,369,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:776,safety,test,tests,776,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:850,safety,compl,complication,850,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:321,security,configur,configuration,321,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:401,security,ident,identified,401,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:419,security,hash,hash,419,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:743,security,hash,hash,743,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:850,security,compl,complication,850,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:369,testability,test,test,369,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:776,testability,test,tests,776,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:76,usability,workflow,workflows,76,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:284,usability,usab,usable,284,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:294,usability,indicat,indications,294,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14061:571,usability,workflow,workflows,571,"GitHub Actions don't build exactly the pushed commit; At the moment, `push` workflows pass `--base_ref master` to `build_root.py`. This means that they may actually pick up a later commit (= the current commit on the branch) at the time the job actually starts to run. In order to be usable as indications when a certain configuration broke, it would be more useful to test exactly the pushed commit, identified by its hash. Unfortunately, fixing this isn't as easy as replacing. https://github.com/root-project/root/blob/db6ff452b032b23251970046fd1febe066e4fa4d/.github/workflows/root-ci.yml#L456-L465. to pass `--base_ref ${{ github.sha }}` because `build_root.py` calls `git clone --branch {branch} --single-branch {repository}`. Passing a hash here doesn't work (in local tests), and would otherwise probably result in a detached `HEAD`. Another complication is that the sources are included in the build artifacts used by PR builds, so they have to look like an ordinary clone for the rebase operation to work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14061
https://github.com/root-project/root/issues/14062:6,availability,failur,failure,6,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:420,availability,failur,failure,420,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:878,availability,error,error,878,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1310,availability,error,error,1310,"/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1760,availability,error,error,1760,d' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2188,availability,error,error,2188, 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2488,availability,error,error,2488," previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3029,availability,error,error,3029,"module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3183,availability,error,error,3183,": error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3516,availability,error,error,3516,"std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3849,availability,error,error,3849,"d/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4008,availability,error,error,4008,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4368,availability,error,error,4368,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4437,availability,Error,Error,4437,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4444,availability,Error,Error,4444,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4570,availability,Error,Error,4570,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4654,availability,Error,Error,4654,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4798,availability,Operat,Operating,4798,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:0,deployability,Build,Build,0,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:6,deployability,fail,failure,6,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:420,deployability,fail,failure,420,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:467,deployability,Build,Building,467,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:713,deployability,build,building,713,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:722,deployability,modul,module,722,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:744,deployability,build,building,744,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:753,deployability,modul,module,753,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:820,deployability,modul,module-includes,820,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1145,deployability,build,building,1145,"AKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1154,deployability,modul,module,1154,"ALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1176,deployability,build,building,1176,"builtin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1185,deployability,modul,module,1185,"gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1252,deployability,modul,module-includes,1252,"hia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1595,deployability,build,building,1595,"src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1604,deployability,modul,module,1604,"cling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1626,deployability,build,building,1626,"ilt target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1635,deployability,modul,module,1635,"et rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1702,deployability,modul,module-includes,1702,le building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2023,deployability,build,building,2023,nge_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fata,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2032,deployability,modul,module,2032,ss.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2054,deployability,build,building,2054,ious declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build modul,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2063,deployability,modul,module,2063,laration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2130,deployability,modul,module-includes,2130, While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/clin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2505,deployability,build,build,2505,"tion is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2511,deployability,modul,module,2511,"s here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2615,deployability,Fail,Failed,2615,". While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2654,deployability,version,version,2654,"rom input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2669,deployability,build,building,2669,"1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2678,deployability,modul,module,2678," file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2700,deployability,build,building,2700,"dule-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2709,deployability,modul,module,2709,"ludes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2769,deployability,build,building,2769,"ion specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2778,deployability,modul,module,2778,"ification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2922,deployability,modul,module-includes,2922,"te: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3047,deployability,build,build,3047,"ile building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3053,deployability,modul,module,3053,"ilding module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3201,deployability,build,build,3201," specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /ho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3207,deployability,modul,module,3207,"fication in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3608,deployability,build,building,3608,":. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3617,deployability,modul,module,3617,"d to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3639,deployability,build,building,3639,"rd library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3648,deployability,modul,module,3648,"ry version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3761,deployability,modul,module-includes,3761,"building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3866,deployability,build,build,3866,"preter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3872,deployability,modul,module,3872,"/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No respo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4025,deployability,build,build,4025,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4031,deployability,modul,module,4031,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4108,deployability,build,building,4108,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4117,deployability,modul,module,4117,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4139,deployability,build,building,4139,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4148,deployability,modul,module,4148,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4280,deployability,modul,module-includes,4280,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4385,deployability,build,build,4385,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4391,deployability,modul,module,4391,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4536,deployability,build,build,4536,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4679,deployability,Build,Build,4679,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4707,deployability,version,version,4707,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4754,deployability,Instal,Installation,4754,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4775,deployability,Build,Build,4775,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:487,energy efficiency,core,core,487,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:697,energy efficiency,Core,Core,697,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:730,energy efficiency,Core,Core,730,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1162,energy efficiency,Core,Core,1162,"FIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1612,energy efficiency,Core,Core,1612,"tage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2040,energy efficiency,Core,Core,2040,4:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2686,energy efficiency,Core,Core,2686,"ncluded from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3625,energy efficiency,Core,Core,3625,"tract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4125,energy efficiency,Core,Core,4125,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4450,energy efficiency,load,loading,4450,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4508,energy efficiency,core,core,4508,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4552,energy efficiency,core,core,4552,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4621,energy efficiency,core,core,4621,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2654,integrability,version,version,2654,"rom input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4707,integrability,version,version,4707,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:895,interoperability,specif,specification,895,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1327,interoperability,specif,specification,1327,"e/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1777,interoperability,specif,specification,1777,t_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2205,interoperability,specif,specification,2205,input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build modul,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2637,interoperability,standard,standard,2637," 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3496,interoperability,stub,stubs,3496,"d not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3528,interoperability,stub,stubs-,3528,"de <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3571,interoperability,stub,stubs-,3571,"ementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:722,modifiability,modul,module,722,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:753,modifiability,modul,module,753,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:820,modifiability,modul,module-includes,820,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1154,modifiability,modul,module,1154,"ALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1185,modifiability,modul,module,1185,"gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1252,modifiability,modul,module-includes,1252,"hia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1604,modifiability,modul,module,1604,"cling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1635,modifiability,modul,module,1635,"et rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1702,modifiability,modul,module-includes,1702,le building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2032,modifiability,modul,module,2032,ss.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2063,modifiability,modul,module,2063,laration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2130,modifiability,modul,module-includes,2130, While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/clin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2511,modifiability,modul,module,2511,"s here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2654,modifiability,version,version,2654,"rom input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2678,modifiability,modul,module,2678," file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2709,modifiability,modul,module,2709,"ludes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2778,modifiability,modul,module,2778,"ification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2922,modifiability,modul,module-includes,2922,"te: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3053,modifiability,modul,module,3053,"ilding module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3207,modifiability,modul,module,3207,"fication in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3617,modifiability,modul,module,3617,"d to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3648,modifiability,modul,module,3648,"ry version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3761,modifiability,modul,module-includes,3761,"building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3872,modifiability,modul,module,3872,"/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No respo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4031,modifiability,modul,module,4031,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4117,modifiability,modul,module,4117,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4148,modifiability,modul,module,4148,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4280,modifiability,modul,module-includes,4280,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4391,modifiability,modul,module,4391,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4707,modifiability,version,version,4707,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:6,performance,failur,failure,6,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:420,performance,failur,failure,420,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:878,performance,error,error,878,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1310,performance,error,error,1310,"/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1760,performance,error,error,1760,d' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2188,performance,error,error,2188, 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2488,performance,error,error,2488," previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3029,performance,error,error,3029,"module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3183,performance,error,error,3183,": error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3516,performance,error,error,3516,"std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3849,performance,error,error,3849,"d/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4008,performance,error,error,4008,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4368,performance,error,error,4368,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4437,performance,Error,Error,4437,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4444,performance,Error,Error,4444,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4450,performance,load,loading,4450,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4570,performance,Error,Error,4570,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4654,performance,Error,Error,4654,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:6,reliability,fail,failure,6,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:420,reliability,fail,failure,420,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:924,reliability,doe,does,924,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1356,reliability,doe,does,1356,"ARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1806,reliability,doe,does,1806,luded from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2234,reliability,doe,does,2234, included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2615,reliability,Fail,Failed,2615,". While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:722,safety,modul,module,722,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:753,safety,modul,module,753,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:820,safety,modul,module-includes,820,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:878,safety,error,error,878,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:885,safety,except,exception,885,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1154,safety,modul,module,1154,"ALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1185,safety,modul,module,1185,"gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1252,safety,modul,module-includes,1252,"hia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1310,safety,error,error,1310,"/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1317,safety,except,exception,1317,"2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1604,safety,modul,module,1604,"cling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1635,safety,modul,module,1635,"et rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1702,safety,modul,module-includes,1702,le building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1760,safety,error,error,1760,d' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1767,safety,except,exception,1767,ed from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2032,safety,modul,module,2032,ss.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2063,safety,modul,module,2063,laration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2130,safety,modul,module-includes,2130, While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/clin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2188,safety,error,error,2188, 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2195,safety,except,exception,2195,ported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2488,safety,error,error,2488," previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2511,safety,modul,module,2511,"s here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fata",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2678,safety,modul,module,2678," file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2709,safety,modul,module,2709,"ludes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2778,safety,modul,module,2778,"ification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2922,safety,modul,module-includes,2922,"te: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3029,safety,error,error,3029,"module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3053,safety,modul,module,3053,"ilding module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3183,safety,error,error,3183,": error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3207,safety,modul,module,3207,"fication in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3516,safety,error,error,3516,"std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3617,safety,modul,module,3617,"d to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3648,safety,modul,module,3648,"ry version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3761,safety,modul,module-includes,3761,"building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3849,safety,error,error,3849,"d/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3872,safety,modul,module,3872,"/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No respo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4008,safety,error,error,4008,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4031,safety,modul,module,4031,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4117,safety,modul,module,4117,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4148,safety,modul,module,4148,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4280,safety,modul,module-includes,4280,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4368,safety,error,error,4368,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4391,safety,modul,module,4391,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4437,safety,Error,Error,4437,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4444,safety,Error,Error,4444,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4570,safety,Error,Error,4570,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4654,safety,Error,Error,4654,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3396,testability,assert,assert,3396,"emplate<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3496,testability,stub,stubs,3496,"d not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3528,testability,stub,stubs-,3528,"de <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3571,testability,stub,stubs-,3571,"ementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4857,testability,context,context,4857,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:878,usability,error,error,878,"Build failure on Ubuntu22.04 wsl2; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. **Cmake code:**. cmake ../root_src -DCMAKE_INSTALL_PREFIX=/opt/root -Dbuiltin_gsl=ON -Dmathmore=ON -Dpythia6=ON -DPYTHIA6_LIBRARY=/home/luowt/Apps/pythia6/pythia6/libPythia6.so -DLIBXML2_INCLUDE_DIR=/opt/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(vala",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1310,usability,error,error,1310,"/libxml2-2.8.0/include/libxml2 -DLIBXML2_LIBRARY=/opt/libxml2-2.8.0/lib/libxml2.so. **cmake is ok but make failure**. [ 73%] Built target Dictgen. [ 73%] Building CXX object core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/src/rootcling_stage1.cxx.o. [ 73%] Linking CXX executable src/rootcling_stage1. [ 73%] Built target rootcling_stage1. [ 73%] Generating G__Core.cxx, ../lib/Core.pcm. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:1760,usability,error,error,1760,d' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1214:5: error: exception specification in declaration does not match previous declaration. begin(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:104:31: note: previous declaration is here. template<typename _Tp> _Tp* begin(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2188,usability,error,error,2188, 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1224:5: error: exception specification in declaration does not match previous declaration. begin(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:105:37: note: previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:2488,usability,error,error,2488," previous declaration is here. template<typename _Tp> const _Tp* begin(const valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1234:5: error: exception specification in declaration does not match previous declaration. end(valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:106:31: note: previous declaration is here. template<typename _Tp> _Tp* end(valarray<_Tp>&);. ^. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3029,usability,error,error,3029,"module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:79:. /usr/include/c++/9/valarray:1249:5: error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3183,usability,error,error,3183,": error: exception specification in declaration does not match previous declaration. end(const valarray<_Tp>& __va) noexcept. ^. /usr/include/c++/9/bits/range_access.h:107:37: note: previous declaration is here. template<typename _Tp> const _Tp* end(const valarray<_Tp>&);. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3516,usability,error,error,3516,"std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. While building module 'Cling_Runtime_Extra' imported from /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeF",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:3849,usability,error,error,3849,"d/etc/cling/Interpreter/RuntimeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4008,usability,error,error,4008,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4368,usability,error,error,4368,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4437,usability,Error,Error,4437,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4444,usability,Error,Error,4444,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4570,usability,Error,Error,4570,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/issues/14062:4654,usability,Error,Error,4654,"timeUniverse.h:27:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:. could not build module 'std'. #include <string>. ~~~~~~~~^. /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:. could not build module 'Cling_Runtime_Extra'. #include ""cling/Interpreter/Visibility.h"". ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In file included from input_line_3:1:. In file included from /usr/include/assert.h:35:. In file included from /usr/include/features.h:510:. /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found. # include <gnu/stubs-32.h>. ^~~~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:. In file included from <module-includes>:1:. /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:. In file included from <module-includes>:3:. /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'. #include <cxxabi.h>. ~~~~~~~~^. Error: Error loading the default rootcling header files. make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14062
https://github.com/root-project/root/pull/14063:309,energy efficiency,reduc,reduce,309,"Change default TColor resolution; TColor::GetColor(r,g,b) uses 5bit threshold by. default to create new colors. This differs. from normal X11 with 8bit colors. As a result,. images produced in batch and in interactive. session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and. reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/pull/14063:193,integrability,batch,batch,193,"Change default TColor resolution; TColor::GetColor(r,g,b) uses 5bit threshold by. default to create new colors. This differs. from normal X11 with 8bit colors. As a result,. images produced in batch and in interactive. session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and. reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/pull/14063:193,performance,batch,batch,193,"Change default TColor resolution; TColor::GetColor(r,g,b) uses 5bit threshold by. default to create new colors. This differs. from normal X11 with 8bit colors. As a result,. images produced in batch and in interactive. session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and. reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/pull/14063:327,safety,detect,detecting,327,"Change default TColor resolution; TColor::GetColor(r,g,b) uses 5bit threshold by. default to create new colors. This differs. from normal X11 with 8bit colors. As a result,. images produced in batch and in interactive. session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and. reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/pull/14063:219,security,session,session,219,"Change default TColor resolution; TColor::GetColor(r,g,b) uses 5bit threshold by. default to create new colors. This differs. from normal X11 with 8bit colors. As a result,. images produced in batch and in interactive. session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and. reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/pull/14063:327,security,detect,detecting,327,"Change default TColor resolution; TColor::GetColor(r,g,b) uses 5bit threshold by. default to create new colors. This differs. from normal X11 with 8bit colors. As a result,. images produced in batch and in interactive. session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and. reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/pull/14063:206,usability,interact,interactive,206,"Change default TColor resolution; TColor::GetColor(r,g,b) uses 5bit threshold by. default to create new colors. This differs. from normal X11 with 8bit colors. As a result,. images produced in batch and in interactive. session may differ - see greyscale.C macro. Make default 8bit resolution for colors, and. reduce it only if detecting such display.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14063
https://github.com/root-project/root/issues/14064:165,energy efficiency,current,currently,165,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:983,energy efficiency,current,current,983,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:763,interoperability,platform,platform,763,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:836,interoperability,compatib,compatible,836,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:356,testability,understand,understanding,356,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:805,testability,understand,understand,805,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:1186,testability,context,context,1186,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:261,usability,tool,tools,261,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:267,usability,document,documentation,267,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:666,usability,document,documentation,666,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14064:752,usability,tool,tool,752,"Include Tex Gyre Heros in ROOT fonts; ### Feature description. The Tex Gyre Heros family of fonts (https://www.gust.org.pl/projects/e-foundry/tex-gyre/heros) is the currently used alternative to the Helvetica fonts as suggested by the newly formed CMS analysis tools documentation website https://cms-analysis.docs.cern.ch/ . After some investigation, our understanding is that ROOT either tries to display Helvetica (by e.g. asking for it in the preamble of a PDF image) or falls back to a FreeSans font when that's not possible (see also https://github.com/root-project/root/pull/14049). We should evaluate whether we can also ship Tex Gyre Heros to allow the CMS documentation to report the same type of font being used irrespective of the plotting tool used, platform, PDF viewer. Notably, we need to understand if the licensing is compatible with ours. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. Keep using the FreeSans font as alternative to Helvetica. But the current setup means that e.g. the font displayed in a TCanvas might be different from the font displayed in a PDF viewer on the *same* machine if that PDF viewer cannot display Helvetica. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14064
https://github.com/root-project/root/issues/14065:518,interoperability,specif,specific,518,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:326,performance,time,time,326,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:190,security,expos,expose,190,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:532,security,session,session,532,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:630,testability,context,context,630,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:15,usability,user,users,15,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:30,usability,custom,custom,30,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:200,usability,user,users,200,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/issues/14065:232,usability,custom,custom,232,"Can ROOT allow users to set a custom font at runtime?; ### Feature description. While discussing https://github.com/root-project/root/issues/14064 , a question was raised whether ROOT could expose to users some facility for setting custom fonts at runtime, which would also make that feature request not necessary at the same time. Somehting akin to. ```python. ROOT.SetFont(""MyCustomFont.otf""). ```. Which would need to be respected across all the graphics output, i.e. the canvas, generated PNGs, PDFs etc. for that specific ROOT session. FYI @andrzejnovak @ttedeschi. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14065
https://github.com/root-project/root/pull/14066:27,deployability,Updat,Update,27,Avoid CDT doc in ROOT doc; Update Delaunay2D doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14066
https://github.com/root-project/root/pull/14066:0,safety,Avoid,Avoid,0,Avoid CDT doc in ROOT doc; Update Delaunay2D doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14066
https://github.com/root-project/root/pull/14066:27,safety,Updat,Update,27,Avoid CDT doc in ROOT doc; Update Delaunay2D doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14066
https://github.com/root-project/root/pull/14066:27,security,Updat,Update,27,Avoid CDT doc in ROOT doc; Update Delaunay2D doc.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14066
https://github.com/root-project/root/pull/14067:514,deployability,updat,updated,514,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:1,energy efficiency,Core,Core,1,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:285,interoperability,distribut,distributed,285,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:484,safety,test,tested,484,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:514,safety,updat,updated,514,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:235,security,hash,hash,235,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:514,security,updat,updated,514,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:484,testability,test,tested,484,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/pull/14067:279,usability,help,helps,279,"[Core] New TSystem::CompileMacro flag, ""h""; # This Pull request:. Adds a new flag to CompileMacro, ""h"". ## Changes or fixes:. This new functionality allows not to rebuild the macro even if the file is newer than the library based on a hash built for the macro and its name. This helps distributed execution, providing a clean way to augment python analyses with accelerated functions in C++ and compiled when the worker cannot be setup but just individual tasks. ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14067
https://github.com/root-project/root/issues/14068:2112,availability,Operat,Operating,2112,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:36,deployability,version,version,36,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:637,deployability,version,version,637,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:660,deployability,Version,Versions,660,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:714,deployability,version,version,714,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1041,deployability,patch,patches,1041,"as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1242,deployability,version,version,1242," Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but sinc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1274,deployability,version,versions,1274,"/root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1351,deployability,version,version,1351,"ers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1377,deployability,build,build,1377,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1566,deployability,version,version,1566,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1616,deployability,version,version,1616,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1888,deployability,patch,patches,1888,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:2069,deployability,Instal,Installation,2069,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:36,integrability,version,version,36,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:637,integrability,version,version,637,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:660,integrability,Version,Versions,660,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:714,integrability,version,version,714,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1242,integrability,version,version,1242," Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but sinc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1274,integrability,version,versions,1274,"/root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1351,integrability,version,version,1351,"ers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1566,integrability,version,version,1566,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1616,integrability,version,version,1616,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:36,modifiability,version,version,36,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:637,modifiability,version,version,637,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:660,modifiability,Version,Versions,660,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:714,modifiability,version,version,714,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1242,modifiability,version,version,1242," Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but sinc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1274,modifiability,version,versions,1274,"/root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` outpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1351,modifiability,version,version,1351,"ers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1566,modifiability,version,version,1566,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1616,modifiability,version,version,1616,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1041,safety,patch,patches,1041,"as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1888,safety,patch,patches,1888,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:318,security,Team,Team,318,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:924,security,Team,Team,924,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1041,security,patch,patches,1041,"as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1771,security,Team,Team,1771,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1888,security,patch,patches,1888,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:2159,testability,context,context,2159,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:484,usability,help,help,484,"ROOT 6.30/00 reports `root-config --version` as 6.30.00; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. --------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1084,usability,help,help,1084," [X] Checked for duplicates. ### Description. Compare the following output:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.26/04 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation meth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1393,usability,tool,tools,1393,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1457,usability,tool,tooling,1457,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1494,usability,tool,tooling,1494,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/issues/14068:1931,usability,help,help,1931,"uilt for linuxx8664gcc on Jun 07 2022, 16:01:16 |. | From tags/v6-26-04@v6-26-04 |. | With g++ (GCC) 11.2.0 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.26/04. ```. Versions in the banner and returned by `root-config --version` match, but with 6.30/00 I get the following:. ```. $ root . ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .q. $ root-config --version. 6.30.00. ```. i.e. the versions do not match (note the second dot in the output from `root-config --version`). Since some old build macros of tools relying on ROOT tend to use `root-config`, this may break tooling (at least I have some legacy tooling which was broken :wink: ). . ### Reproducer. Run `root-config --version` and compare it to the banner. . ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 14 2023, 23:16:19 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. Gentoo (Portage). ### Operating system. Gentoo Linux. ### Additional context. Of course, switching to the two dot notation would be perfectly fine, but since banner and `root-config` output do not match, this is likely not intended and there might be a bug lurking somewhere.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14068
https://github.com/root-project/root/pull/14069:62,modifiability,exten,extends,62,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:207,safety,test,tests,207,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:374,safety,test,test,374,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:207,testability,test,tests,207,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:374,testability,test,test,374,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:13,usability,support,support,13,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:74,usability,support,support,74,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14069:360,usability,Custom,CustomStruct,360,"[ntuple] Add support for `std::unordered_set` fields; This PR extends the support for `std::set` fields with `std::unordered_set` fields. N.B. We might want to consider moving the dictionary entries for the tests of these types (along with the ones for `std::map` fields) to a dedicated LinkDef file, since technically they don't have anything to do with the `CustomStruct` test type. This can be addressed in a separate PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14069
https://github.com/root-project/root/pull/14070:249,safety,avoid,avoids,249,[RF] Prefer member initializers and default member initialization; Apply the suggestions by the following two checks:. * `cppcoreguidelines-prefer-member-initializer`. * `modernize-use-default-member-init`. This makes the code much less verbose and avoids possible mistakes in the initialization. I carefully went over the changes manually to make sure that they are correct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14070
https://github.com/root-project/root/pull/14070:5,usability,Prefer,Prefer,5,[RF] Prefer member initializers and default member initialization; Apply the suggestions by the following two checks:. * `cppcoreguidelines-prefer-member-initializer`. * `modernize-use-default-member-init`. This makes the code much less verbose and avoids possible mistakes in the initialization. I carefully went over the changes manually to make sure that they are correct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14070
https://github.com/root-project/root/pull/14070:140,usability,prefer,prefer-member-initializer,140,[RF] Prefer member initializers and default member initialization; Apply the suggestions by the following two checks:. * `cppcoreguidelines-prefer-member-initializer`. * `modernize-use-default-member-init`. This makes the code much less verbose and avoids possible mistakes in the initialization. I carefully went over the changes manually to make sure that they are correct.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14070
https://github.com/root-project/root/pull/14071:185,integrability,event,eventually,185,"[RF] Deprecate RooFit legacy iterators; The STL-compatible alternatives are now around long enough (since ROOT 6.18, 4 years ago) so after this grace period it is time to deprecate and eventually remove the old iterators.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14071
https://github.com/root-project/root/pull/14071:48,interoperability,compatib,compatible,48,"[RF] Deprecate RooFit legacy iterators; The STL-compatible alternatives are now around long enough (since ROOT 6.18, 4 years ago) so after this grace period it is time to deprecate and eventually remove the old iterators.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14071
https://github.com/root-project/root/pull/14071:163,performance,time,time,163,"[RF] Deprecate RooFit legacy iterators; The STL-compatible alternatives are now around long enough (since ROOT 6.18, 4 years ago) so after this grace period it is time to deprecate and eventually remove the old iterators.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14071
https://github.com/root-project/root/issues/14102:3805,availability,error,error,3805,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3927,availability,Error,Error,3927,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4022,availability,Error,Error,4022,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4062,availability,Error,Error,4062,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:12,deployability,instal,installing,12,"issue while installing root ; ```. [ 91%] Linking CXX shared library ../../lib/libASImage.so. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCubeBezier(int, int, int, int, int, int, char const*, unsigned int)':. TASImage.cxx:(.text+0x1bdb): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCircle(int, int, int, char const*, int)':. TASImage.cxx:(.text+0x1dd6): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x1ed4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawStraightEllips(int, int, int, int, char const*, int)':. TASImage.cxx:(.text+0x262b): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x2731): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0x28ad): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::SetDefaults()':. TASImage.cxx:(.text+0x43b3): undefined reference to `asim_set_application_name'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Gradient(unsigned int, char const*, char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0x8dde): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Bevel(int, int, unsigned int, unsigned int, char const*, char const*, unsigned short, bool)':. TASImage.cxx:(.text+0x95d4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x95e3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Pad(char const*, unsigned int, unsigned int, unsigned int, unsigned int)':. TASImage.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3892,deployability,build,build,3892,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:173,energy efficiency,Draw,DrawCubeBezier,173,"issue while installing root ; ```. [ 91%] Linking CXX shared library ../../lib/libASImage.so. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCubeBezier(int, int, int, int, int, int, char const*, unsigned int)':. TASImage.cxx:(.text+0x1bdb): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCircle(int, int, int, char const*, int)':. TASImage.cxx:(.text+0x1dd6): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x1ed4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawStraightEllips(int, int, int, int, char const*, int)':. TASImage.cxx:(.text+0x262b): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x2731): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0x28ad): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::SetDefaults()':. TASImage.cxx:(.text+0x43b3): undefined reference to `asim_set_application_name'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Gradient(unsigned int, char const*, char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0x8dde): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Bevel(int, int, unsigned int, unsigned int, char const*, char const*, unsigned short, bool)':. TASImage.cxx:(.text+0x95d4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x95e3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Pad(char const*, unsigned int, unsigned int, unsigned int, unsigned int)':. TASImage.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:404,energy efficiency,Draw,DrawCircle,404,"issue while installing root ; ```. [ 91%] Linking CXX shared library ../../lib/libASImage.so. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCubeBezier(int, int, int, int, int, int, char const*, unsigned int)':. TASImage.cxx:(.text+0x1bdb): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCircle(int, int, int, char const*, int)':. TASImage.cxx:(.text+0x1dd6): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x1ed4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawStraightEllips(int, int, int, int, char const*, int)':. TASImage.cxx:(.text+0x262b): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x2731): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0x28ad): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::SetDefaults()':. TASImage.cxx:(.text+0x43b3): undefined reference to `asim_set_application_name'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Gradient(unsigned int, char const*, char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0x8dde): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Bevel(int, int, unsigned int, unsigned int, char const*, char const*, unsigned short, bool)':. TASImage.cxx:(.text+0x95d4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x95e3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Pad(char const*, unsigned int, unsigned int, unsigned int, unsigned int)':. TASImage.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:697,energy efficiency,Draw,DrawStraightEllips,697,"issue while installing root ; ```. [ 91%] Linking CXX shared library ../../lib/libASImage.so. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCubeBezier(int, int, int, int, int, int, char const*, unsigned int)':. TASImage.cxx:(.text+0x1bdb): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCircle(int, int, int, char const*, int)':. TASImage.cxx:(.text+0x1dd6): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x1ed4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawStraightEllips(int, int, int, int, char const*, int)':. TASImage.cxx:(.text+0x262b): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x2731): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0x28ad): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::SetDefaults()':. TASImage.cxx:(.text+0x43b3): undefined reference to `asim_set_application_name'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Gradient(unsigned int, char const*, char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0x8dde): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Bevel(int, int, unsigned int, unsigned int, char const*, char const*, unsigned short, bool)':. TASImage.cxx:(.text+0x95d4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x95e3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Pad(char const*, unsigned int, unsigned int, unsigned int, unsigned int)':. TASImage.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:2691,energy efficiency,Draw,DrawFillArea,2691,"defined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x95e3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Pad(char const*, unsigned int, unsigned int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0x9b2b): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImag",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3254,energy efficiency,Draw,DrawRectangle,3254,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3510,energy efficiency,Draw,DrawBox,3510,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:54,interoperability,share,shared,54,"issue while installing root ; ```. [ 91%] Linking CXX shared library ../../lib/libASImage.so. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCubeBezier(int, int, int, int, int, int, char const*, unsigned int)':. TASImage.cxx:(.text+0x1bdb): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawCircle(int, int, int, char const*, int)':. TASImage.cxx:(.text+0x1dd6): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x1ed4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawStraightEllips(int, int, int, int, char const*, int)':. TASImage.cxx:(.text+0x262b): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x2731): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0x28ad): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::SetDefaults()':. TASImage.cxx:(.text+0x43b3): undefined reference to `asim_set_application_name'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Gradient(unsigned int, char const*, char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0x8dde): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Bevel(int, int, unsigned int, unsigned int, char const*, char const*, unsigned short, bool)':. TASImage.cxx:(.text+0x95d4): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0x95e3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::Pad(char const*, unsigned int, unsigned int, unsigned int, unsigned int)':. TASImage.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3805,performance,error,error,3805,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3927,performance,Error,Error,3927,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4022,performance,Error,Error,4022,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4062,performance,Error,Error,4062,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3805,safety,error,error,3805,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3927,safety,Error,Error,3927,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4022,safety,Error,Error,4022,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4062,safety,Error,Error,4062,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3805,usability,error,error,3805,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3831,usability,statu,status,3831,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:3927,usability,Error,Error,3927,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4022,usability,Error,Error,4022,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/issues/14102:4062,usability,Error,Error,4062,"ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::PutPixel(int, int, char const*)':. TASImage.cxx:(.text+0xa53a): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xa780): more undefined references to `asim_parse_argb_color' follow. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::ReadImage(char const*, TImage::EImageFileTypes)':. TASImage.cxx:(.text+0xbbf8): undefined reference to `asim_set_output_threshold'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawFillArea(unsigned int, TPoint*, char const*, char const*, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xd693): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: TASImage.cxx:(.text+0xdb91): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::FillRectangle(char const*, int, int, unsigned int, unsigned int)':. TASImage.cxx:(.text+0xe6c3): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawRectangle(unsigned int, unsigned int, unsigned int, unsigned int, char const*, unsigned int)':. TASImage.cxx:(.text+0xed0c): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o: in function `TASImage::DrawBox(int, int, int, int, char const*, unsigned int, int)':. TASImage.cxx:(.text+0xefe9): undefined reference to `asim_parse_argb_color'. /usr/bin/ld: CMakeFiles/ASImage.dir/src/TASImage.cxx.o:TASImage.cxx:(.text+0xf019): more undefined references to `asim_parse_argb_color' follow. collect2: error: ld returned 1 exit status. gmake[2]: *** [graf2d/asimage/CMakeFiles/ASImage.dir/build.make:135: lib/libASImage.so] Error 1. gmake[1]: *** [CMakeFiles/Makefile2:37975: graf2d/asimage/CMakeFiles/ASImage.dir/all] Error 2. gmake: *** [Makefile:156: all] Error 2. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14102
https://github.com/root-project/root/pull/14072:94,deployability,contain,containers,94,"[ntuple] Move STL dictionary entries to separate file; This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14072
https://github.com/root-project/root/pull/14072:118,safety,test,testing,118,"[ntuple] Move STL dictionary entries to separate file; This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14072
https://github.com/root-project/root/pull/14072:367,safety,avoid,avoid,367,"[ntuple] Move STL dictionary entries to separate file; This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14072
https://github.com/root-project/root/pull/14072:118,testability,test,testing,118,"[ntuple] Move STL dictionary entries to separate file; This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14072
https://github.com/root-project/root/pull/14072:235,usability,Custom,CustomStruct,235,"[ntuple] Move STL dictionary entries to separate file; This PR moves the dictionaries for STL containers required for testing to a separate LinkDef. The rationale behind this is that these dictionaries are not directly related to the `CustomStruct` and once #13904 and #14069 are merged even more (unrelated) dictionary entries would be added, so it would be good to avoid clutter and separate these.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14072
https://github.com/root-project/root/pull/14074:83,deployability,depend,dependency,83,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:83,integrability,depend,dependency,83,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:184,interoperability,XML,XML,184,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:83,modifiability,depend,dependency,83,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:83,safety,depend,dependency,83,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:131,safety,test,test,131,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:83,testability,depend,dependency,83,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:131,testability,test,test,131,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/pull/14074:64,usability,custom,custom,64,"[RF] RooFit tutorial improvements and fixes; * Removes unneeded custom pdfs. * Fix dependency of RooStats tutorials on HistFactory test data creation. * Veto all RooStats tutorials if XML is not found, just like is done for the HistFactory tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14074
https://github.com/root-project/root/issues/14075:2101,availability,operat,operator,2101,"llvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2264,availability,operat,operator,2264,"che-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::Mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2434,availability,operat,operator,2434,"olink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2842,availability,Error,Error,2842,"9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3566,availability,unavail,unavailable,3566,"195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4112,availability,unavail,unavailable,4112,"har const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4134,availability,unavail,unavailable,4134,"r const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4210,availability,unavail,unavailable,4210," std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4336,availability,unavail,unavailable,4336,"07. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4357,availability,unavail,unavailable,4357,"00083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4377,availability,unavail,unavailable,4377,"g.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4967,availability,unavail,unavailable,4967,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5222,availability,unavail,unavailable,5222,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5255,availability,unavail,unavailable,5255,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5436,availability,unavail,unavailable,5436,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5459,availability,unavail,unavailable,5459,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5681,availability,Operat,Operating,5681,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:54,deployability,modul,modules,54,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:245,deployability,stack,stack,245,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:340,deployability,build,build,340,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:361,deployability,resourc,resources,361,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:397,deployability,build,build,397,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:508,deployability,build,build,508,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:595,deployability,build,build,595,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:790,deployability,build,build,790,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:843,deployability,build,build,843,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:902,deployability,build,build,902,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:977,deployability,build,build,977,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1202,deployability,build,build,1202,"where in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1222,deployability,modul,module,1222,"erpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_trai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1229,deployability,modul,modulemap,1229," Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1296,deployability,build,build,1296,"gs as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<ch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1369,deployability,modul,module-maps,1369,"```. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1407,deployability,build,build,1407,"lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3195,deployability,Modul,ModuleFileExtension,3195," std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3265,deployability,Modul,ModuleFileExtension,3265,"td::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3580,deployability,modul,moduleExtensions,3580,"x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3999,deployability,Modul,ModuleFileExtension,3999,"e const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplicatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4069,deployability,Modul,ModuleFileExtension,4069,"`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5610,deployability,version,version,5610,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5648,deployability,Instal,Installation,5648,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5712,deployability,RELEAS,RELEASE-,5712,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:361,energy efficiency,resourc,resources,361,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:466,energy efficiency,Current,Current,466,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1128,energy efficiency,optim,optimize-regalloc,1128,"## Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2245,energy efficiency,alloc,allocator,2245,"[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::sha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2342,energy efficiency,alloc,allocator,2342,"gs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3227,energy efficiency,alloc,allocator,3227,">, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at uniqu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4031,energy efficiency,alloc,allocator,4031,". frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5610,integrability,version,version,5610,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:924,interoperability,plug,plugins,924,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:54,modifiability,modul,modules,54,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1222,modifiability,modul,module,1222,"erpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_trai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1229,modifiability,modul,modulemap,1229," Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1369,modifiability,modul,module-maps,1369,"```. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3195,modifiability,Modul,ModuleFileExtension,3195," std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3265,modifiability,Modul,ModuleFileExtension,3265,"td::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3580,modifiability,modul,moduleExtensions,3580,"x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3999,modifiability,Modul,ModuleFileExtension,3999,"e const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplicatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4069,modifiability,Modul,ModuleFileExtension,4069,"`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5610,modifiability,version,version,5610,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:361,performance,resourc,resources,361,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1128,performance,optimiz,optimize-regalloc,1128,"## Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1266,performance,cach,cache-path,1266,"ntouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operato",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2842,performance,Error,Error,2842,"9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2967,reliability,Diagno,DiagnosticsEngine,2967,"rt + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:54,safety,modul,modules,54,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:361,safety,resourc,resources,361,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1222,safety,modul,module,1222,"erpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_trai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1229,safety,modul,modulemap,1229," Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1369,safety,modul,module-maps,1369,"```. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2842,safety,Error,Error,2842,"9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3195,safety,Modul,ModuleFileExtension,3195," std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3265,safety,Modul,ModuleFileExtension,3265,"td::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3580,safety,modul,moduleExtensions,3580,"x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:3999,safety,Modul,ModuleFileExtension,3999,"e const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplicatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:4069,safety,Modul,ModuleFileExtension,4069,"`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:390,security,hack,hack,390,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1542,security,sign,signal,1542,"ldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1803,security,sign,signal,1803," interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:251,testability,trace,trace,251,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:361,testability,resourc,resources,361,"[FreeBSD] root.exe crash at end of compilation during modules.idx generation; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter. Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):. ````. [mkrzewic@hack ~/build/root]$ lldb bin/root.exe. (lldb) target create ""bin/root.exe"". Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2967,testability,Diagno,DiagnosticsEngine,2967,"rt + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:5739,testability,context,context,5739,"*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::Interpreter>::__unique_single std::__1::make_unique<cling::Interpreter, unsigned long, char const**, TString&, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > >&, void*&>(__args=<unavailable>, __args=<unavailable>, __args=0x0000000820b5e568, __args=0x0000000820b5e5d0, __args=<unavailable>) at unique_ptr.h:725:32. frame #13: 0x000000083506c00f libCling.so`TCling::TCling(this=0x000000082ecc4600, name=<unavailable>, title=<unavailable>, argv=<unavailable>, interpLibHandle=0x000000082ddf0808) at TCling.cxx:1546:19. frame #14: 0x0000000835066ec9 libCling.so`::CreateInterpreter(interpLibHandle=0x000000082ddf0808, argv=0x0000000820b5e8a0) at TCling.cxx:609:22. frame #15: 0x0000000822e85418 libCore.so`TROOT::InitInterpreter(this=0x0000000823028a50) at TROOT.cxx:2087:19. frame #16: 0x0000000822e85333 libCore.so`ROOT::Internal::GetROOT2() at TROOT.cxx:389:22. frame #17: 0x0000000822e3a23a libCore.so`TApplication::TApplication(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, (null)=<unavailable>, numOptions=0) at TApplication.cxx:153:9. frame #18: 0x0000000821cbcccb libRint.so`TRint::TRint(this=0x000000082ece43c0, appClassName=""Rint"", argc=0x0000000820b60a9c, argv=0x0000000820b60b18, options=0x0000000000000000, numOptions=0, noLogo=<unavailable>, exitOnUnknownArgs=<unavailable>) at TRint.cxx:173:6. frame #19: 0x00000000002020d1 root.exe`main(argc=1, argv=0x0000000820b60b18) at rmain.cxx:80:24. frame #20: 0x0000000000201d60 root.exe`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7. (lldb). ````. ### Reproducer. cmake ../../src/root -DCMAKE_CXX_STANDARD=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo. ### ROOT version. recent master (@bce645). ### Installation method. source. ### Operating system. FreeBSD 13.2-RELEASE-p5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1487,usability,stop,stopped,1487," '/home/mkrzewic/build/root/bin/root.exe' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1528,usability,stop,stop,1528,"e' (x86_64). (lldb) run. Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64). interpArgs.size(): 20. interpArgs[0]: cling4root. interpArgs[1]: -DNDEBUG. interpArgs[2]: -UDEBUG. interpArgs[3]: -U_DEBUG. interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:1789,usability,stop,stop,1789,"uild/root/etc/. interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling. interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include. interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/. interpArgs[8]: -Wno-undefined-inline. interpArgs[9]: -fsigned-char. interpArgs[10]: -O1. interpArgs[11]: -mllvm. interpArgs[12]: -optimize-regalloc=0. interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap. interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib. interpArgs[15]: -fmodules. interpArgs[16]: -fno-implicit-module-maps. interpArgs[17]: -Rmodule-build. interpArgs[18]: -fno-autolink. interpArgs[19]: --ptrcheck. Process 35096 stopped. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. libc.so.7`__sys_thr_kill:. -> 0x8279b9dca <+10>: jb 0x8279b7f28. 0x8279b9dd0 <+16>: retq. 0x8279b9dd1: int3. 0x8279b9dd2: int3. (lldb) bt. * thread #1, name = 'root.exe', stop reason = signal SIGABRT. * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14075:2842,usability,Error,Error,2842,"9dca libc.so.7`__sys_thr_kill + 10. frame #1: 0x00000008279326f4 libc.so.7`__raise + 52. frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73. frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73. frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111. frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195. frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44. frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195. frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154. frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::CompilerInstance const&, void*, bool) +378. frame #10: 0x0000000835161b6b libCling.so`cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__1::vector<std::__1::shared_ptr<clang::ModuleFileExtension>, std::__1::allocator<std::__1::shared_ptr<clang::ModuleFileExtension> > > const&, void*, bool, cling::Interpreter const*) + 2107. frame #11: 0x000000083506c054 libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] cling::Interpreter::Interpreter(this=0x000000082eccac00, argc=20, argv=0x000000082edb3000, llvmdir=<unavailable>, moduleExtensions=0x0000000820b5e5d0, extraLibHandle=0x000000082ddf0808, noRuntime=false) at Interpreter.h:367:11. frame #12: 0x000000083506c03c libCling.so`TCling::TCling(char const*, char const*, char const* const*, void*) [inlined] std::__1::__unique_if<cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14075
https://github.com/root-project/root/issues/14076:978,availability,Operat,Operating,978,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:888,deployability,version,version,888,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:946,deployability,Instal,Installation,946,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:967,deployability,build,build,967,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:252,integrability,sub,subsystem,252,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:888,integrability,version,version,888,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:31,interoperability,platform,platform,31,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:888,modifiability,version,version,888,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:99,performance,deadlock,deadlock,99,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/issues/14076:1032,testability,context,context,1032,"TTree Scan function on windows platform, using vscode to connect wsl connection jupyter reported a deadlock.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. On windows, when vscode is used to connect pyroot's jupyter of wsl subsystem, pyroot's TTree Sacn function is stuck. Other jupyter lab in wsl do not have this situation. Why is this, is there any solution? Note that vscode is used to connect to jupyter lab in wsl. ### Reproducer. ```. from ctypes import c_double, c_int. from ROOT import TFile, TTree,TCanvas. guan = TFile(""guan.root"", ""recreate""). ming = TTree(""ming"", ""This is my first tree""). i = c_int(1). a = c_double(2.2). b = c_double(0.0). ming.Branch(""i"", i, ""i/I""). ming.Branch(""a"", a, ""a/D""). ming.Branch(""b"", a, ""b/D""). for j in range(100):. i = j. a = i * 0.1. b = a * a * 9. ming.Fill(). . ming.Write(). # BUG. ming.Scan(). ```. ### ROOT version. root_v6.30.01.Linux-ubuntu22-x86_64-gcc11.4. ### Installation method. build. ### Operating system. wls and ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14076
https://github.com/root-project/root/pull/14077:696,availability,error,error,696,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:732,availability,failur,failure,732,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:826,availability,consist,consistency,826,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:847,availability,error,errors,847,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:983,availability,error,error,983,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:732,deployability,fail,failure,732,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:745,deployability,continu,continues,745,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:969,deployability,fail,fail,969,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1013,deployability,log,logs,1013,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1087,deployability,updat,updated,1087,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:5,integrability,pub,public,5,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:282,integrability,pub,public,282,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:432,integrability,pub,public,432,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:702,integrability,messag,messages,702,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:780,integrability,pub,public,780,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:989,integrability,messag,messages,989,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:702,interoperability,messag,messages,702,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:989,interoperability,messag,messages,989,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:696,performance,error,error,696,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:732,performance,failur,failure,732,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:847,performance,error,errors,847,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:983,performance,error,error,983,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:732,reliability,fail,failure,732,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:969,reliability,fail,fail,969,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:199,safety,except,exceptions,199,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:696,safety,error,error,696,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:847,safety,error,errors,847,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:983,safety,error,error,983,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1013,safety,log,logs,1013,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1057,safety,test,tested,1057,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1087,safety,updat,updated,1087,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:143,security,modif,modified,143,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1013,security,log,logs,1013,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1087,security,updat,updated,1087,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1013,testability,log,logs,1013,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:1057,testability,test,tested,1057,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:696,usability,error,error,696,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:794,usability,user,user,794,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:826,usability,consist,consistency,826,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:847,usability,error,errors,847,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:858,usability,stop,stop,858,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14077:983,usability,error,error,983,"Made public TH1::CheckConsistency (2); # This Pull request:. This is a follow up of https://github.com/root-project/root/pull/13748, which was modified by . @guitargeek to fix the unnecessary use of exceptions. ## Changes or fixes:. Made the static function `TH1::CheckConsistency` public, and changed its return type to `Int_t`. Since the meaning of the returned integer is actually part of `EInconsistencyBits`, I made the `enum` public as well (but left the return value type to `Int_t`). This is done in a separate commit in case it is decided to keep the `enum` itself as an implementation detail. ## Motivation. At the moment `TH1::CheckConsistency` is called internally by `TH1::Add`, and error messages are print in case of failure, but continues the execution. Making it public allows user code to manually check the consistency to catch errors and stop the program. This is especially useful for programs that make hundreds of `Add`s, out of which only a few fail, and the error messages may be lost in logs and go unnoticed. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14077
https://github.com/root-project/root/pull/14078:0,deployability,Updat,Update,0,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:130,deployability,updat,updated,130,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:0,safety,Updat,Update,0,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:100,safety,test,tested,100,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:130,safety,updat,updated,130,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:0,security,Updat,Update,0,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:130,security,updat,updated,130,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14078:100,testability,test,tested,100,Update FindZSTD.cmake; # This Pull request:. ## Changes or fixes:. Fix a typo. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14078
https://github.com/root-project/root/pull/14080:230,deployability,updat,updated,230,"[webgui] use loopback by default [6.30]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14080
https://github.com/root-project/root/pull/14080:200,safety,test,tested,200,"[webgui] use loopback by default [6.30]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14080
https://github.com/root-project/root/pull/14080:230,safety,updat,updated,230,"[webgui] use loopback by default [6.30]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14080
https://github.com/root-project/root/pull/14080:230,security,updat,updated,230,"[webgui] use loopback by default [6.30]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14080
https://github.com/root-project/root/pull/14080:200,testability,test,tested,200,"[webgui] use loopback by default [6.30]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14080
https://github.com/root-project/root/pull/14081:230,deployability,updat,updated,230,"[webgui] use loopback by default [6.28]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14081
https://github.com/root-project/root/pull/14081:200,safety,test,tested,200,"[webgui] use loopback by default [6.28]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14081
https://github.com/root-project/root/pull/14081:230,safety,updat,updated,230,"[webgui] use loopback by default [6.28]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14081
https://github.com/root-project/root/pull/14081:230,security,updat,updated,230,"[webgui] use loopback by default [6.28]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14081
https://github.com/root-project/root/pull/14081:200,testability,test,tested,200,"[webgui] use loopback by default [6.28]; Default value is on in C++ code,. but was remained off in system.rootrc and over-rulling C++. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14081
https://github.com/root-project/root/pull/14082:410,deployability,updat,updates,410,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:619,deployability,updat,update,619,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:706,deployability,updat,updated,706,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:29,energy efficiency,core,core,29,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:262,energy efficiency,core,core,262,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:121,modifiability,maintain,maintained,121,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:419,modifiability,pac,package,419,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:121,safety,maintain,maintained,121,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:410,safety,updat,updates,410,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:619,safety,updat,update,619,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:676,safety,test,tested,676,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:706,safety,updat,updated,706,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:410,security,updat,updates,410,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:619,security,updat,update,619,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:706,security,updat,updated,706,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14082:676,testability,test,tested,676,[RF] Adding RooBSplines as a core class to RooFit; The RooBSplines code was originally developed by Aaron Armbruster and maintained internally within the ATLAS collaboration since 2012. This PR adds the `RooBSplines` class and the `RooBSplineBases` class to the core RooFit ecosystem. . ## Changes or fixes:. added `RooBSplines.cxx` and `RooBSplineBases.cxx` with associated headers and CMakeLists and LinkDef updates. package was moved to /root/roofit/roofit/ rather than [roostats/histfactory](https://github.com/svenkreiss/roostats/commits/development/roofit/histfactory/inc/RooStats/HistFactory/RooBSplineBases.h). update of #14015 rebased to master. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14082
https://github.com/root-project/root/pull/14083:166,interoperability,Prox,ProxiedSTLContainer,166,"[ntuple] Move includes in test helpers to correct header file; This PR is a minor follow-up from #14072, moving some leftover `#include`s from `CustomStruct.hxx` to `ProxiedSTLContainer.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14083
https://github.com/root-project/root/pull/14083:26,safety,test,test,26,"[ntuple] Move includes in test helpers to correct header file; This PR is a minor follow-up from #14072, moving some leftover `#include`s from `CustomStruct.hxx` to `ProxiedSTLContainer.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14083
https://github.com/root-project/root/pull/14083:26,testability,test,test,26,"[ntuple] Move includes in test helpers to correct header file; This PR is a minor follow-up from #14072, moving some leftover `#include`s from `CustomStruct.hxx` to `ProxiedSTLContainer.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14083
https://github.com/root-project/root/pull/14083:31,usability,help,helpers,31,"[ntuple] Move includes in test helpers to correct header file; This PR is a minor follow-up from #14072, moving some leftover `#include`s from `CustomStruct.hxx` to `ProxiedSTLContainer.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14083
https://github.com/root-project/root/pull/14083:144,usability,Custom,CustomStruct,144,"[ntuple] Move includes in test helpers to correct header file; This PR is a minor follow-up from #14072, moving some leftover `#include`s from `CustomStruct.hxx` to `ProxiedSTLContainer.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14083
https://github.com/root-project/root/issues/14084:979,availability,error,error,979,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1806,availability,state,state,1806,"d::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2121,availability,state,state,2121,"roduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2479,availability,Failur,Failure,2479,"hub.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/fl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:114,deployability,continu,continuation,114,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:295,deployability,build,builds,295,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:319,deployability,modul,modules,319,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:342,deployability,build,builds,342,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:391,deployability,observ,observed,391,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:571,deployability,build,build,571,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:577,deployability,configurat,configuration,577,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:988,deployability,observ,observed,988,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1153,deployability,build,build,1153,"https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2014,deployability,Observ,Observed,2014,"pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Expe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2479,deployability,Fail,Failure,2479,"hub.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/fl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2588,deployability,Stack,Stack,2588,"(also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2747,energy efficiency,core,core,2747,". std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. #5 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:3102,energy efficiency,alloc,allocator,3102,"nt64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", . typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478. #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""). at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:577,integrability,configur,configuration,577,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1806,integrability,state,state,1806,"d::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2121,integrability,state,state,2121,"roduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:562,interoperability,specif,specific,562,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1351,interoperability,Prox,ProxiedSTLContainerLinkDef,1351,"_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:319,modifiability,modul,modules,319,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:577,modifiability,configur,configuration,577,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:979,performance,error,error,979,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2479,performance,Failur,Failure,2479,"hub.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/fl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:785,reliability,pra,pragma,785,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:832,reliability,pra,pragma,832,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:920,reliability,doe,does,920,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2479,reliability,Fail,Failure,2479,"hub.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/fl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:319,safety,modul,modules,319,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:426,safety,test,tests,426,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:979,safety,error,error,979,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1346,safety,test,test,1346," with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2492,safety,except,exception,2492,"roject/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:3819,safety,test,test,3819,"stOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", . typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478. #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:4054,safety,test,test,4054,"stOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", . typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478. #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:577,security,configur,configuration,577,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2263,security,checksum,checksum,2263,"root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> ()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:391,testability,observ,observed,391,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:426,testability,test,tests,426,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:988,testability,observ,observed,988,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1346,testability,test,test,1346," with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 ty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2014,testability,Observ,Observed,2014,"pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Expe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2312,testability,Emul,Emulation,2312,"f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2354,testability,Emul,Emulation,2354,"TLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:2594,testability,trace,trace,2594,"make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ### From the snippet added above:. ```. The TClass for std::pair<char,std::int64_t> is in state: 2 and has: . OBJ: TListOfDataMembers	TListOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RField",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:3819,testability,test,test,3819,"stOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", . typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478. #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:4054,testability,test,test,4054,"stOfDataMembers	List of TDataMembers for a class : 0. StreamerInfo for class: pair<char,long>, checksum=0xb5fb752. char first offset= 0 type= 1 Emulation . long second offset= 8 type= 4 Emulation . i= 0, first type= 1, offset= 0, len=1, method=0. i= 1, second type= 4, offset= 8, len=1, method=0. unknown file: Failure. C++ exception with description ""Insufficient information for std::pair<char,std::int64_t>. ```. ### Stack trace from GDB. (When the above snippet is not included). ```. #0 0x00007ffff730c6fe in TDataMember::GetOffset (this=0x0) at /home/florine/cern/root/src/core/meta/src/TDataMember.cxx:445. #1 0x00007ffff7d2a7c6 in ROOT::Experimental::RPairField::RPairField (this=0x26dc5d0, fieldName=..., itemFields=...). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:2936. #2 0x00007ffff7d3181f in std::make_unique<ROOT::Experimental::RPairField, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::array<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase, std::default_delete<ROOT::Experimental::Detail::RFieldBase> >, 2ul>&> () at /usr/include/c++/13/bits/unique_ptr.h:1070. #3 ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", canonicalType=""std::pair<char,std::int64_t>"", . typeAlias=""std::pair<char,std::int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:440. #4 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""_0"", typeName=""std::pair<char,std::int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. #5 0x00007ffff7d32224 in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", canonicalType=""std::map<char,int64_t>"", . typeAlias=""std::map<char,int64_t>"") at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:478. #6 0x00007ffff7d32f1c in ROOT::Experimental::Detail::RFieldBase::Create (fieldName=""test"", typeName=""std::map<char, int64_t>""). at /home/florine/cern/root/src/tree/ntuple/v7/src/RField.cxx:356. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:979,usability,error,error,979,"[ntuple] `RRecordField` creation crashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14084:1028,usability,Custom,CustomStruct,1028,"rashes when `TStreamerInfo` has insufficient information; *N.B: This issue is a continuation of the discussion started in https://github.com/root-project/root/pull/13904#discussion_r1395618778*. It seems like additional dictionary entries are required for ROOT builds with runtime C++ modules disabled (i.e. builds with `-Druntime_cxxmodules=off`). This is observed in the `ntuple_types.cxx` tests for `std::map` fields. These fields have an inner field of type `std::pair` representing the key and value of each item. For this specific build configuration, it is required to explicitly add the dictionary entry for this `std::pair` type. In other words, for a `std::map<char, long>`, we need to define the following two dictionary entries:. ```cpp. #pragma link C++ class std::map<char, long>+;. #pragma link C++ class std::pair<char, long>+;. ```. instead of only the first one. This does not only pertain to `std::map`. For example, the same error is observed for a `std::set<std::pair<int, CustomStruct>>` field (but not for`std::set<std::pair<int, int>>`, for example). ## Steps to reproduce. 1. Use a ROOT master build with `-Druntime_cxxmodules=off`. 2. Remove/comment out the following dictionary entries: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/test/ProxiedSTLContainerLinkDef.h#L28-L34. 4. Add the following snippet to the constructor for `RPairField`, after this line: https://github.com/root-project/root/blob/1dbb35307ed55a1017b4620eb15f2aa22bd8514f/tree/ntuple/v7/src/RField.cxx#L2935 (also make sure to `#include <TVirtualStreamerInfo.h>:. ```cpp. if (fClass->GetDataMember(""first"") == nullptr || fClass->GetDataMember(""second"") == nullptr) {. std::cerr << ""The TClass for "" << GetType() << "" is in state: "" << fClass->GetState() << "" and has: \n"";. fClass->GetListOfDataMembers()->ls();. fClass->GetStreamerInfo()->ls();. throw RException(R__FAIL(""Insufficient information for "" + GetType()));. }. ```. ## Observed output. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14084
https://github.com/root-project/root/issues/14085:282,availability,ERROR,ERROR,282,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:1469,availability,Operat,Operating,1469,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:155,deployability,contain,container,155,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:357,deployability,version,version,357,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:718,deployability,instal,install,718,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:965,deployability,version,version,965,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:1437,deployability,Instal,Installation,1437,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:1494,deployability,contain,container,1494,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:180,energy efficiency,optim,optimized,180,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:357,integrability,version,version,357,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:965,integrability,version,version,965,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:894,interoperability,platform,platform,894,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:357,modifiability,version,version,357,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:965,modifiability,version,version,965,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:180,performance,optimiz,optimized,180,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:282,performance,ERROR,ERROR,282,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:12,reliability,doe,does,12,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:282,safety,ERROR,ERROR,282,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:1120,security,Team,Team,1120,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:525,testability,emul,emulator,525,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:1649,testability,context,context,1649,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:282,usability,ERROR,ERROR,282,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/issues/14085:1299,usability,help,help,1299,"thisroot.sh does not recognize bash when running in qemu-x86_64; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces. ```. ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""! ```. Reason: . `/proc/$$/cmdline` produces. ```. /usr/bin/qemu-x86_64. /usr/bin/bash. bash. --norc. ... ```. and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:. ```. curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash. ./eic-shell. source /usr/local/bin/thisroot.sh. ```. I believe in linux the following also invokes the image with a qemu setting. ```. docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly. ```. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.28/04 https://root.cern |. | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 08 2023, 02:44:07 |. | From tags/v6-28-04@v6-28-04 |. | With g++ (Debian 12.2.0-14) 12.2.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14085
https://github.com/root-project/root/pull/14086:197,deployability,build,build,197,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:527,deployability,updat,update,527,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:397,energy efficiency,Draw,Draw,397,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:40,performance,time,time,40,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:527,safety,updat,update,527,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:527,security,updat,update,527,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:118,testability,Simpl,Simple,118,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:12,usability,Support,Support,12,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:20,usability,custom,custom,20,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:118,usability,Simpl,Simple,118,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:176,usability,custom,custom,176,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:192,usability,user,user,192,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:560,usability,support,support,560,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:738,usability,support,support,738,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14086:749,usability,custom,custom,749,"[webcanvas] Support custom fonts at run time; Introduce TWebCanvas::AddFont which register font by name and filename. Simple demo is:. ```. {. auto indx = TWebCanvas::AddFont(""custom"", ""/home/user/build/root/fonts/monotype.ttf"");. gStyle->SetStatFont(indx);. auto c1 = new TCanvas(""c1"", ""c1"", 800, 600);. auto hpx = new TH1F(""hpx"", ""hpx title"", 100, -5, 5);. hpx->FillRandom(""gaus"", 10000);. hpx->Draw();. }. ```. This will set monotype font for stats box. Can be used with any objects. Address issue #14065. Also major JSROOT update with providing in-browser support of PDF. . Now PDF file can be generated directly in JavaScript code - using https://github.com/parallax/jsPDF and https://github.com/yWorks/svg2pdf.js. This also include support of custom fonts. . Many other fixes in JSROOT. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14086
https://github.com/root-project/root/pull/14087:208,availability,state,statement,208,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:208,integrability,state,statement,208,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:293,safety,test,test,293,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:351,safety,test,test,351,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:417,safety,test,test,417,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:505,safety,test,test,505,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:540,safety,test,test,540,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:623,safety,test,test,623,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:652,safety,test,test,652,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:738,safety,test,test,738,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:293,testability,test,test,293,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:351,testability,test,test,351,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:417,testability,test,test,417,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:505,testability,test,test,505,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:540,testability,test,test,540,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:623,testability,test,test,623,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:652,testability,test,test,652,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14087:738,testability,test,test,738,"small improvements in sqlite3_prepare; Function `sqlite3_prepare` in `sql/sqlite/src/TSQLiteServer.cxx` with info about [tail](https://sqlite.org/c3ref/prepare.html). `sqlite3_prepare` only compile the first statement in ""sql"", so ""tail"" is left pointing to what remains uncompiled. ```. void test(). {. TSQLServer *db = TSQLServer::Connect(""sqlite://test.sqlite"", """", """");. TSQLResult *res = db->Query(""CREATE TABLE test(name TEXT)"");. if (res) { res->Next(); delete res; }. res = db->Query(""INSERT INTO test VALUES('1st');"". ""INSERT INTO test VALUES('2nd');"");. if (res) { res->Next(); delete res; }. }. ```. ```. $ root test.C. root [0]. Processing test.C... Warning in <TSQLiteServer::Query>: Don't use multiple queries, 'INSERT INTO test VALUES('2nd');' query was ignored. root [1]. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14087
https://github.com/root-project/root/pull/14088:133,deployability,Updat,Update,133,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:171,deployability,fail,fail,171,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:243,deployability,Updat,Update,243,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:171,reliability,fail,fail,171,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:133,safety,Updat,Update,133,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:243,safety,Updat,Update,243,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:133,security,Updat,Update,133,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:243,security,Updat,Update,243,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14088:29,usability,widget,widgets,29,[webgui] Fix embeding of web widgets in RBrowser; Side effect when RBrowser runs and macro opens new TCanvas. In such case `TCanvas::Update()` was not block and macro may fail because of it. Now pending connection is registered and therefore `Update()` waits until connection really established. Use in demos.C normal rootgeom.C tutorial. In such case all macros works with web graphics.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14088
https://github.com/root-project/root/pull/14089:189,deployability,updat,updated,189,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:62,modifiability,exten,extends,62,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:159,safety,test,tested,159,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:189,safety,updat,updated,189,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:189,security,updat,updated,189,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:159,testability,test,tested,159,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:13,usability,support,support,13,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14089:74,usability,support,support,74,[ntuple] Add support for `std::unordered_map` fields; This PR extends the support for `std::map` fields with `std::unordered_map` fields. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14089
https://github.com/root-project/root/pull/14090:79,deployability,updat,update,79,[NFC][ntuple] Add `std::unordered_set` to specification; This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14090
https://github.com/root-project/root/pull/14090:42,interoperability,specif,specification,42,[NFC][ntuple] Add `std::unordered_set` to specification; This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14090
https://github.com/root-project/root/pull/14090:93,interoperability,specif,specifications,93,[NFC][ntuple] Add `std::unordered_set` to specification; This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14090
https://github.com/root-project/root/pull/14090:79,safety,updat,update,79,[NFC][ntuple] Add `std::unordered_set` to specification; This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14090
https://github.com/root-project/root/pull/14090:79,security,updat,update,79,[NFC][ntuple] Add `std::unordered_set` to specification; This PR is a leftover update of the specifications after adding #14069.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14090
https://github.com/root-project/root/issues/14091:561,availability,error,errors,561,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1556,availability,Operat,Operating,1556,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1123,deployability,version,version,1123,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1474,deployability,version,version,1474,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1507,deployability,Instal,Installation,1507,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:541,integrability,sub,subject,541,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1123,integrability,version,version,1123,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1474,integrability,version,version,1474,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1123,modifiability,version,version,1123,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1474,modifiability,version,version,1474,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:561,performance,error,errors,561,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:561,safety,error,errors,561,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1045,safety,Test,Test,1045,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1045,testability,Test,Test,1045,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:1627,testability,context,context,1627,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/issues/14091:561,usability,error,errors,561,"Bug in TAxis::FindBin (Double_t x) ?; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello all,. It seems there is a bug in the TAxis::FindBin (Double_t x) method. When the joint script is executed, one can see that the bin number returned from ax->FindBin (ax->GetBinLowEdge (i)) is not always i as expected. When looking at the code of TAxis::FindBin ([ROOT: hist/hist/src/TAxis.cxx Source File](https://root.cern/doc/v628/TAxis_8cxx_source.html#l00293) line 314), the formula used to compute the bin number is subject to rounding errors. It should be corrected as propose in the joint script. Daniel CUSSOL. ### Reproducer. File TAxisBug.C. ```. #include ""TAxis.h"". #include ""Riostream.h"". #include ""TROOT.h"". Int_t GetRightBin (TAxis *ax, Double_t x). {. //. // Get correct bin number from x value for TAxis ax. // . Int_t retVal = 1+Int_t(ax->GetNbins()*(x-ax->GetXmin())/(ax->GetXmax()-ax->GetXmin()) + 0.5);. return retVal;. }. void TAxisBug (Int_t nBins = 30, Double_t xMin=3.0, Double_t xMax=6.0). {. //. // Test TAxis bug . // . TAxis *ax=new TAxis (nBins, xMin, xMax);. cout << ""Root version : "" << gROOT->GetVersion() << endl; . for (Int_t i=1;i<=ax->GetNbins();i++). {. cout << i << "" => "" << ax->FindBin (ax->GetBinLowEdge (i)) . << "" : "" << . GetRightBin (ax, ax->GetBinLowEdge (i)); . if (i != ax->FindBin (ax->GetBinLowEdge (i))). {. cout << "" <= Bug!!! "";. }. cout << endl;. }. cout << endl;. }. ```. root TAxisBug.C+. ### ROOT version. from ROOT v6.24.00. ### Installation method. pre-built and binaries. ### Operating system. Ubuntu 22.04.3 LTS (Jammy Jellyfish). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14091
https://github.com/root-project/root/pull/14092:194,deployability,log,log,194,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:284,energy efficiency,CPU,CPU,284,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:292,energy efficiency,GPU,GPU,292,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:284,performance,CPU,CPU,284,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:292,performance,GPU,GPU,292,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:47,safety,input,input,47,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:128,safety,input,inputs,128,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:194,safety,log,log,194,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:215,safety,avoid,avoid,215,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:114,security,loss,loss,114,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:194,security,log,log,194,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:221,security,loss,loss,221,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:393,security,loss,loss-some-eopchs-loss-is-inf,393,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:441,security,loss,loss,441,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:194,testability,log,log,194,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:47,usability,input,input,47,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14092:128,usability,input,inputs,128,[tmva] Fix cross entropy calculation for large input values; Improve the calculation for the binary cross entropy loss when the inputs are very large (and also very large negative). Use correct log approximation to avoid loss of precisions and returning infinity values. Fix both the CPU and GPU calculations. This has been initiated by this post https://root-forum.cern.ch/t/when-tmva-comput-loss-some-eopchs-loss-is-inf/57018/ where `inf` loss values were obtained during training,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14092
https://github.com/root-project/root/pull/14093:4,availability,redund,redundant,4,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:4,deployability,redundan,redundant,4,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:173,deployability,contain,contain,173,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:356,energy efficiency,current,current,356,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:421,energy efficiency,charg,charged-current,421,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:450,energy efficiency,model,model,450,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:478,integrability,event,event,478,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:292,performance,memor,memory,292,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:385,performance,memor,memory,385,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:4,reliability,redundan,redundant,4,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:4,safety,redund,redundant,4,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:450,security,model,model,450,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:270,usability,behavi,behavior,270,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:292,usability,memor,memory,292,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14093:385,usability,memor,memory,385,"Add redundant 'virtual' destructor declarations; This PR adds back 'virtual' destructor declarations for classes derived from ROOT::Math::VirtualIntegrator which themselves contain virtual functions. These were present until recently, and their absence causes undefined behavior, typically a memory leak. Fast merging would be appreciated if possible. The current code causes a severe memory leak when running the Nieves charged-current quasielastic model in the GENIE neutrino event generator (https://github.com/GENIE-MC/Generator).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14093
https://github.com/root-project/root/pull/14094:35,usability,widget,widgets,35,[webgui] improve handling of embed widgets [6.30]; In RBrowser different widgets are embed. Add dummy pending connection handle to get possibility for widget wait for such connection been established.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14094
https://github.com/root-project/root/pull/14094:73,usability,widget,widgets,73,[webgui] improve handling of embed widgets [6.30]; In RBrowser different widgets are embed. Add dummy pending connection handle to get possibility for widget wait for such connection been established.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14094
https://github.com/root-project/root/pull/14094:151,usability,widget,widget,151,[webgui] improve handling of embed widgets [6.30]; In RBrowser different widgets are embed. Add dummy pending connection handle to get possibility for widget wait for such connection been established.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14094
https://github.com/root-project/root/pull/14095:9,deployability,updat,update,9,[jsroot] update for 6.28 branch; Fix - draw histogram with only negative bins jsroot:#276 . Fix - reading TLeaf with fixed-size array. Fix - correctly set pave name jsroot:#278.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14095
https://github.com/root-project/root/pull/14095:39,energy efficiency,draw,draw,39,[jsroot] update for 6.28 branch; Fix - draw histogram with only negative bins jsroot:#276 . Fix - reading TLeaf with fixed-size array. Fix - correctly set pave name jsroot:#278.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14095
https://github.com/root-project/root/pull/14095:9,safety,updat,update,9,[jsroot] update for 6.28 branch; Fix - draw histogram with only negative bins jsroot:#276 . Fix - reading TLeaf with fixed-size array. Fix - correctly set pave name jsroot:#278.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14095
https://github.com/root-project/root/pull/14095:9,security,updat,update,9,[jsroot] update for 6.28 branch; Fix - draw histogram with only negative bins jsroot:#276 . Fix - reading TLeaf with fixed-size array. Fix - correctly set pave name jsroot:#278.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14095
https://github.com/root-project/root/issues/14096:211,availability,error,error,211,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2888,availability,Operat,Operating,2888,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:307,deployability,stack,stacktrace,307,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:586,deployability,Instal,InstallArea,586,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:793,deployability,Instal,InstallArea,793,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1000,deployability,Instal,InstallArea,1000,"ump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1969,deployability,contain,contained,1969,"ysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2371,deployability,version,version,2371,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2844,deployability,Instal,Installation,2844,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2865,deployability,build,build,2865,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:0,energy efficiency,Core,Core,0,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:151,energy efficiency,core,core-dump,151,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1829,energy efficiency,core,core,1829,"ibCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ----------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2052,energy efficiency,core,core,2052,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2371,integrability,version,version,2371,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1565,interoperability,share,share,1565,"Externals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2371,modifiability,version,version,2371,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:211,performance,error,error,211,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:211,safety,error,error,211,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1583,safety,test,test,1583,"/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. |",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1864,safety,compl,complains,1864,"TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:675,security,Access,AccessPathName,675,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1864,security,compl,complains,1864,"TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2540,security,Team,Team,2540,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:1583,testability,test,test,1583,"/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. |",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2970,testability,context,context,2970,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:211,usability,error,error,211,"Core dump when using gSystem->CopyFile(); ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello,. The program I wrote would core-dump at the end of running. Using Valgrind, I found an error regarding an `Invalid write of size 1` from `gSystem->CopyFile()`.`. Part of the Valgrind stacktrace is shown below. ```. ==3160809== Invalid write of size 1. ==3160809== at 0x484E803: memmove (vg_replace_strmem.c:1400). ==3160809== by 0x62339F3: TString::Replace(int, int, char const*, int) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x634451C: TUnixSystem::AccessPathName(char const*, EAccessMode) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x6342063: TUnixSystem::CopyFile(char const*, char const*, bool) (in /cvmfs/atlas.cern.ch/repo/sw/software/24.2/AnalysisBaseExternals/24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14096:2706,usability,help,help,2706,"24.2.27/InstallArea/x86_64-el9-gcc13-opt/lib/libCore.so). ==3160809== by 0x27AC5109: TQPathManager::~TQPathManager() (TQPathManager.cxx:461). ```. Line ` TQPathManager::~TQPathManager() (TQPathManager.cxx:461)` was. ```. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. ```. Where `localPath` and `targetPath` were strings holding locations of files. Example (These files are on different volumes):. `localPath.Data() = ""/tmp/mlyukova/3167235_4_3475779823.html""`. `targetPath.Data() = ""/eos/home-m/mlyukova/Analysis/HWWCAFCore_24/HWWAnalysis/HWWAnalysisCode/share/results/R22-test/MCValidation/NTuples/cutflows/c21-mm-processes_bbmm-cutflow-cuts.html"" `. I have replaced this line with `copy` from the library `<filesystem>`. ```. std::filesystem::copy(localPath.Data(), targetPath.Data());. ```. Now my program no longer core dumps, and Valgrind no longer complains of an invalid write of size 1. ### Reproducer. This code is part of a large project. If a self-contained file is needed, we can make one. This is the snippet of code causing the core dump. ```. if (rename(localPath, targetPath) != 0){. std::cout << ""File could not be renamed. Copying instead."" << std::endl;. gSystem->CopyFile(localPath.Data(), targetPath.Data(), kTRUE);. remove(localPath.Data());. }. ```. Where `localPath` and `targetPath` are `TStrings` defined earlier in the code. ### ROOT version. ```. > root -b -q. ------------------------------------------------------------------. | Welcome to ROOT 6.28/08 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Oct 13 2023, 09:48:14 |. | From tags/v6-28-08@v6-28-08 |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. Red Hat Enterprise Linux (9.3 (Plow)) (lxplus9). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14096
https://github.com/root-project/root/issues/14097:947,availability,Operat,Operating,947,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:8,deployability,stack,stack,8,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:101,deployability,stack,stack,101,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:306,deployability,modul,module,306,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:414,deployability,Modul,ModuleNotFoundError,414,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:438,deployability,modul,module,438,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:566,deployability,modul,module,566,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:575,deployability,Modul,ModuleNotFoundError,575,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:599,deployability,modul,module,599,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:846,deployability,version,version,846,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:915,deployability,Instal,Installation,915,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:846,integrability,version,version,846,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:306,modifiability,modul,module,306,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:414,modifiability,Modul,ModuleNotFoundError,414,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:438,modifiability,modul,module,438,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:566,modifiability,modul,module,566,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:575,modifiability,Modul,ModuleNotFoundError,575,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:599,modifiability,modul,module,599,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:846,modifiability,version,version,846,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:306,safety,modul,module,306,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:414,safety,Modul,ModuleNotFoundError,414,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:438,safety,modul,module,438,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:566,safety,modul,module,566,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:575,safety,Modul,ModuleNotFoundError,575,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:599,safety,modul,module,599,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:682,safety,except,exception,682,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:14,testability,trace,traces,14,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:107,testability,trace,traces,107,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:242,testability,Trace,Traceback,242,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:502,testability,Trace,Traceback,502,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/issues/14097:988,testability,context,context,988,"Cleaner stack traces in python; ### Explain what you would like to see improved and how. I'd like my stack traces to be just as readable with and without ROOT imported. If I do. ```python. import ROOT. from zork import dork. ```. I get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""path/to/ROOT/_facade.py"", line 154, in _importhook. return _orig_ihook(name, *args, **kwds). ModuleNotFoundError: No module named 'zork'. ```. Whereas without this I just get. ```. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'zork'. ```. This on its own isn't bad, but when it's a deeply nested exception I get the ROOT `_importhook` thing for every frame. Unfortunately most ATLAS code ends up with `import ROOT` somewhere after it gets big enough. ### ROOT version. LCG_104b_ATLAS_3/ROOT/6.28.08/x86_64-centos7-gcc11-opt. ### Installation method. cvmfs. ### Operating system. SC 7.9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14097
https://github.com/root-project/root/pull/14098:60,deployability,modul,modules,60,[PyROOT] Better way to make C++ namespaces appear as Python modules; This reimplements the mechanism to provide C++ namespace as Python. modules without replacing the built-in `__import__` function. Credits to @chrisburr!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14098
https://github.com/root-project/root/pull/14098:137,deployability,modul,modules,137,[PyROOT] Better way to make C++ namespaces appear as Python modules; This reimplements the mechanism to provide C++ namespace as Python. modules without replacing the built-in `__import__` function. Credits to @chrisburr!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14098
https://github.com/root-project/root/pull/14098:60,modifiability,modul,modules,60,[PyROOT] Better way to make C++ namespaces appear as Python modules; This reimplements the mechanism to provide C++ namespace as Python. modules without replacing the built-in `__import__` function. Credits to @chrisburr!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14098
https://github.com/root-project/root/pull/14098:137,modifiability,modul,modules,137,[PyROOT] Better way to make C++ namespaces appear as Python modules; This reimplements the mechanism to provide C++ namespace as Python. modules without replacing the built-in `__import__` function. Credits to @chrisburr!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14098
https://github.com/root-project/root/pull/14098:60,safety,modul,modules,60,[PyROOT] Better way to make C++ namespaces appear as Python modules; This reimplements the mechanism to provide C++ namespace as Python. modules without replacing the built-in `__import__` function. Credits to @chrisburr!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14098
https://github.com/root-project/root/pull/14098:137,safety,modul,modules,137,[PyROOT] Better way to make C++ namespaces appear as Python modules; This reimplements the mechanism to provide C++ namespace as Python. modules without replacing the built-in `__import__` function. Credits to @chrisburr!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14098
https://github.com/root-project/root/pull/14099:514,deployability,updat,updated,514,[ntuple] Add `RNTupleInspector::GetPageSizeDistribution`; This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14099:139,interoperability,distribut,distribution,139,[ntuple] Add `RNTupleInspector::GetPageSizeDistribution`; This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14099:484,safety,test,tested,484,[ntuple] Add `RNTupleInspector::GetPageSizeDistribution`; This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14099:514,safety,updat,updated,514,[ntuple] Add `RNTupleInspector::GetPageSizeDistribution`; This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14099:514,security,updat,updated,514,[ntuple] Add `RNTupleInspector::GetPageSizeDistribution`; This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14099:484,testability,test,tested,484,[ntuple] Add `RNTupleInspector::GetPageSizeDistribution`; This PR adds the `RNTupleInspector` functionality to get a histogram showing the distribution of the compressed page sizes for either a single column (provided its physical ID) or all columns of a given type. The lower and upper bounds of the returned histogram are determined by the smallest and largest page size. The number of bins can be provided when calling the function (the default is set to 64). ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14099
https://github.com/root-project/root/pull/14100:15,deployability,build,build,15,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:235,deployability,depend,depends,235,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:342,deployability,build,building,342,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:235,integrability,depend,depends,235,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:235,modifiability,depend,depends,235,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:235,safety,depend,depends,235,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:235,testability,depend,depends,235,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:320,usability,minim,minimization,320,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:384,usability,behavi,behavior,384,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/pull/14100:505,usability,close,closes,505,"[CMake] Always build Minuit2; In the discussion thread to JIRA ticket ROOT-10864, Axel suggested the removal of the option to disable minuit2 as a possible solution. I think this is a very good idea good idea, because:. * Minuit2 only depends on `Hist` and `MathCore` anyway. * Now that Minuit2 is the default for *all* minimization in ROOT, building ROOT without Minuit2 changes the behavior of ROOT way too much, in a ways that people that set `minuit2=OFF` probably are not intending or aware of. This closes the following JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-10864",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14100
https://github.com/root-project/root/issues/14101:610,availability,Operat,Operating,610,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:554,deployability,version,version,554,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:582,deployability,Instal,Installation,582,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:554,integrability,version,version,554,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:423,modifiability,paramet,parameters,423,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:554,modifiability,version,version,554,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:198,reliability,doe,doesn,198,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:456,reliability,doe,does,456,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:276,security,sign,significantly,276,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:646,testability,context,context,646,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:8,usability,document,documentation,8,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:233,usability,user,user-facing,233,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:295,usability,document,documentation,295,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:398,usability,document,documentation,398,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/issues/14101:487,usability,document,documented,487,"Missing documentation for `RDataSetSpec`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. https://root.cern/doc/v630/classROOT_1_1RDF_1_1Experimental_1_1RDatasetSpec.html doesn't show too much. IIUC it's a user-facing class; it should probably have significantly more documentation? - class description should explain what it's for, usage examples. - each function needs documentation explaining parameters and what the function does. - data members should be documented explaining what they store. ### Reproducer. -. ### ROOT version. At least 6.30. ### Installation method. -. ### Operating system. -. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14101
https://github.com/root-project/root/pull/14104:80,deployability,version,version,80,"[cpack] Remove ""VERSION_ID"" from package names:; Newer Fedoras do not quote the version number anymore, make that optional. Fixes #14103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14104
https://github.com/root-project/root/pull/14104:80,integrability,version,version,80,"[cpack] Remove ""VERSION_ID"" from package names:; Newer Fedoras do not quote the version number anymore, make that optional. Fixes #14103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14104
https://github.com/root-project/root/pull/14104:33,modifiability,pac,package,33,"[cpack] Remove ""VERSION_ID"" from package names:; Newer Fedoras do not quote the version number anymore, make that optional. Fixes #14103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14104
https://github.com/root-project/root/pull/14104:80,modifiability,version,version,80,"[cpack] Remove ""VERSION_ID"" from package names:; Newer Fedoras do not quote the version number anymore, make that optional. Fixes #14103.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14104
https://github.com/root-project/root/pull/14105:123,availability,error,error,123,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:484,availability,consist,consistency,484,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:383,deployability,depend,depending,383,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:383,integrability,depend,depending,383,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:383,modifiability,depend,depending,383,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:123,performance,error,error,123,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:123,safety,error,error,123,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:383,safety,depend,depending,383,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:672,safety,test,test,672,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:383,testability,depend,depending,383,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:672,testability,test,test,672,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:123,usability,error,error,123,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:314,usability,clear,clear,314,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14105:484,usability,consist,consistency,484,"[hist] Improve calculation of `TAxis::FindBin(x)` when x is at the bin edges; . When x is at the bin edge values numerical error can cause the computation of the bin to be the one before (or after). Correct for this case assuming the bin edge are computed as in `TH1::getBinLowEdge` and `TH1::GetBinUpEdge`. It is clear that the bin edge values are represented as floating point, so depending on how they are computed they can be sometime different. However, it is better to have teh consistency to return the correct value when computed as internally in TAxis. This should fix the problem reported in https://root-forum.cern.ch/t/bug-in-taxis-findbin/57210 and #14091. A test is also added for FindBin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14105
https://github.com/root-project/root/pull/14106:126,deployability,updat,updated,126,CPack: improve package names.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14106:15,modifiability,pac,package,15,CPack: improve package names.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14106:96,safety,test,tested,96,CPack: improve package names.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14106:126,safety,updat,updated,126,CPack: improve package names.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14106:126,security,updat,updated,126,CPack: improve package names.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14106:96,testability,test,tested,96,CPack: improve package names.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14106
https://github.com/root-project/root/pull/14107:23,availability,toler,tolerance,23,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:127,availability,toler,tolerance,127,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:7,energy efficiency,Reduc,Reduce,7,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:105,energy efficiency,reduc,reducing,105,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:23,reliability,toleran,tolerance,23,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:127,reliability,toleran,tolerance,127,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:161,safety,test,test,161,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:39,testability,assert,assert,39,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14107:161,testability,test,test,161,"[hist] Reduce relative tolerance in an assert in test_tprofile2poly.cxx; This follows up on 46642ca1c40, reducing the relative tolerance in one case to make the test pass again on macOS ARM.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14107
https://github.com/root-project/root/pull/14109:150,deployability,updat,updated,150,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:28,safety,input,input,28,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:120,safety,test,tested,120,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:150,safety,updat,updated,150,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:150,security,updat,updated,150,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:120,testability,test,tested,120,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:8,usability,Support,Support,8,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14109:28,usability,input,input,28,[cling] Support bare `#` in input line:; fixes #11190. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14109
https://github.com/root-project/root/pull/14110:15,modifiability,variab,variable,15,[cling] Handle variable templates in DeclUnloader; Fixes https://github.com/root-project/root/issues/13815,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14110
https://github.com/root-project/root/pull/14111:49,deployability,build,build,49,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:109,deployability,build,build,109,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:151,deployability,build,build,151,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:247,deployability,build,build,247,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:310,deployability,updat,updated,310,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:13,performance,memor,memory,13,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:130,performance,memor,memory,130,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:202,performance,parallel,parallel,202,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:0,safety,Avoid,Avoid,0,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:280,safety,test,tested,280,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:310,safety,updat,updated,310,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:310,security,updat,updated,310,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:280,testability,test,tested,280,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:13,usability,memor,memory,13,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14111:130,usability,memor,memory,130,Avoid out of memory during linking regardless of build type; # This Pull request:. ## Changes or fixes:. The build can run out of memory regardless of build type. This PR enables the protection against parallel linking with LLVM libraries for all build type. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14111
https://github.com/root-project/root/pull/14112:154,deployability,updat,updated,154,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:0,safety,Test,Test,0,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:80,safety,test,test,80,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:124,safety,test,tested,124,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:154,safety,updat,updated,154,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:154,security,updat,updated,154,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:0,testability,Test,Test,0,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:80,testability,test,test,80,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/pull/14112:124,testability,test,tested,124,Test glitches; # This Pull request:. ## Changes or fixes:. Fix some issues with test dound in 6.30.00. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14112
https://github.com/root-project/root/issues/14113:1099,availability,Error,Error,1099,"sues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1764,availability,error,errors,1764,"cations/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2552,availability,Operat,Operating,2552,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:33,deployability,fail,fails,33,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:55,deployability,instal,installed,55,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:166,deployability,instal,installed,166,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:209,deployability,fail,fails,209,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:516,deployability,Toolchain,Toolchains,516,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:804,deployability,Toolchain,Toolchains,804,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1043,deployability,version,version,1043,"ng Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. -----------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1151,deployability,Modul,Modules,1151,"Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1275,deployability,Stack,Stack,1275,"ang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1351,deployability,Modul,Modules,1351,"15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1473,deployability,modul,modules,1473,"lications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1578,deployability,Modul,Modules,1578,"ting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1804,deployability,Instal,Install,1804,"chains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1903,deployability,VERSION,VERSION,1903,"ing CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2022,deployability,version,version,2022,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2289,deployability,patch,patches,2289,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2333,deployability,version,version,2333,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2517,deployability,Instal,Installation,2517,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2619,deployability,updat,update,2619,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2705,energy efficiency,core,core,2705,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1043,integrability,version,version,1043,"ng Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. -----------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1200,integrability,messag,message,1200,"txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1740,integrability,Configur,Configuring,1740," CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1903,integrability,VERSION,VERSION,1903,"ing CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2022,integrability,version,version,2022,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2333,integrability,version,version,2333,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:975,interoperability,share,share,975,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1139,interoperability,share,share,1139,"Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1200,interoperability,messag,message,1200,"txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1339,interoperability,share,share,1339,"Clang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1456,interoperability,share,share,1456,"g C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. -------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1566,interoperability,share,share,1566,"ped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1647,interoperability,share,share,1647,"Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1043,modifiability,version,version,1043,"ng Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. -----------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1151,modifiability,Modul,Modules,1151,"Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1351,modifiability,Modul,Modules,1351,"15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1473,modifiability,modul,modules,1473,"lications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1578,modifiability,Modul,Modules,1578,"ting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1740,modifiability,Configur,Configuring,1740," CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1903,modifiability,VERSION,VERSION,1903,"ing CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2022,modifiability,version,version,2022,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2333,modifiability,version,version,2333,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:497,performance,Content,Contents,497,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:785,performance,Content,Contents,785,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1099,performance,Error,Error,1099,"sues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1764,performance,error,errors,1764,"cations/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:33,reliability,fail,fails,33,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:209,reliability,fail,fails,209,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:368,safety,Detect,Detecting,368,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:402,safety,Detect,Detecting,402,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:577,safety,Detect,Detecting,577,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:610,safety,Detect,Detecting,610,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:650,safety,Detect,Detecting,650,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:686,safety,Detect,Detecting,686,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:866,safety,Detect,Detecting,866,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:901,safety,Detect,Detecting,901,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1099,safety,Error,Error,1099,"sues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1151,safety,Modul,Modules,1151,"Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1351,safety,Modul,Modules,1351,"15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1473,safety,modul,modules,1473,"lications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. -------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1578,safety,Modul,Modules,1578,"ting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1764,safety,error,errors,1764,"cations/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2289,safety,patch,patches,2289,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2619,safety,updat,update,2619,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:253,security,ident,identification,253,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:319,security,ident,identification,319,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:368,security,Detect,Detecting,368,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:402,security,Detect,Detecting,402,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:577,security,Detect,Detecting,577,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:610,security,Detect,Detecting,610,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:650,security,Detect,Detecting,650,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:686,security,Detect,Detecting,686,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:866,security,Detect,Detecting,866,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:901,security,Detect,Detecting,901,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1740,security,Configur,Configuring,1740," CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2177,security,Team,Team,2177,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2289,security,patch,patches,2289,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2619,security,updat,update,2619,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1854,testability,simpl,simple,1854,"pped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` befo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2600,testability,context,context,2600,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:25,usability,command,command,25,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:516,usability,Tool,Toolchains,516,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:804,usability,Tool,Toolchains,804,"The `find_package(root)` command fails when using Root installed via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1061,usability,minim,minimum,1061,"via Homebrew.; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. -----------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1099,usability,Error,Error,1099,"sues. - [ ] Checked for duplicates. ### Description. Using root installed via Homebrew in `CMakeLists.txt` fails to locate Vdt. ```. -- The C compiler identification is AppleClang 15.0.0.15000040. -- The CXX compiler identification is AppleClang 15.0.0.15000040. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1764,usability,error,errors,1764,"cations/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:1854,usability,simpl,simple,1854,"pped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Found nlohmann_json: /usr/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` befo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/issues/14113:2379,usability,help,help,2379,"/local/share/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.11.2"", minimum required is ""3.11.2"") . CMake Error at /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). Call Stack (most recent call first):. /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). /usr/local/Cellar/root/6.30.00/share/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). /usr/local/Cellar/cmake/3.27.8/share/cmake/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). /usr/local/share/root/cmake/rootConfig.cmake:132 (find_dependency). CMakeLists.txt:3 (find_package). -- Configuring incomplete, errors occurred! ```. ### Reproducer. - Install Root and CMake using Homebrew. - Create a simple project. ```cmake. cmake_minimum_required(VERSION 3.20). project(minimum_root). find_package(Root CONFIG REQUIRED). ```. - Run CMake with `cmake -S .`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/00 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Nov 06 2023, 16:07:43 |. | From heads/v6-30-patches@tags/v6-30-00 |. | With Apple clang version 15.0.0 (clang-1500.0.40.1) |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. homebrew. ### Operating system. MacOS(14.1.1). ### Additional context. Since the update in the Homebrew formulae at [this commit](https://github.com/Homebrew/homebrew-core/commit/46e299a429160ea85f93dd15a4359b9cc63e8efb), an issue has arisen. As a temporary workaround, set the following values in `CMakeLists.txt` before `find_package(root)`:. ```. set(VDT_INCLUDE_DIR /usr/local/opt/root/include/root). set(VDT_LIBRARY vdt). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14113
https://github.com/root-project/root/pull/14115:137,deployability,configurat,configuration,137,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:137,integrability,configur,configuration,137,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:187,interoperability,specif,specifying,187,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:137,modifiability,configur,configuration,137,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:96,safety,test,test,96,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:137,security,configur,configuration,137,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:96,testability,test,test,96,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14115:227,usability,Close,Closes,227,"[interpreter] Fix LLVM target selection; @mkrzewic @eamjensen could you maybe give this a short test on FreeBSD? I hope that a ""vanilla"" configuration of ROOT should now succeed, without specifying any `LLVM_TARGETS_TO_BUILD`. Closes #14075",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14115
https://github.com/root-project/root/pull/14117:28,modifiability,pac,package,28,Fix fatal issues with cpack package names [6.30]; Backport of #14116. Blocker for 6.30.02,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14117
https://github.com/root-project/root/pull/14118:23,availability,error,error,23,[tmva] Fix compilation error in a Cuda kernel; # This Pull request:.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14118
https://github.com/root-project/root/pull/14118:23,performance,error,error,23,[tmva] Fix compilation error in a Cuda kernel; # This Pull request:.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14118
https://github.com/root-project/root/pull/14118:23,safety,error,error,23,[tmva] Fix compilation error in a Cuda kernel; # This Pull request:.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14118
https://github.com/root-project/root/pull/14118:23,usability,error,error,23,[tmva] Fix compilation error in a Cuda kernel; # This Pull request:.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14118
https://github.com/root-project/root/pull/14119:397,deployability,releas,releases,397,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:61,integrability,messag,messages,61,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:130,integrability,configur,configured,130,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:287,integrability,messag,messages,287,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:61,interoperability,messag,messages,61,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:123,interoperability,socket,socket,123,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:287,interoperability,messag,messages,287,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:130,modifiability,configur,configured,130,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:227,safety,test,tested,227,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:123,security,soc,socket,123,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:130,security,configur,configured,130,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:377,security,secur,secure,377,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:227,testability,test,tested,227,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:37,usability,widget,widgets,37,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:104,usability,widget,widgets,104,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14119:212,usability,widget,widgets,212,"[webgui] always use loopback for web widgets, adjust warning messages; 1. Loopback is always on for web widgets, only unix socket configured by `rootssh` can be enabled. 2. Also disable usage of FastCGI with web widgets (never tested with webgui, may be used by REve). 3. Shrink warning messages for `TWebCanvas` and `RBrowser`, do not mention `--web=server:port` which is not secure for previous releases and will not work with recent fixes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14119
https://github.com/root-project/root/pull/14120:98,availability,cluster,cluster,98,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/pull/14120:98,deployability,cluster,cluster,98,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/pull/14120:198,energy efficiency,current,current,198,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/pull/14120:237,energy efficiency,model,model,237,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/pull/14120:293,safety,test,test,293,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/pull/14120:237,security,model,model,237,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/pull/14120:206,testability,understand,understanding,206,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/pull/14120:293,testability,test,test,293,"[ntuple] Add more getters to `RNTupleWriter`; This may be useful for applications when to flush a cluster (group). Also a minor type fix of `RNTupleWriter::fUnzippedClusterSizeEst` (according to my current understanding), and moving the model creation into write scope in the `ntuple_storage` test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14120
https://github.com/root-project/root/issues/14121:155,availability,failur,failure,155,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:481,availability,Error,Error,481,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:566,availability,error,error,566,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:47,deployability,fail,fails,47,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:155,deployability,fail,failure,155,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:308,deployability,build,build,308,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:521,deployability,modul,modules,521,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:6,energy efficiency,core,core-metacling-test-TClingLoadUnloadFile,6,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:314,energy efficiency,core,core,314,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:555,integrability,messag,message,555,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:578,integrability,Sub,Subprocess,578,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:272,interoperability,share,shared,272,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:555,interoperability,messag,message,555,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:521,modifiability,modul,modules,521,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:155,performance,failur,failure,155,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:481,performance,Error,Error,481,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:566,performance,error,error,566,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:47,reliability,fail,fails,47,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:155,reliability,fail,failure,155,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:226,reliability,Diagno,Diagnostic,226,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:21,safety,test,test-TClingLoadUnloadFile,21,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:84,safety,test,test,84,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:150,safety,test,test,150,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:183,safety,Test,TestSupport,183,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:329,safety,test,test,329,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:481,safety,Error,Error,481,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:521,safety,modul,modules,521,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:566,safety,error,error,566,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:21,testability,test,test-TClingLoadUnloadFile,21,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:84,testability,test,test,84,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:150,testability,test,test,150,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:183,testability,Test,TestSupport,183,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:226,testability,Diagno,Diagnostic,226,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:329,testability,test,test,329,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:481,usability,Error,Error,481,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/issues/14121:566,usability,error,error,566,gtest-core-metacling-test-TClingLoadUnloadFile fails sporadically; We disabled that test in https://github.com/root-project/root/pull/14281. Relevant test failure output:. ```. ROOT::TestSupport::ForbidDiagnostics::handler(): Diagnostic in 'TUnixSystem::ACLiC':. creating shared library /github/home/ROOT-CI/build/core/metacling/test/concurrent_load_unload_one_lib_per_thread_4_cpp.so. terminate called after throwing an instance of 'std::bad_alloc'. what(): std::bad_alloc. CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):. error code: Subprocess aborted. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14121
https://github.com/root-project/root/pull/14124:57,modifiability,paramet,parameters,57,[webgui] always use loopback [6.26]; Disregard of rootrc parameters always assign loopback. . FastCGI is also disabled for the moment; it is alternative to civetweb. Backport #14119,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14124
https://github.com/root-project/root/pull/14125:189,performance,parallel,parallel,189,[tmva][pymva] Avoid creating the output file tmva.root; These tutorials don't need to create an output root file of the traiining. This avoids potential problem of running the tutorials in parallel and writing on the same file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14125
https://github.com/root-project/root/pull/14125:14,safety,Avoid,Avoid,14,[tmva][pymva] Avoid creating the output file tmva.root; These tutorials don't need to create an output root file of the traiining. This avoids potential problem of running the tutorials in parallel and writing on the same file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14125
https://github.com/root-project/root/pull/14125:136,safety,avoid,avoids,136,[tmva][pymva] Avoid creating the output file tmva.root; These tutorials don't need to create an output root file of the traiining. This avoids potential problem of running the tutorials in parallel and writing on the same file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14125
https://github.com/root-project/root/pull/14126:91,interoperability,specif,specify,91,[webgui] always use classical browser by default [6.30]; RBrowser only can be enabled when specify --web parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14126
https://github.com/root-project/root/pull/14126:105,modifiability,paramet,parameter,105,[webgui] always use classical browser by default [6.30]; RBrowser only can be enabled when specify --web parameter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14126
https://github.com/root-project/root/pull/14129:212,availability,state,statement,212,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:198,deployability,fail,failed,198,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:531,deployability,updat,updated,531,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:40,energy efficiency,load,load,40,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:132,energy efficiency,load,load,132,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:340,energy efficiency,load,loaded,340,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:212,integrability,state,statement,212,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:40,performance,load,load,40,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:132,performance,load,load,132,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:340,performance,load,loaded,340,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:198,reliability,fail,failed,198,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:15,safety,except,exception,15,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:91,safety,except,exception,91,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:227,safety,prevent,prevent,227,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:501,safety,test,tested,501,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:531,safety,updat,updated,531,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:227,security,preven,prevent,227,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:531,security,updat,updated,531,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:205,testability,assert,assert,205,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:501,testability,test,tested,501,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14129:118,usability,user,user,118,"[ntuple] Throw exception when trying to load out-of-bounds entries; With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement). To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14129
https://github.com/root-project/root/pull/14130:160,availability,redund,redundant,160,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:160,deployability,redundan,redundant,160,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:224,deployability,automat,automatically,224,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:160,reliability,redundan,redundant,160,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:160,safety,redund,redundant,160,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:283,safety,Avoid,Avoid,283,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:224,testability,automat,automatically,224,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:12,usability,document,documentation,12,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14130:274,usability,guid,guide,274,[RF] RooFit documentation improvements; * Fix the link from the RooFit tutorials to the main RooFit page. * Fix broken link in `RooJSONFactoryWSTool`. * Remove redundant links in `roofit_hs3.md` (doxygen generates the links automatically). * Use relative paths to reference guide. * Avoid class names in the brief description because the duplicated name looks not nice in the generated docs: https://root.cern/doc/v628/group__Roofitcore.html. * Remove a few unneeded destructor declarations,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14130
https://github.com/root-project/root/pull/14131:447,deployability,updat,updated,447,"[ntuple] Rename `R*Info` classes to `R*Inspector`; With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14131
https://github.com/root-project/root/pull/14131:417,safety,test,tested,417,"[ntuple] Rename `R*Info` classes to `R*Inspector`; With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14131
https://github.com/root-project/root/pull/14131:447,safety,updat,updated,447,"[ntuple] Rename `R*Info` classes to `R*Inspector`; With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14131
https://github.com/root-project/root/pull/14131:447,security,updat,updated,447,"[ntuple] Rename `R*Info` classes to `R*Inspector`; With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14131
https://github.com/root-project/root/pull/14131:417,testability,test,tested,417,"[ntuple] Rename `R*Info` classes to `R*Inspector`; With this PR, `RNTupleInspector::RColumnInfo` and `RNTupleInspector::RFieldTreeInfo` are renamed to `RNTupleInspector::RColumnInspector` and `RNTupleInspector::RFieldTreeInspector`, along with their getters. The rationale behind this change is to make the class names more symmetric with the general `RNTupleInspector` name and remove any potential ambiguity. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14131
https://github.com/root-project/root/issues/14132:403,availability,operat,operation,403,"Lazy multithread RDataFrame::Snapshot cause unnessary warning and break gDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am getting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2954,availability,Operat,Operating,2954," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2613,deployability,version,version,2613," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2648,deployability,Version,Version,2648," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2765,deployability,Version,Version,2765," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2850,deployability,patch,patches,2850," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2882,deployability,Instal,Installation,2882," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2979,deployability,releas,release,2979," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2424,energy efficiency,core,core,2424," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:1799,integrability,event,event,1799," auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2613,integrability,version,version,2613," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2648,integrability,Version,Version,2648," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2765,integrability,Version,Version,2765," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2613,modifiability,version,version,2613," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2648,modifiability,Version,Version,2648," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2765,modifiability,Version,Version,2765," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:581,performance,content,content,581,"Lazy multithread RDataFrame::Snapshot cause unnessary warning and break gDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am getting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:1354,performance,content,content,1354,"ent. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:479,safety,test,test,479,"Lazy multithread RDataFrame::Snapshot cause unnessary warning and break gDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am getting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2850,safety,patch,patches,2850," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2227,security,control,control,2227," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2850,security,patch,patches,2850," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:479,testability,test,test,479,"Lazy multithread RDataFrame::Snapshot cause unnessary warning and break gDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am getting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:2227,testability,control,control,2227," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:3020,testability,context,context,3020," int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given, `test3.root` is present. But `hist.root` that should come from `TH1D::SaveAs` is missing. . GDB suggest that control flow have reached `TObject::SaveAs`, I have no idea how to dig into the issue, but it looks to me as if . https://github.com/root-project/root/blob/d245ee7889eb1ef1c30622356757a2731108abdc/core/base/src/TObject.cxx#L690. is skipped due to `gDirectory` being casted to `false` as `TDirectory::GetSharedLocalCurrentDirectory().get()._M_b._M_p` is `nullptr` in this case. ### ROOT version. Reproduced on . ```. ROOT Version: 6.28/08. Built for linuxx8664gcc on Oct 13 2023, 09:48:14. From tags/v6-28-08@v6-28-08. ```. and. ```. ROOT Version: 6.30/00. Built for linuxx8664gcc on Nov 26 2023, 23:25:40. From heads/v6-30-patches@tags/v6-30-00. ```. ### Installation method. 6.28/08 from Fedora 39, self-compiled 6.30/00. ### Operating system. Fedora release 39 (Thirty Nine). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:454,usability,stop,stop,454,"Lazy multithread RDataFrame::Snapshot cause unnessary warning and break gDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am getting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/issues/14132:524,usability,minim,minimal,524,"Lazy multithread RDataFrame::Snapshot cause unnessary warning and break gDirectory; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. I am getting some `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning at the end of the program while found that all output files I expected to be present are present. What make things worse is that snapshot operation in this case can cause `TH1D::SaveAs` to stop working. I did some test regarding the issue and found following minimal reproduce. ### Reproducer. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // this should triggr the snapshot. *act;. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glibs) && ./t`. Result: `Warning in <Snapshot>: A lazy Snapshot action was booked but never triggered.` warning is given but `test3.root` is present. ---. Create `toy.cpp` with content:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TRandom.h>. void toy() {. // comment this line out (i.e. single thread) won't reproduce the problem. ROOT::EnableImplicitMT();. ROOT::RDataFrame emptydf{10000};. auto df = emptydf.Define(""x"", []() { return gRandom->Gaus(); }, {});. ROOT::RDF::RSnapshotOptions opts;. opts.fLazy = true;. auto act = df.Snapshot(""treeout"", ""test3.root"", """", opts);. // create a histogram and trigger the event loop. df.Histo1D(""x"")->SaveAs(""hist.root"");. return;. }. int main() {. toy();. return 0;. }. ```. Run it by `rool -l toy.cpp` or compile and run by `c++ toy.cpp -o t $(root-config --cflags --glib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14132
https://github.com/root-project/root/pull/14133:27,modifiability,pac,package,27,"[cmake] Remove "" linux"" in package names:; E.g. ""root_v6.30.02.Linux-fedora linux39-x86_64-gcc13.2.tar.gz"" should really be ""root_v6.30.02.Linux-fedora39-x86_64-gcc13.2.tar.gz"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14133
https://github.com/root-project/root/pull/14134:102,availability,operat,operator,102,"[tmva][sofie] Fix parsing of single MatMul and fix Pool padding; Fix the parsing of the single MatMul operator:. - the beta attribute used for Gemm when generating code must be set to zero and not 1. - When MatMul is the last operator a bug was present looking for the next operator that was not existing. This is now fixed. - Fix also the default padding in the MaxPool operator. When auto_pad is at default (""notset"") and padding is not specified a zero value should be used instead of 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14134
https://github.com/root-project/root/pull/14134:226,availability,operat,operator,226,"[tmva][sofie] Fix parsing of single MatMul and fix Pool padding; Fix the parsing of the single MatMul operator:. - the beta attribute used for Gemm when generating code must be set to zero and not 1. - When MatMul is the last operator a bug was present looking for the next operator that was not existing. This is now fixed. - Fix also the default padding in the MaxPool operator. When auto_pad is at default (""notset"") and padding is not specified a zero value should be used instead of 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14134
https://github.com/root-project/root/pull/14134:274,availability,operat,operator,274,"[tmva][sofie] Fix parsing of single MatMul and fix Pool padding; Fix the parsing of the single MatMul operator:. - the beta attribute used for Gemm when generating code must be set to zero and not 1. - When MatMul is the last operator a bug was present looking for the next operator that was not existing. This is now fixed. - Fix also the default padding in the MaxPool operator. When auto_pad is at default (""notset"") and padding is not specified a zero value should be used instead of 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14134
https://github.com/root-project/root/pull/14134:371,availability,operat,operator,371,"[tmva][sofie] Fix parsing of single MatMul and fix Pool padding; Fix the parsing of the single MatMul operator:. - the beta attribute used for Gemm when generating code must be set to zero and not 1. - When MatMul is the last operator a bug was present looking for the next operator that was not existing. This is now fixed. - Fix also the default padding in the MaxPool operator. When auto_pad is at default (""notset"") and padding is not specified a zero value should be used instead of 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14134
https://github.com/root-project/root/pull/14134:439,interoperability,specif,specified,439,"[tmva][sofie] Fix parsing of single MatMul and fix Pool padding; Fix the parsing of the single MatMul operator:. - the beta attribute used for Gemm when generating code must be set to zero and not 1. - When MatMul is the last operator a bug was present looking for the next operator that was not existing. This is now fixed. - Fix also the default padding in the MaxPool operator. When auto_pad is at default (""notset"") and padding is not specified a zero value should be used instead of 1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14134
https://github.com/root-project/root/pull/14135:66,deployability,observ,observed,66,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:78,deployability,fail,fail,78,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:387,energy efficiency,current,current,387,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:126,integrability,interfac,interface,126,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:126,interoperability,interfac,interface,126,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:126,modifiability,interfac,interface,126,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:12,performance,memor,memory,12,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:461,performance,memor,memory,461,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:78,reliability,fail,fail,78,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:494,reliability,doe,does,494,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:98,safety,test,test,98,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:19,security,access,access,19,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:454,security,access,access,454,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:66,testability,observ,observed,66,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:91,testability,simpl,simple,91,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:98,testability,test,test,98,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:249,testability,assert,assert,249,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:12,usability,memor,memory,12,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:91,usability,simpl,simple,91,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14135:461,usability,memor,memory,461,"Fix invalid memory access in TRandom3; The TRandom3 generator was observed to fail. a very simple test on the SetSeed/GetSeed interface:. ```. gRandom->SetSeed(11);. auto a = gRandom->GetSeed();. gRandom->SetSeed(12);. auto b = gRandom->GetSeed();. assert(a != b);. ```. Indeed a `GetSeed()` following any `SetSeed(seed)` call always returns the magic number 624. This is because in the current implementation. `GetSeed() { return fMT[fCount624]; }`. we access memory location `fMT[624]` which does not exist in fMT ... and so the value of fCount624 is returned, which happens to be `624`. This commit fixes this bug by imposing an index range between 0 and 623.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14135
https://github.com/root-project/root/pull/14136:625,deployability,fail,fail,625,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:763,deployability,integr,integrate,763,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1608,deployability,observ,observe,1608," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:763,integrability,integr,integrate,763,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1730,integrability,sub,submitting,1730," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:763,interoperability,integr,integrate,763,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:508,modifiability,paramet,parameter,508,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:763,modifiability,integr,integrate,763,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1311,modifiability,pac,packets,1311," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1373,modifiability,pac,packet,1373," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1423,modifiability,pac,packet,1423," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1746,modifiability,pac,packets,1746," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1783,modifiability,pac,packet,1783," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:2027,modifiability,pac,packet,2027," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:33,performance,time,time,33,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:397,performance,time,time-token,397,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:546,performance,time,time,546,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1118,performance,time,times,1118,"st put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret sessio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:625,reliability,fail,fail,625,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:763,reliability,integr,integrate,763,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:832,reliability,doe,does,832,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:55,security,session,session,55,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:402,security,token,token,402,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:409,security,authenticat,authentication,409,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:763,security,integr,integrate,763,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:855,security,session,session,855,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:927,security,session,session,927,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1007,security,checksum,checksum,1007,"cal HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1188,security,checksum,checksum,1188," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1319,security,sign,signs,1319," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1383,security,sign,signed,1383," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1408,security,checksum,checksum,1408," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1494,security,checksum,checksum,1494," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1535,security,control,control,1535," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1679,security,session,session,1679," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:2046,security,sign,signed,2046," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:2069,security,checksum,checksum,2069," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:2115,security,session,session,2115," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:763,testability,integr,integrate,763,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1535,testability,control,control,1535," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:1608,testability,observ,observe,1608," it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use it. To use connection, each packet . should be signed by ~~md5~~ HMAC checksum which is not possible without secret session key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:71,usability,widget,widget,71,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:432,usability,widget,widgets,432,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:473,usability,widget,widgets,473,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:634,usability,support,support,634,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:700,usability,widget,widgets,700,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14136:786,usability,widget,widgets,786,"[webgui] local HTML file, single-time conn key, secret session key; If widget URL includes sensitive information,. one just put it into local file and start browser with such local HTML file. . Internally its will redirect to normal http server. This is most easy way to hide secret information from the system. Exactly this method used by Jupyter. . Now it possible to enforce unique key (single-time-token) authentication for web widgets. In such case URL to connect web widgets always has include `?key=` parameter - which generated new every time. new URL string is requested. Attempt to connect with same key twice will fail. To support such functionality, `GetWindowUrl()` add to all web-based widgets to let use such capability also. from `RBrowser` which integrate all existing widgets together. In addition to that jupyter does, ROOT adds secret session key (after `#` symbol), which remains only on client side. This session key together with connection key are used to create ~~MD5~~ HMAC/SHA256 checksum, which is sends to server instead as connection request. While connection request may be retried many times, new request will get new number and therefore new ~~MD5~~ HMAC checksum. Once connection is accepted - same key cannot be use for new connection, but still will be used for ~~MD5~~ HMAC packets signs. To solve main-in-the-middle problem, each data packet is signed with ~~md5~~ HMAC checksum. Each packet includes sequence counter, which also protected by ~~md5~~ HMAC checksum. Therefore even if anybody gain control over http traffic between. client and server, it only be able to observe traffic but will not be able manipulate it - as long as secret session. key is not gained by other means. Also re-submitting same packets will not be possible - while packet with. already used counter will not be accepted. HTTP sniffing can only catch connection request and try to use it faster than normal client. But even if connection gained by sniffer - it will not be able use i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14136
https://github.com/root-project/root/pull/14137:176,deployability,fail,fail,176,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:517,deployability,updat,updated,517,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:34,interoperability,format,format,34,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:153,interoperability,format,format,153,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:203,interoperability,format,format,203,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:227,interoperability,format,format,227,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:311,interoperability,format,format,311,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:452,interoperability,format,format,452,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:176,reliability,fail,fail,176,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:487,safety,test,tested,487,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:517,safety,updat,updated,517,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:517,security,updat,updated,517,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:487,testability,test,tested,487,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:130,usability,tool,tools,130,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/pull/14137:283,usability,indicat,indicated,283,"Remove duplicated key from .clang-format; # This Pull request:. The key IncludeCategories appeared twice in the file which caused tools other than clang-format (.e.g CLion) to fail to parse the file and format correctly. clang-format took the settings from the second occurrence (as indicated by running `clang-format --dump-config`), so the first occurrence of IncludeCategories was deleted. ## Changes or fixes:. Fixes CLion's parser for the `.clang-format` file. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14137
https://github.com/root-project/root/issues/14138:153,availability,error,errors,153,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:235,availability,error,error,235,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:375,availability,error,error,375,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:503,availability,error,error,503,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:636,availability,error,error,636,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:790,availability,error,error,790,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:956,availability,error,error,956,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1169,availability,Operat,Operating,1169,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1291,availability,error,errors,1291,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1323,availability,error,errors,1323,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:12,deployability,fail,fails,12,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:21,deployability,build,build,21,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:119,deployability,fail,fails,119,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:128,deployability,build,build,128,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1086,deployability,build,build,1086,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1114,deployability,version,version,1114,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1136,deployability,Instal,Installation,1136,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1225,deployability,Fail,Failing,1225,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1241,deployability,build,build,1241,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1353,deployability,build,build,1353,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1114,integrability,version,version,1114,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1114,modifiability,version,version,1114,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:153,performance,error,errors,153,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:235,performance,error,error,235,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:375,performance,error,error,375,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:503,performance,error,error,503,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:636,performance,error,error,636,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:790,performance,error,error,790,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:956,performance,error,error,956,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1291,performance,error,errors,1291,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1323,performance,error,errors,1323,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:12,reliability,fail,fails,12,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:119,reliability,fail,fails,119,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1225,reliability,Fail,Failing,1225,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:153,safety,error,errors,153,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:235,safety,error,error,235,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:375,safety,error,error,375,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:503,safety,error,error,503,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:636,safety,error,error,636,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:790,safety,error,error,790,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:956,safety,error,error,956,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1291,safety,error,errors,1291,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1323,safety,error,errors,1323,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:995,security,token,token,995,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1216,testability,context,context,1216,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:153,usability,error,errors,153,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:235,usability,error,error,235,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:375,usability,error,error,375,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:503,usability,error,error,503,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:636,usability,error,error,636,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:790,usability,error,error,790,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:956,usability,error,error,956,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1291,usability,error,errors,1291,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/issues/14138:1323,usability,error,errors,1323,"6.26.14 tag fails to build; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The 6.26.14 tag fails to build with the following errors emitted by GCC:. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:32: error: stray ‘\’ in program. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:29: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:31:35: error: stray ‘\’ in program. 31 | ""Enric Tejedor Saavedra"",\n 0\n };. ```. ```. /root/parts/root/src/rootx/src/rootcoreteam.h:12:33: error: ‘n’ was not declared in this scope. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ^. /root/parts/root/src/rootx/src/rootcoreteam.h:12:37: error: expected ‘}’ before string constant. 12 | const char *gROOTCoreTeam[] = {\n ""Rene Brun"",. | ~ ^~~~~~~~~~~. /root/parts/root/src/rootx/src/rootcoreteam.h:34:1: error: expected declaration before ‘}’ token. 34 | } // namespace ROOT. | ^. ```. ### Reproducer. Checkout 6-26-14 and attempt to build from source. ### ROOT version. 6.26.14. ### Installation method. Source. ### Operating system. Ubuntu 20.04. ### Additional context. Failing in Snap build environment, which could be related but the errors look like general syntax errors that would effect most build environments.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14138
https://github.com/root-project/root/pull/14139:160,deployability,build,build,160,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:172,deployability,fail,fails,172,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:289,deployability,updat,updated,289,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:172,reliability,fail,fails,172,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:259,safety,test,tested,259,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:289,safety,updat,updated,289,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:289,security,updat,updated,289,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14139:259,testability,test,tested,259,"A few fixes for compiling with nvc++; # This Pull request:. ## Changes or fixes:. Fixes several issues when compiling ROOT with nvc++, but not all of them. The build still fails ultimately, because `clang-tblgen` crashes. See also #9036. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14139
https://github.com/root-project/root/pull/14140:99,availability,state,statement,99,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:237,deployability,updat,updated,237,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:99,integrability,state,statement,99,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:0,modifiability,Refact,Refactor,0,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:0,performance,Refactor,Refactor,0,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:207,safety,test,tested,207,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:237,safety,updat,updated,237,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:237,security,updat,updated,237,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14140:207,testability,test,tested,207,Refactor TBranchProxy::GetReadType to fix nvc++ warning; nvc++ issued a warning on the last return statement being unreachable. # This Pull request:. ## Changes or fixes:. Said warning. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14140
https://github.com/root-project/root/pull/14141:251,deployability,updat,updated,251,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:132,integrability,schema,schema,132,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:45,interoperability,format,formatting,45,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:76,interoperability,format,formatting,76,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:175,interoperability,format,formatting,175,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:221,safety,test,tested,221,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:251,safety,updat,updated,251,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:251,security,updat,updated,251,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14141:221,testability,test,tested,221,"[NFC][ntuple] Improve `RNTupleImporter` docs formatting; This PR fixes some formatting for displaying the leaf count arrays RNTuple schema, as well as some other (very) minor formatting improvements. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14141
https://github.com/root-project/root/pull/14142:214,deployability,build,building,214,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:268,deployability,observ,observation,268,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:725,deployability,Updat,UpdateSchema,725,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:760,deployability,depend,depends,760,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:294,integrability,wrap,wrapping,294,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:760,integrability,depend,depends,760,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:970,integrability,buffer,buffered,970,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:9,modifiability,Refact,Refactor,9,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:760,modifiability,depend,depends,760,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:914,modifiability,interm,intermediate,914,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:9,performance,Refactor,Refactor,9,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:126,performance,parallel,parallel,126,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:53,safety,review,reviewing,53,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:700,safety,Avoid,Avoid,700,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:725,safety,Updat,UpdateSchema,725,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:760,safety,depend,depends,760,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:1121,safety,avoid,avoid,1121,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:725,security,Updat,UpdateSchema,725,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:820,security,access,access,820,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:53,testability,review,reviewing,53,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:268,testability,observ,observation,268,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:564,testability,context,context,564,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:760,testability,depend,depends,760,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14142:116,usability,prototyp,prototype,116,"[ntuple] Refactor `RPageSink` class hierarchy; After reviewing the implementation of `RPageSinkBuf` and starting to prototype parallel RNTuple writing, I would like to propose moving the code related to descriptor building and serialization into a new class. The main observation here is that ""wrapping"" `RPageSink`s do not need that functionality, only the ""final"" sink that actually writes to files or DAOS. For now, I named the class `RPagePersistentSink`, but that's of course up for debate. Other options include ""final"" (even though that is ambiguous in the context of a class hierarchy) and ""serializing"". The first two commits may be useful independent of the rest of the series; the one to ""Avoid calling `PageSink::UpdateSchema` from `RPageSinkBuf`"" depends on moving the `Commit` implementations first (which access `fOpenColumnRanges` and `fOpenPageRanges`. *If* we decide that we want to introduce an intermediate class, we need to carefully benchmark with buffered writes disabled (ie without `RPageSinkBuf`) because there will now be two `virtual` function calls for every `Commit`; with `RPageSinkBuf` we avoid the duplicate serialization. I would expect negligible impact, but better to be sure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14142
https://github.com/root-project/root/pull/14143:123,performance,perform,performace,123,"TFormula/TTreeFormula: Use TMath::Pi() instead of TMath::ACos(-1); It's a minor change that might or might not give better performace, but at least it means we can close this JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-6954",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14143
https://github.com/root-project/root/pull/14143:123,usability,perform,performace,123,"TFormula/TTreeFormula: Use TMath::Pi() instead of TMath::ACos(-1); It's a minor change that might or might not give better performace, but at least it means we can close this JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-6954",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14143
https://github.com/root-project/root/pull/14143:164,usability,close,close,164,"TFormula/TTreeFormula: Use TMath::Pi() instead of TMath::ACos(-1); It's a minor change that might or might not give better performace, but at least it means we can close this JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-6954",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14143
https://github.com/root-project/root/pull/14144:15,deployability,build,build,15,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:33,deployability,version,versions,33,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:170,deployability,depend,dependence,170,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:33,integrability,version,versions,33,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:170,integrability,depend,dependence,170,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:33,modifiability,version,versions,33,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:170,modifiability,depend,dependence,170,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:170,safety,depend,dependence,170,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14144:170,testability,depend,dependence,170,Allows ROOT to build with recent versions of Protobuf; Protobuf now generates its own CMake config files. The new config files are necessary because Protobuf has grown a dependence on abseil-cpp.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14144
https://github.com/root-project/root/pull/14145:135,availability,error,errors,135,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:286,availability,Error,Error,286,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:4,deployability,depend,dependency,4,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:88,deployability,build,building,88,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:180,deployability,build,building,180,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:18,energy efficiency,Core,Core,18,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:98,energy efficiency,Core,Core,98,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:4,integrability,depend,dependency,4,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:4,modifiability,depend,dependency,4,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:135,performance,error,errors,135,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:286,performance,Error,Error,286,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:4,safety,depend,dependency,4,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:135,safety,error,errors,135,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:286,safety,Error,Error,286,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:4,testability,depend,dependency,4,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:135,usability,error,errors,135,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14145:286,usability,Error,Error,286,"Add dependency of Core on etc/gitinfo.txt; Make sure `etc/gitinfo.txt` is copied before building `Core`. This should fix the following errors when generating the dictionaries when building from scratch:. ```. Generating G__Gui.cxx, ../../bin/libGui_rdict.pcm, ../../bin/libGui.rootmap. Error in <UnknownClass::ReadGitInfo()>: Cannot determine git info: etc/gitinfo.txt not found! ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14145
https://github.com/root-project/root/pull/14146:76,availability,error,error,76,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:317,availability,Error,Error,317,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:336,availability,error,error,336,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:498,availability,error,error,498,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:527,availability,error,error,527,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:646,availability,Error,Error,646,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:89,deployability,Resourc,Resource,89,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:359,deployability,contain,container,359,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:455,deployability,fail,failed,455,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:479,deployability,contain,container,479,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:511,deployability,contain,container,511,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:603,deployability,contain,container,603,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:666,deployability,fail,fail,666,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:89,energy efficiency,Resourc,Resource,89,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:76,performance,error,error,76,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:89,performance,Resourc,Resource,89,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:317,performance,Error,Error,317,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:336,performance,error,error,336,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:498,performance,error,error,498,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:527,performance,error,error,527,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:589,performance,memor,memory,589,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:646,performance,Error,Error,646,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:455,reliability,fail,failed,455,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:666,reliability,fail,fail,666,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:76,safety,error,error,76,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:89,safety,Resourc,Resource,89,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:317,safety,Error,Error,317,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:336,safety,error,error,336,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:498,safety,error,error,498,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:527,safety,error,error,527,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:646,safety,Error,Error,646,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:89,testability,Resourc,Resource,89,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:76,usability,error,error,76,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:113,usability,support,supported,113,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:317,usability,Error,Error,317,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:336,usability,error,error,336,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:498,usability,error,error,498,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:527,usability,error,error,527,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:589,usability,memor,memory,589,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/pull/14146:646,usability,Error,Error,646,"[ci] Remove `--shm-size=1g -m 16`:; I suspect that this is the cause of the error:. ```. Resource limits are not supported and ignored on cgroups V1 rootless systems. aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. /bin/docker start aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407. Error: OCI runtime error: unable to start container ""aaa674cabd09a8ff746c97b6c9b065865428b74ddcbcbe54a9892fc3c47d7407"": runc: runc create failed: unable to start container process: error during container init: error setting cgroup config for procHooks process: cannot set memory limit: container could not join or create cgroup. Error: Docker start fail with exit code 125. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14146
https://github.com/root-project/root/issues/14147:1255,energy efficiency,current,current,1255,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:251,modifiability,variab,variables,251,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:314,modifiability,variab,variables,314,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:1059,modifiability,variab,variables,1059,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:1182,modifiability,variab,variables,1182,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:1381,security,modif,modification,1381,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:1358,testability,plan,planning,1358,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/issues/14147:1422,testability,context,context,1422,"[DF] Allow defining multiple columns in single RDataFrame::Define() call; ### Feature description. When I am doing migration of analysis code from previous work to `RDataFrame`, there can be cases when some code can finish the calculation of multiple variables in a single call. (like calculate various kinematics variables for one reconstructed particle). While I could be using `RDataFrame` to write code like: . ```cpp. //... .Define(""particle"", [](event_recordT& e){...}, {""event_record""}). .Define(""KinVar1"",[](particleT &p){return p.KinVar1();},{""particle""}). .Define(""KinVar2"",[](particleT &p){return p.KinVar2();},{""particle""}). //... ```. , but it would be great if I could do something like . ```cpp. //... .Define({""KinVar1"", ""KinVar2""}, [](event_recordT& e){... return std::make_tuple(p.KinVar1(),p.KinVar2()); }, {""event_record""} ). //... ```. with an overload of Define that looks like:. `RDataFrame::Define(const ColumnNames_t &, F && , const ColumnNames_t &)`. . Or to say, is it possible to add another overload that takes a list of names of variables to define, and takes a callable object that returns a tuple. Internally it will unpack the tuple and put all the variables in different columns. ### Alternatives considered. Actually my current workaround is to define a column with tuple and unpack it with multiple define, since I am not planning to do so many modification to old code. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14147
https://github.com/root-project/root/pull/14149:150,availability,error,error,150,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:163,availability,Error,Error,163,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:150,performance,error,error,150,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:163,performance,Error,Error,163,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:150,safety,error,error,150,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:163,safety,Error,Error,163,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:51,security,auth,auth,51,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:189,security,Authenticat,Authenticate,189,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:304,security,auth,authserver,304,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:384,security,auth,authserver-c,384,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:150,usability,error,error,150,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14149:163,usability,Error,Error,163,"Revert ""Remove unused DaemonUtils.{h,cxx} from net/auth""; This reverts commit b327dd8fd159494666842607708140c429fa4055. This should fix the following error:. ```. Error in <TPServerSocket::Authenticate>: can't find SrvAuthenticate. ```. as reported on the forum: [Getting ""can't find SrvAuthenticate"" in authserver.C](https://root-forum.cern.ch/t/getting-cant-find-srvauthenticate-in-authserver-c/54469)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14149
https://github.com/root-project/root/pull/14150:99,deployability,build,building-webgui-requires-http,99,[webgui] do not compile without http; Address request in forum:. https://root-forum.cern.ch/t/root-building-webgui-requires-http/57340/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14150
https://github.com/root-project/root/pull/14152:16,deployability,build,build,16,[webgui] do not build without http [6.28]; Backport of #14150,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14152
https://github.com/root-project/root/issues/14153:990,availability,Operat,Operating,990,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:591,deployability,Updat,Update,591,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:767,deployability,version,version,767,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:957,deployability,Instal,Installation,957,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:8,energy efficiency,draw,drawn,8,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:231,energy efficiency,draw,draw,231,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:464,energy efficiency,Draw,Draw,464,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:745,energy efficiency,Draw,Draw,745,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:767,integrability,version,version,767,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:767,modifiability,version,version,767,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:591,safety,Updat,Update,591,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:572,security,Modif,Modified,572,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:591,security,Updat,Update,591,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/issues/14153:1037,testability,context,context,1037,"TH2 not drawn if only TH2::AddBinContent is called (Entries=0). For TH1 it works.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Assume one only uses TH2::AddBinContent to fill a 2D histogram. Then you draw it with COLZ. Resulting canvas is empty. In contrast, if you do the same with TH1::AddBinContent, it works without problems. ### Reproducer. ```. auto h2 = new TH2I(""h2"", ""h2"", 10, 0, 1, 2, 0, 2);. h2->AddBinContent(16,5);. h2->Draw(""COLZ"");. ```. Nothing happens now, canvas is empty. You are forced to:. ```. h2->SetEntries(1). gPad->Modified();. gPad->Update();. ```. In contrast, with TH1, all works fine without calling SetEntries:. ```. auto h = new TH1I(""h"", ""h"", 10, 0, 1);. h->AddBinContent(3,5). h->Draw(). ```. ### ROOT version. ```. ROOT v6.30/02. Built for linuxx8664gcc on Nov 27 2023, 19:50:38. From tags/v6-30-02@. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```. ### Installation method. Binary. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14153
https://github.com/root-project/root/pull/14154:325,availability,avail,available,325,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:6,deployability,version,version,6,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:401,deployability,updat,updated,401,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:6,integrability,version,version,6,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:6,modifiability,version,version,6,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:325,reliability,availab,available,325,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:325,safety,avail,available,325,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:371,safety,test,tested,371,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:401,safety,updat,updated,401,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:325,security,availab,available,325,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:401,security,updat,updated,401,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/pull/14154:371,testability,test,tested,371,"2D/3D version of TH1::AddBinContent, as with TH2::SetBinContent/TH3::SetBinContent; # This Pull request:. ## Changes or fixes:. You can call `TH1::SetBinContent(1, 5)` and `TH2::SetBinContent(1, 1, 5)`. You can call `TH1::AddBinContent(1,5)` but you cannot call `TH2::AddBinContent(1, 1, 5)`. This PR makes the latter option available, for symmetry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14154
https://github.com/root-project/root/issues/14155:204,availability,servic,services,204,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3616,availability,Error,Error,3616,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3829,availability,Operat,Operating,3829,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:26,deployability,Fail,Fails,26,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:55,deployability,build,builds,55,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:204,deployability,servic,services,204,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:256,deployability,build,build,256,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:347,deployability,fail,fails,347,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:491,deployability,build,build,491,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:525,deployability,build,build,525,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:531,deployability,build,build,531,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:769,deployability,stack,stack,769,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1328,deployability,Stack,StackTrace,1328,"oot, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1364,deployability,build,build,1364,"ime on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1398,deployability,build,build,1398,"rch=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1404,deployability,build,build,1404,"tive* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1518,deployability,build,build,1518,"sts-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1552,deployability,build,build,1552,". /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1558,deployability,build,build,1558,"/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2335,deployability,stack,stack,2335,"() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2791,deployability,stack,stack,2791,"f8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3640,deployability,build,build,3640,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3674,deployability,build,build,3674,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3680,deployability,build,build,3680,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3771,deployability,version,version,3771,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3792,deployability,Instal,Installation,3792,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1090,energy efficiency,optim,optimized,1090,"tforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1240,energy efficiency,optim,optimized,1240,"llrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2022,energy efficiency,optim,optimized,2022,"inux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2044,energy efficiency,optim,optimized,2044,"00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2071,energy efficiency,optim,optimized,2071,"waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3370,energy efficiency,optim,optimized,3370,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3392,energy efficiency,optim,optimized,3392,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3419,energy efficiency,optim,optimized,3419,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:204,integrability,servic,services,204,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2660,integrability,sub,submit,2660,"ff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3712,integrability,messag,message,3712,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3771,integrability,version,version,3771,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:92,interoperability,platform,platforms,92,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3712,interoperability,messag,message,3712,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:204,modifiability,servic,services,204,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2438,modifiability,variab,variable,2438,"55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3771,modifiability,version,version,3771,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:358,performance,time,time,358,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:366,performance,time,time,366,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:566,performance,time,timeout,566,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1090,performance,optimiz,optimized,1090,"tforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1240,performance,optimiz,optimized,1240,"llrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2022,performance,optimiz,optimized,2022,"inux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2044,performance,optimiz,optimized,2044,"00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2071,performance,optimiz,optimized,2071,"waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3370,performance,optimiz,optimized,3370,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3392,performance,optimiz,optimized,3392,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3419,performance,optimiz,optimized,3419,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3616,performance,Error,Error,3616,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:26,reliability,Fail,Fails,26,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:347,reliability,fail,fails,347,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:269,safety,test,testReport,269,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:455,safety,TEST,TEST,455,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:566,safety,timeout,timeout,566,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:616,safety,TEST,TEST,616,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3594,safety,TEST,TEST,3594,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3616,safety,Error,Error,3616,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:1589,security,sign,signal,1589,"t mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT promp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:269,testability,test,testReport,269,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:455,testability,TEST,TEST,455,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:616,testability,TEST,TEST,616,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:775,testability,trace,trace,775,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2341,testability,trace,trace,2341,"from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2797,testability,trace,trace,2797,"0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3594,testability,TEST,TEST,3594,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3876,testability,context,context,3876,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:460,usability,COMMAND,COMMAND,460,"roottest.root.hist.h2root Fails always on march=native builds and sporadically on all other platforms; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```. -- TEST COMMAND -- . cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist. /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook. -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0, usage=usage. entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30. #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc. entry=0x7ffffe689758, options=options. entry=0) at ./posix/waitpid.c:38. #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2261,usability,hint,hint,2261,"ysdeps/posix/system.c:171. #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2475,usability,help,help,2475,"Signals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2533,usability,prefer,preferably,2533,"-pullrequests-build/build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ============",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2554,usability,command,command,2554,"build/lib/libCore.so.6.31. #5 <signal handler called>. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2707,usability,prefer,preferably,2707,"main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2729,usability,command,command,2729,"5ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:2873,usability,help,help,2873,"s/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14155:3616,usability,Error,Error,3616,"main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. The lines below might hint at the cause of the crash. If you see question. marks as part of the stack trace, try to recompile with debugging information. enabled and export CLING_DEBUG=1 environment variable before running. You may get help by asking at the ROOT forum https://root.cern/forum. preferably using the command (.forum bug) in the ROOT prompt. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern/bugs or (preferably) using the command (.gh bug) in. the ROOT prompt. Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #6 0x0000556fff8ce440 in mzlink_ (). #7 0x0000556fff8be829 in hlimit_ (). #8 0x0000556fff8ad586 in main (). #9 0x00007f55ea934d90 in __libc_start_call_main (main=main. entry=0x556fff8ad4d0 <main>, argc=argc. entry=2, argv=argv. entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58. #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392. #11 0x0000556fff8ad8b5 in _start (). ===========================================================. -- END TEST OUTPUT --. CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):. got exit code 139 but expected 0. ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14155
https://github.com/root-project/root/issues/14156:264,availability,error,errors,264,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:300,availability,error,error,300,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:469,availability,error,error,469,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2962,availability,Operat,Operating,2962,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:253,deployability,fail,fail,253,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:713,deployability,fail,fails,713,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1747,deployability,manag,manager,1747," which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1865,deployability,modul,module,1865," but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2018,deployability,stack,stack,2018," 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No resp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2112,deployability,modul,modules,2112,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2897,deployability,version,version,2897,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2919,deployability,Instal,Installation,2919,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:212,energy efficiency,load,loaded,212,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:314,energy efficiency,alloc,allocate,314,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1747,energy efficiency,manag,manager,1747," which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2187,energy efficiency,alloc,allocations,2187,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2427,integrability,sub,submit,2427,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2897,integrability,version,version,2897,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1865,modifiability,modul,module,1865," but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2112,modifiability,modul,modules,2112,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2897,modifiability,version,version,2897,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:212,performance,load,loaded,212,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:264,performance,error,errors,264,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:300,performance,error,error,300,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:323,performance,memor,memory,323,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:469,performance,error,error,469,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:964,performance,memor,memory,964,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1345,performance,time,time,1345,"e job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1408,performance,memor,memory,1408,"g. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1439,performance,memor,memory,1439,"tual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1475,performance,memor,memory,1475,"fusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Rep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1504,performance,performance issu,performance issue,1504," happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gIn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1740,performance,memor,memory,1740,"ions, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1779,performance,memor,memory,1779,"00 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:253,reliability,fail,fail,253,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:713,reliability,fail,fails,713,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:264,safety,error,errors,264,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:300,safety,error,error,300,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:469,safety,error,error,469,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1747,safety,manag,manager,1747," which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). prin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1865,safety,modul,module,1865," but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstat",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1906,safety,except,exception,1906,"nst the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2112,safety,modul,modules,2112,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:292,security,session,session,292,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:624,testability,simpl,simple,624,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:3004,testability,context,context,3004,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:264,usability,error,errors,264,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:300,usability,error,error,300,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:323,usability,memor,memory,323,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:396,usability,close,close,396,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:469,usability,error,error,469,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:624,usability,simpl,simple,624,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:964,usability,memor,memory,964,"cling jit can hit VMA limit; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411). in which a job that loaded many dictionaries was starting to fail with. errors like. ```. cling JIT session error: Cannot allocate memory. ```. Although the job in question was not small, it was also not close to hitting. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1408,usability,memor,memory,1408,"g. any limit on the process virtual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1439,usability,memor,memory,1439,"tual size, which made this error confusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1475,usability,memor,memory,1475,"fusing. It turned out that what was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Rep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1504,usability,perform,performance,1504,"was happening was that the job was hitting. the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below. When i run this on lxplus, it fails after about 21600 iterations, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1740,usability,memor,memory,1740,"ions, at which. point we have. ```. 21600 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1779,usability,memor,memory,1779,"00 vmsize 1.2G nvma 65469. ```. So the total vmsize still (relatively...) quite small, but the number. of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:1925,usability,support,support,1925,"it. Looking at a small part of the memory map:. ```. 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2318,usability,behavi,behavior,2318,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14156:2451,usability,document,document,2451,"0 0 . 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 . 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 . 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 . 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 . 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 . 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 . ```. So each time the jitter runs, it is producing a section of executable. memory, a section of read-only memory, and a section of read-write memory. This would also be a performance issue. The jitter should somehow be more intelligent about grouping together. regions of the same protection. This may however be in tension. with other requirements, such as this comment from IncrementalJit.cpp:. ```. // A memory manager for Cling that reserves memory for code and data sections. // to keep them contiguous for the emission of one module. This is required. // for working exception handling support since one .eh_frame section will. // refer to many separate .text sections. However, stack unwinding in libgcc. // assumes that two unwinding objects (for example coming from two modules). // are non-overlapping, which is hard to guarantee with separate allocations. // for the individual code sections. ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```. import ROOT. ROOT.gInterpreter.ProcessLine ('void aaa() {}'). def once():. ROOT.gInterpreter.ProcessLine ('aaa();'). return. def printstats (i):. vmsize = int (open('/proc/self/statm').read().split()[0]). nvma = len (open('/proc/self/maps').readlines()). print (f'{i:6} vmsize {vmsize*4/1024/1024:6.2}G nvma {nvma:6}'). return. for i in range(30000):. if i%100 == 0: printstats (i). once(). ```. ### ROOT version. 6.28.08. ### Installation method. LCG_104b_ATLAS_3. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14156
https://github.com/root-project/root/issues/14157:247,availability,error,errors,247,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:742,availability,error,error,742,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1612,availability,Operat,Operating,1612,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:19,deployability,build,build,19,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:166,deployability,build,building,166,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:447,deployability,version,version,447,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:591,deployability,version,version,591,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:697,deployability,configurat,configuration,697,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:715,deployability,build,build,715,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:752,deployability,patch,patch,752,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1546,deployability,version,version,1546,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1568,deployability,Instal,Installation,1568,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1589,deployability,Build,Build,1589,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1692,deployability,build,building,1692,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:334,energy efficiency,core,core,334,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1151,energy efficiency,core,core,1151,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1221,energy efficiency,core,core,1221,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:447,integrability,version,version,447,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:591,integrability,version,version,591,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:697,integrability,configur,configuration,697,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1546,integrability,version,version,1546,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:447,modifiability,version,version,447,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:591,modifiability,version,version,591,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:697,modifiability,configur,configuration,697,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1546,modifiability,version,version,1546,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:247,performance,error,errors,247,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:742,performance,error,error,742,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:402,reliability,doe,does,402,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:573,reliability,doe,does,573,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:247,safety,error,errors,247,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:742,safety,error,error,742,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:752,safety,patch,patch,752,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:647,security,modif,modification,647,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:697,security,configur,configuration,697,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:752,security,patch,patch,752,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:1672,testability,context,context,1672,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:247,usability,error,errors,247,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/issues/14157:742,usability,error,error,742,"Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building minuit2 standalone with root 6.30/02 (`-Dminuit2_standalone=ON`), cmake errors out because it is unable to find the `RVersion.hxx` file. It tries to look for `core/foundation/inc/ROOT/RVersion.hxx` but of course that directory does not exist inside `math/minuit2` and the version file has been copied by `copy_standalone()` to the top-level dir (i.e. in `math/minuit2`) itself. As a results, cmake does not find the version file and aborts. This is fixed by the following modification to `StandAlone.cmake`, whereupon the configuration and build proceeds without any error. ```patch. Index: root-6.30.02/math/minuit2/StandAlone.cmake. ===================================================================. --- root-6.30.02.orig/math/minuit2/StandAlone.cmake. +++ root-6.30.02/math/minuit2/StandAlone.cmake. @@ -40,8 +40,8 @@ endfunction(). include(copy_standalone.cmake). # Copy these files in if needed. -copy_standalone(SOURCE ../.. DESTINATION . OUTPUT VERSION_FILE. - FILES core/foundation/inc/ROOT/RVersion.hxx). +copy_standalone(SOURCE ../../core/foundation/inc/ROOT DESTINATION . OUTPUT VERSION_FILE. + FILES RVersion.hxx). copy_standalone(SOURCE ../.. DESTINATION . FILES LGPL2_1.txt). ```. Please let me know if this is the right fix. Thanks in advance. ### Reproducer. Running `cmake -Dminuit2_standalone:BOOL=ON` should be enough to bring up the issue. ### ROOT version. 6.30/02. ### Installation method. Build from source. ### Operating system. Linux openSUSE Tumbleweed. ### Additional context. Found when building RPMs for distro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14157
https://github.com/root-project/root/pull/14158:40,deployability,Continu,Continuing,40,[RF] Further RooFit code modernization; Continuing the RooFit code modernization campaign.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/14158
https://github.com/root-project/root/issues/14159:220,availability,Error,Error,220,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:368,availability,error,errors,368,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:668,availability,error,error,668,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:847,availability,Operat,Operating,847,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:69,deployability,build,building,69,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:311,deployability,INSTAL,INSTALL,311,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:423,deployability,build,building,423,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:471,deployability,INSTAL,INSTALL,471,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:607,deployability,build,build,607,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:626,deployability,build,build,626,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:700,deployability,version,version,700,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:789,deployability,Instal,Installation,789,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:822,deployability,build,build,822,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:938,deployability,version,version,938,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:965,deployability,releas,release,965,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:1021,deployability,VERSION,VERSION,1021,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:248,integrability,messag,message,248,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:344,integrability,Configur,Configuring,344,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:700,integrability,version,version,700,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:938,integrability,version,version,938,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:1021,integrability,VERSION,VERSION,1021,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:248,interoperability,messag,message,248,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
https://github.com/root-project/root/issues/14159:1104,interoperability,platform,platform,1104,"CMake exits complaining `ROOT must be built out-of-source` even when building out-of-source; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. CMake complains. ```console. $ cmake ../root. CMake Error at CMakeLists.txt:20 (message):. ROOT must be built out-of-source. Please see README/INSTALL for more information. -- Configuring incomplete, errors occurred! ```. and exit with status 1 even when building out-of-source as instructed by `README/INSTALL`. ### Reproducer. 1. Run. ```sh. ssh <username>@lxplus8.cern.ch. git clone https://github.com/root-project/root.git. mkdir root-build.foo. cd root-build.foo. cmake ../root. ```. 2. See the error described above. ### ROOT version. Git branch: master. Git revision: 2ee691da61ca51e4dd857ac8c88f778948fb49a7. ### Installation method. Out-of-tree build using CMake 3. ### Operating system. LXPLUS8 (CentOS Stream 8, x86_64-linux). ### Additional context. * CMake version 3.20.2. * `/etc/os-release` content. ```. NAME=""Red Hat Enterprise Linux"". VERSION=""8.9 (Ootpa)"". ID=""rhel"". ID_LIKE=""fedora"". VERSION_ID=""8.9"". PLATFORM_ID=""platform:el8"". PRETTY_NAME=""Red Hat Enterprise Linux 8.9 (Ootpa)"". ANSI_COLOR=""0;31"". CPE_NAME=""cpe:/o:redhat:enterprise_linux:8::baseos"". HOME_URL=""https://www.redhat.com/"". DOCUMENTATION_URL=""https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8"". BUG_REPORT_URL=""https://bugzilla.redhat.com/"". REDHAT_BUGZILLA_PRODUCT=""Red Hat Enterprise Linux 8"". REDHAT_BUGZILLA_PRODUCT_VERSION=8.9. REDHAT_SUPPORT_PRODUCT=""Red Hat Enterprise Linux"". REDHAT_SUPPORT_PRODUCT_VERSION=""8.9"". ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/14159
