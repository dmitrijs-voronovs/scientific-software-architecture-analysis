id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/7249:7569,performance,ERROR,ERROR,7569,"path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7634,performance,ERROR,ERROR,7634,"s3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8042,performance,load,loading,8042,"uit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3255,reliability,fail,failed,3255,"hape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/asl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7556,reliability,fail,failed,7556,".7.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1081,safety,input,input,1081," Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1774,safety,test,test,1774,"ed to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1845,safety,test,test,1845,"CBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3233,safety,error,error,3233,"ode of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3307,safety,Error,Error,3307,">/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/asl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7569,safety,ERROR,ERROR,7569,"path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7634,safety,ERROR,ERROR,7634,"s3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8000,safety,UPDAT,UPDATE,8000,"/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8265,safety,updat,updated,8265,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7826,security,session,session,7826,"na/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be suffi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8000,security,UPDAT,UPDATE,8000,"/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8013,security,Access,Access,8013,"3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8265,security,updat,updated,8265,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8336,security,session,session,8336,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1774,testability,test,test,1774,"ed to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1845,testability,test,test,1845,"CBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:2988,testability,unit,unit,2988,"F, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8609,testability,context,context,8609,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8638,testability,context,context,8638,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:19,usability,custom,custom,19,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:439,usability,clear,clear,439,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:487,usability,behavi,behavior,487,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:552,usability,custom,custom,552,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:663,usability,custom,custom,663,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:710,usability,behavi,behavior,710,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:728,usability,clear,clear,728,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:936,usability,behavi,behavior,936,"[RF] Cannot import custom PDF into RooWorkspace; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, Univers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1081,usability,input,input,1081," Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:1259,usability,custom,custom-pdf-in-rooworkspace,1259,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. `RooWorkspace` is supposed to be able to store custom PDFs using `importClassCode`, but, even after setting `Impl` and `Decl` directories, a workspace with a custom PDF will crash on opening. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Ideally, just. ```python. ws.importClassCode(""RooSDSCBShape.cxx""). ```. should be sufficient. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The `.cxx` and `.h` files can be found on the [forum](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). ```python. import os. import ROOT as r. # declare PDF. r.gROOT.ProcessLine("".x RooSDSCBShape.cxx""). # manually set Decl and Impl files. cls = r.TClass.GetClass(""RooSDSCBShape""). cls.SetDeclFile(f""{os.getcwd()}/RooSDSCBShape.h"", 0). cls.SetImplFileName(f""{os.getcwd()}/RooSDSCBShape.cxx""). # store the class in a workspace. ws = r.RooWorkspace(""ws""). ws.addClassDeclImportDir(os.getcwd()). ws.addClassImplImportDir(os.getcwd()). ws.importClassCode(cls). ws.writeToFile(""test.root""). # extract the class from the workspace. f = r.TFile.Open(""test.root""). inws = f.Get(""ws""). ```. Output:. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. (RooSDSCBShape) An instance of RooSDSCBShape. [#1] INFO:ObjectHandling -- RooWorkspace::autoImportClass(ws) importing code of class RooSDSCBShape from /<pa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3233,usability,error,error,3233,"ode of class RooSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3247,usability,command,command,3247,"oSDSCBShape from /<path/to>/RooSDSCBShape.cxx and /<path/to>/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3307,usability,Error,Error,3307,">/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() creating code export directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws to extract coded embedded in workspace. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting declaration code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.h. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/asl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:3703,usability,User,Users,3703,". [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Extracting implementation code of class RooSDSCBShape, file .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape.cxx. [#1] INFO:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() Compiling code unit RooSDSCBShape to define class RooSDSCBShape. Info in <TMacOSXSystem::ACLiC>: creating shared library /<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so. ld: library not found for -lCheckFix. clang-11: error: linker command failed with exit code 1 (use -v to see invocation). Error in <ACLiC>: Executing 'cd ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws"" ; x86_64-apple-darwin13.4.0-clang++ -fPIC -c -O3 -DNDEBUG -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -fmessage-length=0 -I/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include -fdebug-prefix-map=/Users/runner/miniforge3/conda-bld/root_1607274686894/work=/usr/local/src/conda/root_base-6.22.6 -fdebug-prefix-map=/<path/to>/opt/anaconda3/envs/aslsRun2_ana=/usr/local/src/conda-prefix -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -I$ROOTSYS/include -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/etc//cling"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include"" -I""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/include/python3.9"" -D__ACLIC__ ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx_ACLiC_dict.cxx"" ; x86_64-apple-darwin13.4.0-clang++ -O3 -DNDEBUG ""/<path/to>/Downloads/.wscode.305",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7569,usability,ERROR,ERROR,7569,"path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libROOTPythonizations3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:7634,usability,ERROR,ERROR,7634,"s3_9.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libTree.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libNet.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libImt.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libtbb.dylib"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libRooFitCore.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMinuit.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8295,usability,close,close,8295,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8347,usability,confirm,confirm,8347,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:8737,usability,custom,custom-pdf-in-rooworkspace,8737,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/issues/7249:9100,usability,document,documentation,9100,"oam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed! [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: . 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/. 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'. 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class. Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used. 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file. 5) Reopen file in clean ROOT session to confirm that problems are fixed. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context. <!--. Add any other context about the problem here. -->. See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to appear in the documentation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7249
https://github.com/root-project/root/pull/7250:54,safety,Avoid,Avoid,54,[roofit] do not apply -fno-math-errno flags for MSVC; Avoid warnings in Windows compilation,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7250
https://github.com/root-project/root/pull/7251:100,deployability,log,logging,100,TGSpeedo: enable retrieval of odometer value; In the same way that you can retrieve peak value. For logging purposes in parallel to the GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7251
https://github.com/root-project/root/pull/7251:120,performance,parallel,parallel,120,TGSpeedo: enable retrieval of odometer value; In the same way that you can retrieve peak value. For logging purposes in parallel to the GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7251
https://github.com/root-project/root/pull/7251:100,safety,log,logging,100,TGSpeedo: enable retrieval of odometer value; In the same way that you can retrieve peak value. For logging purposes in parallel to the GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7251
https://github.com/root-project/root/pull/7251:100,security,log,logging,100,TGSpeedo: enable retrieval of odometer value; In the same way that you can retrieve peak value. For logging purposes in parallel to the GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7251
https://github.com/root-project/root/pull/7251:100,testability,log,logging,100,TGSpeedo: enable retrieval of odometer value; In the same way that you can retrieve peak value. For logging purposes in parallel to the GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7251
https://github.com/root-project/root/issues/7252:751,deployability,automat,automatically,751,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1459,deployability,integr,integralSig,1459,"pinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1507,deployability,integr,integralBkg,1507," test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1590,deployability,integr,integralSig,1590," to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalizatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1603,deployability,integr,integralBkg,1603,"t this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1685,deployability,integr,integralSig,1685,"y/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1766,deployability,integr,integralBkg,1766,"sed (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1810,deployability,scale,scaledSigNorm,1810,"ven below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1911,deployability,scale,scaledBkgNorm,1911,"gative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGray)). frame.Draw(). canv.SaveAs(""test_negative_component.pdf""). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:522,energy efficiency,model,model,522,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1810,energy efficiency,scale,scaledSigNorm,1810,"ven below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1911,energy efficiency,scale,scaledBkgNorm,1911,"gative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGray)). frame.Draw(). canv.SaveAs(""test_negative_component.pdf""). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:2828,energy efficiency,Draw,Draw,2828,"gative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGray)). frame.Draw(). canv.SaveAs(""test_negative_component.pdf""). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:159,integrability,compon,component,159,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1459,integrability,integr,integralSig,1459,"pinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1507,integrability,integr,integralBkg,1507," test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1590,integrability,integr,integralSig,1590," to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalizatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1603,integrability,integr,integralBkg,1603,"t this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1685,integrability,integr,integralSig,1685,"y/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1766,integrability,integr,integralBkg,1766,"sed (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:159,interoperability,compon,component,159,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1459,interoperability,integr,integralSig,1459,"pinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1507,interoperability,integr,integralBkg,1507," test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1590,interoperability,integr,integralSig,1590," to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalizatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1603,interoperability,integr,integralBkg,1603,"t this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1685,interoperability,integr,integralSig,1685,"y/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1766,interoperability,integr,integralBkg,1766,"sed (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:159,modifiability,compon,component,159,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1459,modifiability,integr,integralSig,1459,"pinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1507,modifiability,integr,integralBkg,1507," test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1590,modifiability,integr,integralSig,1590," to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalizatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1603,modifiability,integr,integralBkg,1603,"t this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1685,modifiability,integr,integralSig,1685,"y/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1766,modifiability,integr,integralBkg,1766,"sed (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1810,modifiability,scal,scaledSigNorm,1810,"ven below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1911,modifiability,scal,scaledBkgNorm,1911,"gative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGray)). frame.Draw(). canv.SaveAs(""test_negative_component.pdf""). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1810,performance,scale,scaledSigNorm,1810,"ven below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1911,performance,scale,scaledBkgNorm,1911,"gative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGray)). frame.Draw(). canv.SaveAs(""test_negative_component.pdf""). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1459,reliability,integr,integralSig,1459,"pinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1507,reliability,integr,integralBkg,1507," test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1590,reliability,integr,integralSig,1590," to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalizatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1603,reliability,integr,integralBkg,1603,"t this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1685,reliability,integr,integralSig,1685,"y/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1766,reliability,integr,integralBkg,1766,"sed (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:514,safety,test,test,514,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:522,security,model,model,522,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1459,security,integr,integralSig,1459,"pinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1507,security,integr,integralBkg,1507," test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1590,security,integr,integralSig,1590," to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalizatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1603,security,integr,integralBkg,1603,"t this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1685,security,integr,integralSig,1685,"y/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1766,security,integr,integralBkg,1766,"sed (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1780,security,sigN,sigNormScaled,1780,"A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:2082,security,sigN,sigNormScaled,2082,"gative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.LineColor(R.kGray), R.RooFit.MarkerColor(R.kGray)). frame.Draw(). canv.SaveAs(""test_negative_component.pdf""). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:514,testability,test,test,514,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:751,testability,automat,automatically,751,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1459,testability,integr,integralSig,1459,"pinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1507,testability,integr,integralBkg,1507," test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1590,testability,integr,integralSig,1590," to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalizatio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1603,testability,integr,integralBkg,1603,"t this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expecte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1685,testability,integr,integralSig,1685,"y/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:1766,testability,integr,integralBkg,1766,"sed (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRealSumPdf(""pdf_RRS"",""pdf_RRS"",R.RooArgList(linear,gauss),R.RooArgList(bkgNormScaled,sigNormScaled),True). pdf = R.RooAddPdf(""pdf"",""pdf"", R.RooArgList(linear, gauss), R.RooArgList(Nbkg, Nsig)). data = pdf_RRS.generate(R.RooArgSet(mass),pdf_RRS.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). data_2 = pdf.generate(R.RooArgSet(mass),pdf.expectedEvents(R.RooArgSet(mass)),False,True,"""",False,True). canv = R.TCanvas(). frame = mass.frame(50). pdf_RRS.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent)). pdf.plotOn(frame,R.RooFit.Normalization(pdf.expectedEvents(R.RooArgSet(mass)),R.RooAbsReal.NumEvent), R.RooFit.LineColor(R.kRed), R.RooFit.LineStyle(R.kDashed)). data.plotOn(frame). data_2.plotOn(frame, R.RooFit.Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:495,usability,behavi,behaviour,495,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/issues/7252:789,usability,minim,minimal,789,"[RF] RooAddPdf can fit, but not generate negative coefficients; I ran into the issue that a RooAddPdf cannot generate pdfs with a negative coefficient for one component (also when the total pdf is positive defined). This caused a severe bias in my pseudo experiments, where one of the coefficients of my Pdf is needed to be negative (outcome of a fit with a RooAddPdf to data). That caused me a lot of head scratching because it never mentioned any warning. In my opinion this is bug. With this behaviour I cannot test my model, because it handles generation and fitting differently. One solution to circumvent this problem I found was the RooRealSumPdf. But in the end it is not really handy/useful, since it is not properly normalised and cannot be automatically normalised (AFAIK). . A minimal python example is given below. You will see that the RooRealSumPdf can generate the negative dip in the function, while the RooAddPdf can't. I hope someone can look into this and fix it, because the RooAddPdf is a very useful and widely used class. Thank you! ```python. import ROOT as R. mass = R.RooRealVar(""mass"",""mass"",4900,6000). Nbkg = R.RooRealVar(""Nbkg"",""Nbkg"",1000,0,1e7). linear = R.RooPolynomial(""linear"",""linear"",mass,R.RooArgList()). Nsig = R.RooRealVar(""Nsig"",""Nsig"",-50, -1e7,-1e-4). mean = R.RooRealVar(""mean"",""mean"",5230, 5200, 5300). width = R.RooRealVar(""width"",""width"",50, 20, 80). gauss = R.RooGaussian(""gauss"", ""gauss"", mass, mean, width). integralSig = gauss.getNorm(R.RooArgSet(mass)). integralBkg = linear.getNorm(R.RooArgSet(mass)). print(""Unnormalised PDFs yield:"", integralSig, integralBkg) . normaliserSig = R.RooConstVar(""normaliserSig"", ""normaliserSig"", 1./integralSig). normaliserBkg = R.RooConstVar(""normaliserBkg"", ""normaliserBkg"", 1./integralBkg). sigNormScaled = R.RooProduct(""scaledSigNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nsig, normaliserSig)). bkgNormScaled = R.RooProduct(""scaledBkgNorm"", ""bkgNorm/Int[bkg]"",R.RooArgList(Nbkg, normaliserBkg)). pdf_RRS = R.RooRea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7252
https://github.com/root-project/root/pull/7253:109,availability,degrad,degradation-of-i-o-performance-from-,109,Shortcut in TTree::GetBranch for exact match to top level branches; See https://root-forum.cern.ch/t/serious-degradation-of-i-o-performance-from-6-20-04-to-6-22-06/43584/10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:128,performance,perform,performance-from-,128,Shortcut in TTree::GetBranch for exact match to top level branches; See https://root-forum.cern.ch/t/serious-degradation-of-i-o-performance-from-6-20-04-to-6-22-06/43584/10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:109,reliability,degrad,degradation-of-i-o-performance-from-,109,Shortcut in TTree::GetBranch for exact match to top level branches; See https://root-forum.cern.ch/t/serious-degradation-of-i-o-performance-from-6-20-04-to-6-22-06/43584/10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:0,usability,Shortcut,Shortcut,0,Shortcut in TTree::GetBranch for exact match to top level branches; See https://root-forum.cern.ch/t/serious-degradation-of-i-o-performance-from-6-20-04-to-6-22-06/43584/10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/pull/7253:128,usability,perform,performance-from-,128,Shortcut in TTree::GetBranch for exact match to top level branches; See https://root-forum.cern.ch/t/serious-degradation-of-i-o-performance-from-6-20-04-to-6-22-06/43584/10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7253
https://github.com/root-project/root/issues/7254:28,deployability,integr,integral,28,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:37,deployability,integr,integration,37,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:502,deployability,integr,integral,502,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:518,deployability,version,version,518,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:589,deployability,version,version,589,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:604,deployability,Version,Version,604,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:537,energy efficiency,adapt,adapted,537,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:28,integrability,integr,integral,28,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:37,integrability,integr,integration,37,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:502,integrability,integr,integral,502,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:518,integrability,version,version,518,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:537,integrability,adapt,adapted,537,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:589,integrability,version,version,589,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:604,integrability,Version,Version,604,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:28,interoperability,integr,integral,28,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:37,interoperability,integr,integration,37,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:502,interoperability,integr,integral,502,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:537,interoperability,adapt,adapted,537,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:28,modifiability,integr,integral,28,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:37,modifiability,integr,integration,37,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:502,modifiability,integr,integral,502,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:518,modifiability,version,version,518,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:537,modifiability,adapt,adapted,537,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:589,modifiability,version,version,589,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:604,modifiability,Version,Version,604,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:28,reliability,integr,integral,28,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:37,reliability,integr,integration,37,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:502,reliability,integr,integral,502,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:28,security,integr,integral,28,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:37,security,integr,integration,37,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:502,security,integr,integral,502,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:28,testability,integr,integral,28,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:37,testability,integr,integration,37,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/issues/7254:502,testability,integr,integral,502,"[RF] RooHypatia2 Analytical integral integration; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. The PDF ```RooHypatia2``` implemented in master has wrong commented code for the analytical integral. . The version copied and adapted of the function is somehow linked to an old version. . The Version i am using in my analysis has different evaluate() and analyticalIntegral implementation. . In attachment the class i am using for my analysis. . [RooIpatia2.zip](https://github.com/root-project/root/files/6008104/RooIpatia2.zip).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7254
https://github.com/root-project/root/pull/7255:7,deployability,Updat,Update,7,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:54,deployability,Updat,Updating,54,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:131,deployability,version,version,131,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:166,deployability,updat,updating,166,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:179,deployability,API,API,179,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:131,integrability,version,version,131,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:179,integrability,API,API,179,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:179,interoperability,API,API,179,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:189,interoperability,compatib,compatible,189,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:86,modifiability,pac,package,86,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:131,modifiability,version,version,131,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:7,safety,Updat,Update,7,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:54,safety,Updat,Updating,54,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:166,safety,updat,updating,166,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:7,security,Updat,Update,7,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:54,security,Updat,Updating,54,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/pull/7255:166,security,updat,updating,166,[TMVA] Update Keras tutorials using tensorflow.keras; Updating the usage of the Keras package to the presumable most commonly used version in tensorflow itself. Also updating the API to be compatible with keras2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7255
https://github.com/root-project/root/issues/7256:0,availability,Error,Errors,0,"Errors; #5 __cxxabiv1::__dynamic_cast (src_ptr=0x7fffd5147510, src_type=0x7f1637f9b028 <typeinfo for TObject>, dst_type=0x7f162ae18df0 <typeinfo for RooAbsArg>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:68. #6 0x00007f162ac6a00e in RooLinkedList::Add(TObject*, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #7 0x00007f162ab62f3b in RooAbsCollection::add(RooAbsArg const&, bool) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #8 0x00007f162abcfe1d in RooArgSet::RooArgSet(RooAbsArg const&, RooAbsArg const&, RooAbsArg const&, char const*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #9 0x00007f16380570c7 in ?? (). #10 0x00007fffd5136ff8 in ?? (). #11 0x00000000066a53f8 in ?? (). #12 0x00007f163591d370 in clang::DeclContextLookupResult::SingleElementDummyList () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #13 0x0000000003eb3e90 in ?? (). #14 0x00000000066a53f8 in ?? (). #15 0x00007f1635197480 in clang::DeclContext::isDependentContext() const () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #16 0x000000003388f98c in ?? (). #17 0x0000000000678d18 in ?? (). #18 0x00000000066a53f8 in ?? (). #19 0x000000000065cef0 in ?? (). #20 0x00007f16337b758d in clang::CodeGeneratorImpl::HandleTagDeclDefinition(clang::TagDecl*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #21 0x0000000000000000 in ?? (). ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7256
https://github.com/root-project/root/issues/7256:0,performance,Error,Errors,0,"Errors; #5 __cxxabiv1::__dynamic_cast (src_ptr=0x7fffd5147510, src_type=0x7f1637f9b028 <typeinfo for TObject>, dst_type=0x7f162ae18df0 <typeinfo for RooAbsArg>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:68. #6 0x00007f162ac6a00e in RooLinkedList::Add(TObject*, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #7 0x00007f162ab62f3b in RooAbsCollection::add(RooAbsArg const&, bool) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #8 0x00007f162abcfe1d in RooArgSet::RooArgSet(RooAbsArg const&, RooAbsArg const&, RooAbsArg const&, char const*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #9 0x00007f16380570c7 in ?? (). #10 0x00007fffd5136ff8 in ?? (). #11 0x00000000066a53f8 in ?? (). #12 0x00007f163591d370 in clang::DeclContextLookupResult::SingleElementDummyList () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #13 0x0000000003eb3e90 in ?? (). #14 0x00000000066a53f8 in ?? (). #15 0x00007f1635197480 in clang::DeclContext::isDependentContext() const () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #16 0x000000003388f98c in ?? (). #17 0x0000000000678d18 in ?? (). #18 0x00000000066a53f8 in ?? (). #19 0x000000000065cef0 in ?? (). #20 0x00007f16337b758d in clang::CodeGeneratorImpl::HandleTagDeclDefinition(clang::TagDecl*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #21 0x0000000000000000 in ?? (). ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7256
https://github.com/root-project/root/issues/7256:0,safety,Error,Errors,0,"Errors; #5 __cxxabiv1::__dynamic_cast (src_ptr=0x7fffd5147510, src_type=0x7f1637f9b028 <typeinfo for TObject>, dst_type=0x7f162ae18df0 <typeinfo for RooAbsArg>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:68. #6 0x00007f162ac6a00e in RooLinkedList::Add(TObject*, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #7 0x00007f162ab62f3b in RooAbsCollection::add(RooAbsArg const&, bool) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #8 0x00007f162abcfe1d in RooArgSet::RooArgSet(RooAbsArg const&, RooAbsArg const&, RooAbsArg const&, char const*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #9 0x00007f16380570c7 in ?? (). #10 0x00007fffd5136ff8 in ?? (). #11 0x00000000066a53f8 in ?? (). #12 0x00007f163591d370 in clang::DeclContextLookupResult::SingleElementDummyList () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #13 0x0000000003eb3e90 in ?? (). #14 0x00000000066a53f8 in ?? (). #15 0x00007f1635197480 in clang::DeclContext::isDependentContext() const () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #16 0x000000003388f98c in ?? (). #17 0x0000000000678d18 in ?? (). #18 0x00000000066a53f8 in ?? (). #19 0x000000000065cef0 in ?? (). #20 0x00007f16337b758d in clang::CodeGeneratorImpl::HandleTagDeclDefinition(clang::TagDecl*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #21 0x0000000000000000 in ?? (). ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7256
https://github.com/root-project/root/issues/7256:0,usability,Error,Errors,0,"Errors; #5 __cxxabiv1::__dynamic_cast (src_ptr=0x7fffd5147510, src_type=0x7f1637f9b028 <typeinfo for TObject>, dst_type=0x7f162ae18df0 <typeinfo for RooAbsArg>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:68. #6 0x00007f162ac6a00e in RooLinkedList::Add(TObject*, int) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #7 0x00007f162ab62f3b in RooAbsCollection::add(RooAbsArg const&, bool) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #8 0x00007f162abcfe1d in RooArgSet::RooArgSet(RooAbsArg const&, RooAbsArg const&, RooAbsArg const&, char const*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libRooFitCore.so. #9 0x00007f16380570c7 in ?? (). #10 0x00007fffd5136ff8 in ?? (). #11 0x00000000066a53f8 in ?? (). #12 0x00007f163591d370 in clang::DeclContextLookupResult::SingleElementDummyList () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #13 0x0000000003eb3e90 in ?? (). #14 0x00000000066a53f8 in ?? (). #15 0x00007f1635197480 in clang::DeclContext::isDependentContext() const () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #16 0x000000003388f98c in ?? (). #17 0x0000000000678d18 in ?? (). #18 0x00000000066a53f8 in ?? (). #19 0x000000000065cef0 in ?? (). #20 0x00007f16337b758d in clang::CodeGeneratorImpl::HandleTagDeclDefinition(clang::TagDecl*) () from /cvmfs/cms.cern.ch/slc7_amd64_gcc700/lcg/root/6.12.07-gnimlf5/lib/libCling.so. #21 0x0000000000000000 in ?? (). ================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7256
https://github.com/root-project/root/pull/7257:1548,deployability,integr,integration,1548,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1592,deployability,integr,integration,1592,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1637,deployability,integr,integration,1637,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:57,energy efficiency,current,currently,57,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:339,energy efficiency,core,core,339,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:571,energy efficiency,core,core,571,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:933,energy efficiency,core,core,933,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1066,energy efficiency,core,core,1066,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1431,energy efficiency,core,core,1431,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1548,integrability,integr,integration,1548,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1592,integrability,integr,integration,1592,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1637,integrability,integr,integration,1637,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:153,interoperability,distribut,distributions,153,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1548,interoperability,integr,integration,1548,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1592,interoperability,integr,integration,1592,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1637,interoperability,integr,integration,1637,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:15,modifiability,paramet,parametrized,15,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:250,modifiability,paramet,parametrized,250,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:503,modifiability,maintain,maintainable,503,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1033,modifiability,paramet,parametrized,1033,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1278,modifiability,paramet,parameterized,1278,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1548,modifiability,integr,integration,1548,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1592,modifiability,integr,integration,1592,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1637,modifiability,integr,integration,1637,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1548,reliability,integr,integration,1548,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1592,reliability,integr,integration,1592,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1637,reliability,integr,integration,1637,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:503,safety,maintain,maintainable,503,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1184,safety,avoid,avoid,1184,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1229,safety,test,tested,1229,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1240,safety,test,testRooCrystalBal,1240,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1263,safety,test,test,1263,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1300,safety,test,test,1300,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1386,safety,test,test,1386,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1479,safety,test,test,1479,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1543,safety,test,test,1543,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1548,security,integr,integration,1548,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1592,security,integr,integration,1592,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1637,security,integr,integration,1637,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1229,testability,test,tested,1229,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1240,testability,test,testRooCrystalBal,1240,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1263,testability,test,test,1263,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1300,testability,test,test,1300,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1386,testability,test,test,1386,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1479,testability,test,test,1479,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1543,testability,test,test,1543,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1548,testability,integr,integration,1548,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1592,testability,integr,integration,1592,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1637,testability,integr,integration,1637,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:275,usability,user,users,275,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/pull/7257:1164,usability,help,helper,1164,"[RF] Add fully parametrized RooCrystalBall class; RooFit currently includes the `RooCBShape` and `RooDSCBShape` to. represent the family of crystal ball distributions. The `RooCBShape`. only has a left tail, and `RooDSCBShape` has two independently. parametrized tails. Some users also want a crystal ball where the width of the Gaussian. core is different on the left and the right side (see e.g. Jira ticket. [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388)). To make the RooFit code more maintainable and also cover the use case. of an asymmetric Gaussian core, this commit implements a new. `RooCrystalBall` class that should cover all classes of crystal ball. shapes, such that `RooCBShape` and `RooDSCBShape` are in principle not. necessary anymore. The new features of the `RooCrystalBall` class that make it different. from `RooDSCBShape` are:. - possibility to set sigma of left side and right side of Gaussian. core separately. - code modernization and using `std::` math functions. - three constructors: fully parametrized, symmetric Gaussian core. (to replace `RooDSCBShape`), only left tail (to replace. `RooCBShape`). - useage of inlined helper functions to avoid code duplication. It is also carefully tested in `testRooCrystalBal`:. - test the fully parameterized case. - test the constructor for left-tail only case and compare values. with `RooCBShape`. - test the constructor with symmetric Gaussian core and compare. values with `RooDSCBShape`. - test the constructor for right-tail only and symmetric tails. - test integration with many possible combinations integration. ranges to cover all branches of integration code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7257
https://github.com/root-project/root/issues/7258:5,deployability,Updat,Update,5,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:379,deployability,integr,integral,379,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2616,deployability,releas,release,2616,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2743,deployability,version,versions,2743,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:310,energy efficiency,core,core,310,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1512,energy efficiency,core,core,1512,"_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:379,integrability,integr,integral,379,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1846,integrability,batch,batch,1846,"root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1864,integrability,interfac,interface,1864,"fit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2310,integrability,interfac,interface,2310,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2743,integrability,version,versions,2743,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:233,interoperability,standard,standard,233,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:379,interoperability,integr,integral,379,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1800,interoperability,standard,standard,1800,"[RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](htt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1864,interoperability,interfac,interface,1864,"fit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1966,interoperability,compatib,compatibility,1966,"com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compare",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2310,interoperability,interfac,interface,2310,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:158,modifiability,exten,extend,158,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:379,modifiability,integr,integral,379,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1067,modifiability,paramet,parametrized,1067,"ue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1231,modifiability,paramet,parametrzation,1231,"ard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1305,modifiability,paramet,parametrized,1305,"ore. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1864,modifiability,interfac,interface,1864,"fit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2310,modifiability,interfac,interface,2310,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2743,modifiability,version,versions,2743,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1846,performance,batch,batch,1846,"root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:379,reliability,integr,integral,379,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:5,safety,Updat,Update,5,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1546,safety,test,test,1546,"bleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2664,safety,safe,safely,2664,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:5,security,Updat,Update,5,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:379,security,integr,integral,379,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:379,testability,integr,integral,379,"[RF] Update crystal ball shapes in RooFit; In the still relevant Jira issue [ROOT-10388](https://sft.its.cern.ch/jira/browse/ROOT-10388), it was requested to extend the RooFit crystal ball shape with the possibility to set different standard deviations for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1546,testability,test,test,1546,"bleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1250,usability,clear,clear,1250,"for the left side and and the right side of the Gaussian core. An example implementation that didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://githu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1344,usability,clear,clear,1344,"didn't implement the analytical integral was linked:. * [RooDoubleCB.h](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.h). * [RooDoubleCB.C](https://gitlab.cern.ch/lhcb/Erasmus/blob/b58c1441bb4233b11b0b5bb5816fa268add7c97c/Bu2D0H/Bu2D0H_FIT/src/RooDoubleCB.C). This suggestion can be taken as an opportunity to improve the crystal ball shapes in RooFit in general. Right now there is the [RooCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:1819,usability,document,documentation,1819,"ithub.com/root-project/root/blob/master/roofit/roofit/src/RooCBShape.cxx) that only has a left non-Gaussian tail and [RooDSCBShape](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2025,usability,user,user,2025,"oDSCBShape.cxx) that has two separately parametrized tails. The implementation of the RooDSCBShape is not super elegant because it has a lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the sing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2720,usability,user,users,2720,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:2778,usability,custom,custom,2778,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/issues/7258:3106,usability,indicat,indicate,3106,"lot of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation. * Implement batch computation interface. * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:. * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h). * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:. * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions. * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7258
https://github.com/root-project/root/pull/7260:142,availability,avail,available,142,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:44,performance,lock,lock,44,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:101,performance,lock,locks,101,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:142,reliability,availab,available,142,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:142,safety,avail,available,142,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:195,safety,test,test,195,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:44,security,lock,lock,44,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:101,security,lock,locks,101,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:142,security,availab,available,142,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7260:195,testability,test,test,195,Add TBB-based counter for global read-write lock; Adds TBB-based counter types for global read-write locks and use one by default when TBB is available. This gives a 7% speedup in a medium sized test filling histograms from CMS NanoAOD with RDF and 256 threads. This implements the last part of the improvements originally discussed in https://github.com/root-project/root/pull/6919,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7260
https://github.com/root-project/root/pull/7262:73,availability,slo,slots,73,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:215,availability,avail,available,215,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:185,interoperability,specif,specific,185,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:268,modifiability,reu,reused,268,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:73,reliability,slo,slots,73,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:215,reliability,availab,available,215,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:215,safety,avail,available,215,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:4,security,Modif,Modified,4,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:15,security,sign,signal,15,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:152,security,modif,modified,152,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:215,security,availab,available,215,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7262:225,security,sign,signals,225,"add Modified() signal for TGNumberEntry; The goal is to connect to other slots passing arguments by value, for example TGButton, ChangeText(=""Value was modified""), independently on the specific value set. The other available signals have arguments, so they can not be reused for this purpose. Thanks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7262
https://github.com/root-project/root/pull/7263:45,interoperability,Distribut,Distributed,45,[skip-ci] Relnotes for ROOT.RDF.Experimental.Distributed;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7263
https://github.com/root-project/root/pull/7264:422,deployability,stack,stack-allocated,422,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:555,deployability,stack,stack-allocated,555,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:723,deployability,releas,release,723,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:428,energy efficiency,alloc,allocated,428,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:561,energy efficiency,alloc,allocated,561,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:370,modifiability,paramet,parameter,370,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:744,testability,simpl,simple,744,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7264:744,usability,simpl,simple,744,"On Mac, with Cocoa, the pattern selector did not work anymore; The fill pattern sector made a crash on Mac with Cocoa. The problem was mentioned here: https://root-forum.cern.ch/t/fillcolor-bug-in-root-6-22/43599/2. The fix was found by Timur:. «Filling with patterns is based on callbacks, and those callbacks need an extra information from ROOT, which. is passed as a parameter. Previously, we had this information as a stack-allocated object whose address we were passing. Starting from macOS 11/SDK 10.16, the rendering callback may be triggered when stack-allocated object had already exited its scope and finished its lifetime. Another change we need now — PatternContext also has to care about ‘fImage’ — retain and release then needed, simple non-owning reference is not working anymore.»",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7264
https://github.com/root-project/root/pull/7265:18,availability,failur,failure,18,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:63,availability,error,error,63,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:104,availability,error,error,104,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:18,deployability,fail,failure,18,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:265,deployability,build,build,265,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:299,deployability,build,build,299,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:305,deployability,build,build,305,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:4,energy efficiency,Core,CoreBaseTests,4,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:311,energy efficiency,core,core,311,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:326,energy efficiency,Core,CoreBaseTests,326,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:18,performance,failur,failure,18,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:63,performance,error,error,63,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:104,performance,error,error,104,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:18,reliability,fail,failure,18,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:63,safety,error,error,63,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:104,safety,error,error,104,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:321,safety,test,test,321,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:321,testability,test,test,321,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:63,usability,error,error,63,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7265:104,usability,error,error,104,"Fix CoreBaseTests failure on Windows; Thsi fixes the following error:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll) [C:\build\workspace\root-pullrequests-build\build\core\base\test\CoreBaseTests.vcxproj]. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7265
https://github.com/root-project/root/pull/7266:9,availability,recov,recovery,9,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:181,availability,consist,consistent,181,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:208,availability,recov,recovery,208,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:267,availability,recov,recovery,267,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:476,availability,error,errors,476,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:9,deployability,recov,recovery,9,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:208,deployability,recov,recovery,208,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:267,deployability,recov,recovery,267,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:46,integrability,Batch,BatchMode,46,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:407,integrability,batch,batch,407,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:31,modifiability,paramet,parameters,31,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:289,modifiability,paramet,parameters,289,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:315,modifiability,scal,scalar,315,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:385,modifiability,pac,packer,385,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:46,performance,Batch,BatchMode,46,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:407,performance,batch,batch,407,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:476,performance,error,errors,476,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:9,reliability,recov,recovery,9,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:208,reliability,recov,recovery,208,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:267,reliability,recov,recovery,267,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:9,safety,recov,recovery,9,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:208,safety,recov,recovery,208,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:267,safety,recov,recovery,267,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:476,safety,error,errors,476,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:9,security,recov,recovery,9,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:208,security,recov,recovery,208,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:267,security,recov,recovery,267,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:181,usability,consist,consistent,181,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:476,usability,error,errors,476,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7266:491,usability,minim,minimiser,491,"[RF] Add recovery from invalid parameters for BatchMode; I had this lying around in an older branch. Could be interesting to add for 6.24, since it makes the new functionality more consistent. Otherwise, the recovery would only work in single-value mode. So far, the recovery from invalid parameters only worked in scalar mode. Here, RooAbsPdf and RooNLLVar are augmented with the NaN packer trick. also in batch mode. This allows for propagating information about evaluation errors to the. minimiser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7266
https://github.com/root-project/root/pull/7267:45,availability,consist,consistent,45,"[DF] Make semantics of null RResultPtrs more consistent ; Return false/nullptr if the object is inspected, throw if a method. is called that requires a non-null RResultPtr as pre-condition. This is consistent with the behavior of shared_ptr, minus the. undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7267
https://github.com/root-project/root/pull/7267:198,availability,consist,consistent,198,"[DF] Make semantics of null RResultPtrs more consistent ; Return false/nullptr if the object is inspected, throw if a method. is called that requires a non-null RResultPtr as pre-condition. This is consistent with the behavior of shared_ptr, minus the. undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7267
https://github.com/root-project/root/pull/7267:10,interoperability,semant,semantics,10,"[DF] Make semantics of null RResultPtrs more consistent ; Return false/nullptr if the object is inspected, throw if a method. is called that requires a non-null RResultPtr as pre-condition. This is consistent with the behavior of shared_ptr, minus the. undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7267
https://github.com/root-project/root/pull/7267:45,usability,consist,consistent,45,"[DF] Make semantics of null RResultPtrs more consistent ; Return false/nullptr if the object is inspected, throw if a method. is called that requires a non-null RResultPtr as pre-condition. This is consistent with the behavior of shared_ptr, minus the. undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7267
https://github.com/root-project/root/pull/7267:198,usability,consist,consistent,198,"[DF] Make semantics of null RResultPtrs more consistent ; Return false/nullptr if the object is inspected, throw if a method. is called that requires a non-null RResultPtr as pre-condition. This is consistent with the behavior of shared_ptr, minus the. undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7267
https://github.com/root-project/root/pull/7267:218,usability,behavi,behavior,218,"[DF] Make semantics of null RResultPtrs more consistent ; Return false/nullptr if the object is inspected, throw if a method. is called that requires a non-null RResultPtr as pre-condition. This is consistent with the behavior of shared_ptr, minus the. undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7267
https://github.com/root-project/root/pull/7267:263,usability,behavi,behavior,263,"[DF] Make semantics of null RResultPtrs more consistent ; Return false/nullptr if the object is inspected, throw if a method. is called that requires a non-null RResultPtr as pre-condition. This is consistent with the behavior of shared_ptr, minus the. undefined behavior.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7267
https://github.com/root-project/root/pull/7268:274,interoperability,convers,conversion,274,"[DF] Allow casting RResultPtr<Derived> to RResultPtr<Base>; ...and add a test. This fixes ROOT-10321. This is also the proper fix for ROOT-9785 (basically the same. issue/feature request), which was supposed to be fixed by. 78fca0b but unfortunately that commit enabled the conversion. based on the wrong condition: `is_convertible<T, TO>` rather. than `is_convertible<T*, TO*>`. In order to fully delegate the decision on convertibility to. `shared_ptr`, we now use `is_constructible<shared_ptr<TO>, shared_ptr<T>>`. as the condition instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7268
https://github.com/root-project/root/pull/7268:73,safety,test,test,73,"[DF] Allow casting RResultPtr<Derived> to RResultPtr<Base>; ...and add a test. This fixes ROOT-10321. This is also the proper fix for ROOT-9785 (basically the same. issue/feature request), which was supposed to be fixed by. 78fca0b but unfortunately that commit enabled the conversion. based on the wrong condition: `is_convertible<T, TO>` rather. than `is_convertible<T*, TO*>`. In order to fully delegate the decision on convertibility to. `shared_ptr`, we now use `is_constructible<shared_ptr<TO>, shared_ptr<T>>`. as the condition instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7268
https://github.com/root-project/root/pull/7268:73,testability,test,test,73,"[DF] Allow casting RResultPtr<Derived> to RResultPtr<Base>; ...and add a test. This fixes ROOT-10321. This is also the proper fix for ROOT-9785 (basically the same. issue/feature request), which was supposed to be fixed by. 78fca0b but unfortunately that commit enabled the conversion. based on the wrong condition: `is_convertible<T, TO>` rather. than `is_convertible<T*, TO*>`. In order to fully delegate the decision on convertibility to. `shared_ptr`, we now use `is_constructible<shared_ptr<TO>, shared_ptr<T>>`. as the condition instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7268
https://github.com/root-project/root/pull/7270:34,deployability,log,log,34,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:245,deployability,log,log,245,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:59,integrability,messag,message,59,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:159,integrability,messag,messages,159,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:249,integrability,messag,messages,249,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:59,interoperability,messag,message,59,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:159,interoperability,messag,messages,159,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:249,interoperability,messag,messages,249,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:132,performance,content,content,132,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:34,safety,log,log,34,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:245,safety,log,log,245,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:34,security,log,log,34,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:75,security,access,accessible,75,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:245,security,log,log,245,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:34,testability,log,log,34,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:245,testability,log,log,245,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7270:103,usability,menu,menu,103,Eve-7 The first implementation of log view; This PR adds a message viewing accessible through top left menu. At the moment the view content is browser console messages and a checkbox to enable/disable debug mode. There are also minor changes in log messages and additional try/catch blocks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7270
https://github.com/root-project/root/pull/7272:7,usability,support,support,7,"TGTab: support tab scrolling with mouse wheel; For fast/easy switching between tabs. Quite useful when you want to compare two very similar canvases on each tab, to see the differences. As implemented e.g. in Firefox.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/pull/7272:34,usability,mous,mouse,34,"TGTab: support tab scrolling with mouse wheel; For fast/easy switching between tabs. Quite useful when you want to compare two very similar canvases on each tab, to see the differences. As implemented e.g. in Firefox.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7272
https://github.com/root-project/root/issues/7273:14,availability,slo,slow,14,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1144,availability,Down,Download,1144,"ort MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2745,availability,Operat,Operating,2745," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2820,availability,down,download,2820," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2912,availability,down,download,2912," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1102,deployability,build,build,1102,"it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2733,deployability,version,version,2733," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2802,deployability,instal,install,2802," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:182,integrability,event,events,182,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:211,integrability,event,events,211,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:245,integrability,event,events,245,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2188,integrability,Filter,Filter,2188," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2733,integrability,version,version,2733," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:2733,modifiability,version,version,2733," 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.22.06. Linux 5.4.0, Ubuntu 18.04-like. Binary download of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:443,performance,Time,Time,443,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:623,performance,Time,Time,623,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:765,performance,time,time,765,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1531,performance,time,time,1531,"321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1729,performance,time,time,1729,"s 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. cut = ""time_bin == "";. cut += std::to_string(time_bin);. counts[time_bin] = df.Filter(cut).Count();. }. for (int time_bin = 0; time_bin < time_bins; time_bin++) {. std::cout << *counts[time_bin] << std::endl;. }. return 0;. }. ```. #### `mwe.py`:. ```python. import uproot. import pandas as pd. import sys. df = uproot.open(sys.argv[1])[""DalitzEventList""].arrays(library=""pd""). time_bin_edges = [0.00025 * i for i in range(9)]. df[""time_bin""] = pd.cut(. df[""D_decayTime""],. time_bin_edges,. include_lowest=True,. labels=range(len(time_bin_edges) - 1),. ). print(df.groupby(""time_bin"").size()). ```. ### Setup. <!--. 1. ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:14,reliability,slo,slow,14,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1064,safety,input,input,1064,". <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:479,usability,User,User,479,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:659,usability,User,User,659,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:919,usability,behavi,behavior,919,"RDataFrame is slow; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/issues/7273:1064,usability,input,input,1064,". <!--. Explain what isn't as good as it could be and why. -->. I prepared two short MWEs assigning bin numbers to events in a dataset of 10000 events and printing the number of events in each bin. One is C++ using `RDataFrame`, the other is Python using Pandas. The Pandas one is 3x faster; see the output from `hyperfine`. ```. Benchmark #1: ./mwe ../data/D0_sample_5.root. Time (mean ± σ): 1.338 s ± 0.010 s [User: 1.233 s, System: 0.093 s]. Range (min … max): 1.321 s … 1.349 s 10 runs. ```. ```. Benchmark #1: python3 mwe.py ../data/D0_sample_5.root. Time (mean ± σ): 431.3 ms ± 4.6 ms [User: 469.8 ms, System: 153.6 ms]. Range (min … max): 423.9 ms … 436.5 ms 10 runs. ```. This is the first time I attempted to use `RDataFrame` and I might very well be doing it wrong. Advice would be appreciated. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. 1. Download [D0_sample_5.root](http://ipnp.cz/~cervenkov/data/D0_sample_5.root) (1.6MB). 2. Compile `RDataFrame` MWE using `g++ mwe.cc $(root-config --cflags) $(root-config --glibs) -o mwe`. 3. Run `./mwe D0_sample_5.root` and `python3 mwe.py D0_sample_5.root`. #### `mwe.cc`:. ```cpp. #include <iostream>. #include <vector>. #include ""ROOT/RDataFrame.hxx"". int which_time_bin(const double time) {. const double bin_edges[] = {0, 0.00025 * 1, 0.00025 * 2,. 0.00025 * 3, 0.00025 * 4, 0.00025 * 5,. 0.00025 * 6, 0.00025 * 7, 0.00025 * 8};. int bin = -1;. for (int i = 0; i < 9; i++) {. if (time < bin_edges[i]). return bin;. bin++;. }. return bin;. }. int main(int argc, char *argv[]) {. ROOT::RDataFrame df_raw(""DalitzEventList"", argv[1]);. auto df = df_raw.Define(""time_bin"", which_time_bin, {""D_decayTime""});. const int time_bins = 8;. ROOT::RDF::RResultPtr<ULong64_t> counts[time_bins];. std::string cut;. for (int time_bin ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7273
https://github.com/root-project/root/pull/7274:79,availability,failur,failure,79,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:173,availability,avail,available,173,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:79,deployability,fail,failure,79,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:203,interoperability,compatib,compatibility,203,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:79,performance,failur,failure,79,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:276,performance,I/O,I/O,276,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:79,reliability,fail,failure,79,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:173,reliability,availab,available,173,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:46,safety,test,testing,46,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:67,safety,test,test,67,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:132,safety,test,test,132,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:173,safety,avail,available,173,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:173,security,availab,available,173,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:46,testability,test,testing,46,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:67,testability,test,test,67,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/pull/7274:132,testability,test,test,132,Resolve oustanding roottest issues (with full testing); a. Fix the test/stress failure when using the built-in zlib. b. disable new test that uses RDataFrame when it is not available. Tweak TF1 backward compatibility mechanism (switch from using stale data member to using an I/O rule).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7274
https://github.com/root-project/root/issues/7276:1909,availability,operat,operator,1909,"ry(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2123,availability,operat,operator,2123," here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenk",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2798,availability,operat,operator,2798,"b0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1780,deployability,releas,releases,1780,"oot -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1979,deployability,releas,releases,1979,"riteToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2193,deployability,releas,releases,2193,"25.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2324,deployability,version,version,2324,"4/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2358,deployability,build,build,2358,"e/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2403,deployability,build,build,2403,"(created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2610,deployability,build,build,2610,"). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2655,deployability,build,build,2655,"#10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2846,deployability,build,build,2846,"_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2891,deployability,build,build,2891,"treamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3117,deployability,build,build,3117,">::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3162,deployability,build,build,3162,") at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::O",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3284,deployability,Build,BuildCheck,3284,"TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3343,deployability,build,build,3343,"=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3388,deployability,build,build,3388,"se_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3540,deployability,build,build,3540,"V5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3585,deployability,build,build,3585,"wClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3731,deployability,build,build,3731,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3776,deployability,build,build,3776,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:4014,deployability,build,build,4014,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:4059,deployability,build,build,4059,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:4293,deployability,build,build,4293,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:4338,deployability,build,build,4338,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1460,energy efficiency,load,load,1460,"reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1705,energy efficiency,load,load,1705,"r. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2450,energy efficiency,core,core,2450,"/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStream",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3328,energy efficiency,load,load,3328,"n=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1163,integrability,pub,public,1163,"s%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1263,integrability,pub,public,1263,"ports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1363,integrability,pub,public,1363,"ce ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/je",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2324,integrability,version,version,2324,"4/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2324,modifiability,version,version,2324,"4/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1460,performance,load,load,1460,"reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1705,performance,load,load,1705,"r. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3328,performance,load,load,3328,"n=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3081,safety,compl,complete,3081,"n std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3081,security,compl,complete,3081,"n std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:995,testability,simpl,simplest-,995,"[RF] ROOT 6.22/06 crashes reading old workspace file; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1185,testability,simpl,simplest-,1185,"(https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1285,testability,simpl,simplest-,1285,"you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1385,testability,simpl,simplest-,1385,"n today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1593,testability,simpl,simplest-,1593,"id when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:2547,testability,context,context,2547,"cc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3922,testability,simpl,simplest-,3922,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:4190,testability,simpl,simplest-,4190,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:534,usability,behavi,behavior,534,"[RF] ROOT 6.22/06 crashes reading old workspace file; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:995,usability,simpl,simplest-,995,"[RF] ROOT 6.22/06 crashes reading old workspace file; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1151,usability,user,user,1151,"ot/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo*",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1185,usability,simpl,simplest-,1185,"(https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1251,usability,user,user,1251,"r existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1285,usability,simpl,simplest-,1285,"you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1351,usability,user,user,1351,"t, for instance ""issue still exists in today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1385,usability,simpl,simplest-,1385,"n today's master"". -->. ### Describe the bug. ROOT 6.22/06 crashes when reading a RooWorkspace from a file written with ROOT 5.34. ### Expected behavior. The RooWorkspace should be read from the file, as it did when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:1593,usability,simpl,simplest-,1593,"id when read with ROOT 6.22/00. ROOT 6.22/06 also successfully reads files created with ROOT 6.02/12 and later. ### To Reproduce. * Create any workspace file with ROOT 5.34, eg. ```. % root -b. ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc). root [0] RooWorkspace w(""w"");. root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");. root [4] w.writeToFile(""simplest-53432.root"");. ```. * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:. * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32). * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12). * Setup ROOT 6.22/06 and load the file:. ```. % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg. % root -b. root [0] TFile::Open(""simplest-53432.root""). *** Break *** segmentation violation. ... #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713. #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590. #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367. #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563. #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:3922,usability,simpl,simplest-,3922,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/issues/7276:4190,usability,simpl,simplest-,4190,"ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586. #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690. #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058. #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139. #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557. #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823. #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483. #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06. ```. * perhaps there is a problem with the `FixCollectionV5`. ### Setup. 1. ROOT 6.22/06 (crashes) vs ROOT 6.22/00 (reads OK). 2. CentOS7 x86_64 (lxplus). 3. `/cvmfs/sft.cern.ch/lcg/views/LCG_99` (tried different arches, same crash) vs `/cvmfs/sft.cern.ch/lcg/views/LCG_98` (reads OK)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7276
https://github.com/root-project/root/pull/7277:40,interoperability,format,format,40,[eve7] fix three.js warnings [skip-ci]; format js source,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7277
https://github.com/root-project/root/pull/7278:195,deployability,releas,release,195,"[RF] Silence member shadowing warning with gcc48; It's a problem of old gccs. New compilers consider naming a variable the. same as a function not a shadow. This was fixed in gcc5, although the. release notes of gcc 4.8 claim that it was in 4.8. That's not the case,. as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/pull/7278:110,modifiability,variab,variable,110,"[RF] Silence member shadowing warning with gcc48; It's a problem of old gccs. New compilers consider naming a variable the. same as a function not a shadow. This was fixed in gcc5, although the. release notes of gcc 4.8 claim that it was in 4.8. That's not the case,. as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/pull/7278:384,modifiability,variab,variables,384,"[RF] Silence member shadowing warning with gcc48; It's a problem of old gccs. New compilers consider naming a variable the. same as a function not a shadow. This was fixed in gcc5, although the. release notes of gcc 4.8 claim that it was in 4.8. That's not the case,. as the warning that popped up in the nightlies showed. This commit silences these warnings by renaming the relevant variables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7278
https://github.com/root-project/root/issues/7279:71,availability,down,downloaded,71,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:0,deployability,Updat,Update,0,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:316,deployability,version,version,316,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:641,deployability,version,versions,641,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:316,integrability,version,version,316,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:641,integrability,version,versions,641,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:589,interoperability,format,formats,589,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:316,modifiability,version,version,316,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:641,modifiability,version,versions,641,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:276,performance,time,time,276,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:0,safety,Updat,Update,0,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:426,safety,compl,complete,426,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:0,security,Updat,Update,0,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:426,security,compl,complete,426,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:7,usability,User,User,7,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:14,usability,Guid,Guide,14,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:58,usability,User,User,58,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:65,usability,Guid,Guide,65,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:107,usability,guid,guides,107,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:114,usability,user,users-guide,114,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:222,usability,User,User,222,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:229,usability,Guid,Guide,229,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:375,usability,close,closed,375,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:411,usability,Guid,Guide,411,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:435,usability,document,document,435,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:458,usability,behavi,behavior,458,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:481,usability,document,documentation,481,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/issues/7279:600,usability,document,documentation,600,"Update User's Guide pdf; ### Describe the bug. PDF of the User's Guide downloaded from https://root.cern/d/guides/users-guide.html is outdated. On the title page it shows the date of May 2018. On the html page of TTree in User's Guide I can see that it has changed since that time (which is not reflected in the pdf version). I looked for other reports, but they were either closed or referred to a part of the Guide, not the complete document. ### Expected behavior. PDF and HTML documentation should be in sync. Maybe you should try Readthedocs? They have a nice system to store various formats of documentation even for different program versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7279
https://github.com/root-project/root/pull/7280:23,energy efficiency,optim,optimizeCache,23,"[RF] Fix in RooAbsArg::optimizeCache for nodes with same name; When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name. This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. . This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:87,energy efficiency,optim,optimizeCacheMode,87,"[RF] Fix in RooAbsArg::optimizeCache for nodes with same name; When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name. This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. . This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:23,performance,optimiz,optimizeCache,23,"[RF] Fix in RooAbsArg::optimizeCache for nodes with same name; When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name. This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. . This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:87,performance,optimiz,optimizeCacheMode,87,"[RF] Fix in RooAbsArg::optimizeCache for nodes with same name; When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name. This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. . This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:456,performance,cach,caches,456,"[RF] Fix in RooAbsArg::optimizeCache for nodes with same name; When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name. This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. . This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:590,performance,cach,cache,590,"[RF] Fix in RooAbsArg::optimizeCache for nodes with same name; When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name. This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. . This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/pull/7280:821,performance,cach,cached,821,"[RF] Fix in RooAbsArg::optimizeCache for nodes with same name; When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name. This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. . This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7280
https://github.com/root-project/root/issues/7281:219,integrability,sub,sub-branch,219,Trailing dot dropped in top level branch name; See https://root-forum.cern.ch/t/root-6-23-changing-name-of-branch-with-tclonesarray/43626/4. A recent change to improve GetBranch's behavior lead to an improvement of the sub-branch name but also (inadvertently?) to a change of the top level name. We need to either confirm that we want to change or revert the top level name part.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7281
https://github.com/root-project/root/issues/7281:180,usability,behavi,behavior,180,Trailing dot dropped in top level branch name; See https://root-forum.cern.ch/t/root-6-23-changing-name-of-branch-with-tclonesarray/43626/4. A recent change to improve GetBranch's behavior lead to an improvement of the sub-branch name but also (inadvertently?) to a change of the top level name. We need to either confirm that we want to change or revert the top level name part.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7281
https://github.com/root-project/root/issues/7281:314,usability,confirm,confirm,314,Trailing dot dropped in top level branch name; See https://root-forum.cern.ch/t/root-6-23-changing-name-of-branch-with-tclonesarray/43626/4. A recent change to improve GetBranch's behavior lead to an improvement of the sub-branch name but also (inadvertently?) to a change of the top level name. We need to either confirm that we want to change or revert the top level name part.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7281
https://github.com/root-project/root/issues/7282:775,deployability,version,version,775,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1412,deployability,automat,automatic,1412,". https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1516,deployability,automat,automatic,1516,"is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1610,deployability,automat,automatic,1610,"ot.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2347,deployability,resourc,resources,2347,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2562,deployability,version,version,2562,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2591,deployability,version,version,2591,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2347,energy efficiency,resourc,resources,2347,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:775,integrability,version,version,775,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2181,integrability,topic,topical,2181,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2225,integrability,compon,components,2225,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2562,integrability,version,version,2562,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2591,integrability,version,version,2591,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:130,interoperability,share,share,130,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2225,interoperability,compon,components,2225,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:0,modifiability,Refact,Refactor,0,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:775,modifiability,version,version,775,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2225,modifiability,compon,components,2225,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2375,modifiability,refact,refactor,2375,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2562,modifiability,version,version,2562,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2591,modifiability,version,version,2591,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:0,performance,Refactor,Refactor,0,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:248,performance,content,content,248,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:705,performance,content,contents,705,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2347,performance,resourc,resources,2347,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2375,performance,refactor,refactor,2375,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2034,safety,compl,complaints,2034,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2347,safety,resourc,resources,2347,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2034,security,compl,complaints,2034,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1412,testability,automat,automatic,1412,". https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1516,testability,automat,automatic,1516,"is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1610,testability,automat,automatic,1610,"ot.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1636,testability,understand,understand,1636,"risingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2347,testability,resourc,resources,2347,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:48,usability,document,documentation,48,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:90,usability,User,User,90,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:97,usability,guid,guide,97,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:334,usability,guid,guidelines,334,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:403,usability,document,documentation,403,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:439,usability,document,documentation,439,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:978,usability,document,documentation,978,"Refactor links hierarchy of the site, including documentation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open iss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1046,usability,document,documentation,1046,"entation links; Today I searched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1072,usability,document,documentation,1072,"arched for User's guide on the site, and wanted to share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1126,usability,clear,clearer,1126,"share several ideas for improvement. 1\) Remove duplicate links. In modern Web Development it's appreciated that same content has only one link on the site, and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1284,usability,User,User,1284," and a link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1289,usability,Guid,Guide,1289," link is meaningful in itself (see Django guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1330,usability,guid,guides,1330," guidelines). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1337,usability,user,users-guide,1337,"s). For example: from the main page I can see a link to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some exist",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1391,usability,guid,guides,1391,"k to the documentation,. https://root.cern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1430,usability,guid,guides,1430,"ern/d/documentation.html. If I delete the last part, I get. https://root.cern/d/. which is a) meaningless b) same as the main page. . The third link to that same page is . https://root.cern/d/index.html. Surprisingly, the link. https://root.cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as lit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1666,usability,document,documentation,1666,".cern/index.html. has different contents! Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1707,usability,document,documentation,1707," Probably there is little surprise that there exists the 2nd version of the site,. https://root.cern.ch/ (with its own index.html, and all these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1846,usability,feedback,feedback,1846,"ll these links). I think there should be one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:1981,usability,close,closed,1981,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2075,usability,clear,clear,2075,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2106,usability,close,closed,2106,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2149,usability,document,documentation,2149,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2189,usability,User,User,2189,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2194,usability,Guid,Guides,2194,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2528,usability,document,documentation,2528,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2697,usability,user,user-guides-and-manuals,2697,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2774,usability,document,documentation,2774,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/issues/7282:2823,usability,document,documentation,2823,"one canonical link, and other links should redirect to that. . 2a) https://root.cern/d/documentation.html . should ideally become just . https://root.cern/documentation. 2b) or all documentation should be put into one directory with a clearer name, like. https://root.cern/doc/. In that case the manual (and other docs) should also be in that directory, not at. https://root.cern/manual/. 3a) User Guide is located at. https://root.cern/d/guides/users-guide.html. On parent path. https://root.cern/d/guides/. there is an automatic list of guides (which is better than nothing/forbidden), but it would be better if it was not automatic (had the same design as the other site). 3b) the same for. https://root.cern/doc/. (automatic list). 4\) As I understand, the main page for documentation is. https://root.cern.ch/d/documentation.html. There is also. https://root.cern/doc/master/. these two pages should probably be one page. 5\) Rearrange ""Provide your feedback"". I think github issues should go before the Forum in the list of options (if there are really two ways), because one can see closed and open issues (on the Forum I found several complaints about the links, but it's not clear whether they are open or closed without opening them). 6\) From the documentation page ""A number of topical User Guides and Manuals for various components of the system."" leads to. https://root.cern/get_started/. which, in turn, repeats description of some existing resources. Could you please refactor these two pages into one, trying to repeat as little information as possible? 7\) On the page https://root.cern/about/. there is no link to the documentation. This is some other version of the site, not the version at https://root.cern/d/. 8\) I found this page using the search window,. https://root.cern/d/root-user-guides-and-manuals.html. I think this is a very good reference page for documentation. Could you link this from the main documentation overview page? (or just use this page instead of that)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7282
https://github.com/root-project/root/pull/7283:177,availability,slo,slow,177,"Cling: fix missing inlining even in O3; Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:56,energy efficiency,optim,optimization,56,"Cling: fix missing inlining even in O3; Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:269,integrability,sub,subsequent,269,"Cling: fix missing inlining even in O3; Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:56,performance,optimiz,optimization,56,"Cling: fix missing inlining even in O3; Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:177,reliability,slo,slow,177,"Cling: fix missing inlining even in O3; Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:115,usability,user,users,115,"Cling: fix missing inlining even in O3; Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/pull/7283:246,usability,interact,interactive,246,"Cling: fix missing inlining even in O3; Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7283
https://github.com/root-project/root/issues/7284:1079,availability,redund,redundant,1079," spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chap",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1736,availability,monitor,monitoring,1736,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1768,availability,monitor,monitoring,1768,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:435,deployability,releas,release,435,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1079,deployability,redundan,redundant,1079," spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chap",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1736,deployability,monitor,monitoring,1736,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1768,deployability,monitor,monitoring,1768,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1934,deployability,depend,depending,1934,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2032,deployability,depend,depend,2032,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2113,deployability,depend,depends,2113,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2222,deployability,depend,depends,2222,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1253,energy efficiency,Draw,Draw,1253,"eaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1330,energy efficiency,Draw,Draw,1330,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1736,energy efficiency,monitor,monitoring,1736,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1768,energy efficiency,monitor,monitoring,1768,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1543,integrability,buffer,buffers,1543,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1934,integrability,depend,depending,1934,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2032,integrability,depend,depend,2032,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2113,integrability,depend,depends,2113,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2222,integrability,depend,depends,2222,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1099,interoperability,specif,specifying,1099,"es I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1117,interoperability,specif,specify,1117," reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1934,modifiability,depend,depending,1934,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2032,modifiability,depend,depend,2032,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2113,modifiability,depend,depends,2113,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2222,modifiability,depend,depends,2222,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:147,performance,time,time,147,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:192,performance,time,time,192,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:405,performance,time,time,405,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1599,performance,memor,memory,1599,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2101,performance,perform,performance,2101,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2169,performance,disk,disk,2169,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2210,performance,Perform,Performance,2210,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1079,reliability,redundan,redundant,1079," spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chap",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1736,reliability,monitor,monitoring,1736,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1768,reliability,monitor,monitoring,1768,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2024,reliability,doe,doesn,2024,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1079,safety,redund,redundant,1079," spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chap",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1736,safety,monitor,monitoring,1736,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1768,safety,monitor,monitoring,1768,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1934,safety,depend,depending,1934,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2032,safety,depend,depend,2032,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2071,safety,compl,complete,2071,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2113,safety,depend,depends,2113,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2222,safety,depend,depends,2222,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:907,security,expos,exposed,907,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2071,security,compl,complete,2071,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1736,testability,monitor,monitoring,1736,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1768,testability,monitor,monitoring,1768,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1934,testability,depend,depending,1934,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2032,testability,depend,depend,2032,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2113,testability,depend,depends,2113,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2222,testability,depend,depends,2222,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:41,usability,User,User,41,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:48,usability,Guid,Guide,48,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:68,usability,User,User,68,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:75,usability,Guid,Guide,75,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:567,usability,User,User,567,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:574,usability,Guid,Guide,574,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:671,usability,guid,guides,671,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:678,usability,user,users-guide,678,"Fix grammar and typos in Tree Chapter of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1034,usability,widget,widgets,1034,"of User's Guide; Today I read User's Guide and spotted many mistakes I noticed when reading it for the first time 15 years ago. I thought that now is the time for me to act and to finally fix them. I'm not a native speaker, so I don't insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1267,usability,command,commands,1267,"t insist on all of them (I still doubt the usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1599,usability,memor,memory,1599,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1905,usability,user,user,1905,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:1998,usability,user,user,1998,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2101,usability,perform,performance,2101,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/issues/7284:2210,usability,Perform,Performance,2210,"usage of articles when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:. https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3. is the use the TTree::Show method. \- to use. 14.4. the branches and the leaves, is TTree::Print. \- no need for a comma. 14.6. boxes"". \- no need for the quote. witch is marked. \- which is marked. exposed expression. \- I think that would sound better as ""set expression"" or another adjective. Below them there are two text widgets. \- possible, but I think 'there' is redundant here. for specifying. \- to specify. \-\- I think this text should be checked by a native speaker for articles and other issues. When the “Rec” box is checked, the Draw and Scan commands. \- no need for quotes around Rec (or add them around Draw and Scan). 14.7. This picture shows the TTree class:. \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line! 14.7.3. save all branch buffers every n byte. \- bytes. 14.7.4. When a TTree is memory resident, you set it up so that it retains retain only the last few entries. \- retains. For example, this can be very useful for monitoring purpose. \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase. 14.7.6. The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number. \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23. The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.). \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7284
https://github.com/root-project/root/pull/7285:33,testability,understand,understands,33,[DF] Use a spelling that gcc 4.8 understands;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7285
https://github.com/root-project/root/pull/7286:692,availability,avail,available,692,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:909,availability,slo,slow,909,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:956,availability,slo,slot,956,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:266,deployability,version,version,266,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:431,deployability,version,version,431,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1319,deployability,contain,contains,1319,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1251,energy efficiency,Optim,Optimization,1251,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1706,energy efficiency,reduc,reduced,1706,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:0,integrability,Buffer,Buffer,0,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:266,integrability,version,version,266,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:431,integrability,version,version,431,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:526,integrability,event,events,526,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1330,integrability,coupl,couple,1330,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1594,integrability,queue,queue,1594,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:266,modifiability,version,version,266,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:431,modifiability,version,version,431,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1330,modifiability,coupl,couple,1330,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:105,performance,perform,performance,105,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:124,performance,parallel,parallel,124,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1038,performance,cach,caching,1038,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1251,performance,Optimiz,Optimization,1251,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1594,performance,queue,queue,1594,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1655,performance,parallel,parallelism,1655,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1676,performance,parallel,parallel,1676,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1722,performance,content,contention,1722,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1801,performance,time,time,1801,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:692,reliability,availab,available,692,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:909,reliability,slo,slow,909,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:956,reliability,slo,slot,956,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:692,safety,avail,available,692,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1179,safety,input,input,1179,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1240,safety,input,input,1240,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1512,safety,safe,safe,1512,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:692,security,availab,available,692,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1330,testability,coupl,couple,1330,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:105,usability,perform,performance,105,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1179,usability,input,input,1179,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1240,usability,input,input,1240,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7286:1547,usability,stop,stop,1547,"Buffer merger improve; This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7286
https://github.com/root-project/root/pull/7287:156,deployability,updat,updates,156,"Fix for Apple Silicon M1 - gfortran does not accept -m64; This fixes an issue with the compilation of GEANT3 on M1. GEANT3 cmake includes ROOT_USE_FILE and updates CMAKE_Fortran_FLAGS, so -m64 was propagated to the compiler and not recognised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7287
https://github.com/root-project/root/pull/7287:36,reliability,doe,does,36,"Fix for Apple Silicon M1 - gfortran does not accept -m64; This fixes an issue with the compilation of GEANT3 on M1. GEANT3 cmake includes ROOT_USE_FILE and updates CMAKE_Fortran_FLAGS, so -m64 was propagated to the compiler and not recognised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7287
https://github.com/root-project/root/pull/7287:156,safety,updat,updates,156,"Fix for Apple Silicon M1 - gfortran does not accept -m64; This fixes an issue with the compilation of GEANT3 on M1. GEANT3 cmake includes ROOT_USE_FILE and updates CMAKE_Fortran_FLAGS, so -m64 was propagated to the compiler and not recognised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7287
https://github.com/root-project/root/pull/7287:156,security,updat,updates,156,"Fix for Apple Silicon M1 - gfortran does not accept -m64; This fixes an issue with the compilation of GEANT3 on M1. GEANT3 cmake includes ROOT_USE_FILE and updates CMAKE_Fortran_FLAGS, so -m64 was propagated to the compiler and not recognised.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7287
https://github.com/root-project/root/pull/7288:252,interoperability,platform,platforms,252,"Add `ACLiC.LinkLibs: 1` in the `.rootrc` file for Windows; This fixes re-running tests on Windows. According to [the documentation](https://github.com/root-project/root/blob/master/config/rootrc.in#L384-L390), this is already the default for the other platforms, while the default is 3 for Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7288
https://github.com/root-project/root/pull/7288:81,safety,test,tests,81,"Add `ACLiC.LinkLibs: 1` in the `.rootrc` file for Windows; This fixes re-running tests on Windows. According to [the documentation](https://github.com/root-project/root/blob/master/config/rootrc.in#L384-L390), this is already the default for the other platforms, while the default is 3 for Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7288
https://github.com/root-project/root/pull/7288:81,testability,test,tests,81,"Add `ACLiC.LinkLibs: 1` in the `.rootrc` file for Windows; This fixes re-running tests on Windows. According to [the documentation](https://github.com/root-project/root/blob/master/config/rootrc.in#L384-L390), this is already the default for the other platforms, while the default is 3 for Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7288
https://github.com/root-project/root/pull/7288:117,usability,document,documentation,117,"Add `ACLiC.LinkLibs: 1` in the `.rootrc` file for Windows; This fixes re-running tests on Windows. According to [the documentation](https://github.com/root-project/root/blob/master/config/rootrc.in#L384-L390), this is already the default for the other platforms, while the default is 3 for Windows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7288
https://github.com/root-project/root/issues/7289:211,availability,error,error,211,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:220,availability,ERROR,ERROR,220,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:997,availability,error,error-pyinit-libpyroot,997,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:515,deployability,modul,module,515,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:571,deployability,modul,module,571,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:642,deployability,modul,module,642,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:702,deployability,modul,module,702,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:725,deployability,modul,module,725,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:910,deployability,build,build,910,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1209,deployability,instal,installation,1209,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1264,deployability,instal,installation,1264,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:274,interoperability,standard,standard,274,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:932,interoperability,bind,bindings,932,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1103,interoperability,bind,bindings,1103,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:515,modifiability,modul,module,515,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:571,modifiability,modul,module,571,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:642,modifiability,modul,module,642,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:702,modifiability,modul,module,702,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:725,modifiability,modul,module,725,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:932,modifiability,bind,bindings,932,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1103,modifiability,bind,bindings,1103,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:211,performance,error,error,211,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:220,performance,ERROR,ERROR,220,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:997,performance,error,error-pyinit-libpyroot,997,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:709,reliability,doe,does,709,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:211,safety,error,error,211,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:220,safety,ERROR,ERROR,220,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:515,safety,modul,module,515,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:571,safety,modul,module,571,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:642,safety,modul,module,642,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:702,safety,modul,module,702,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:725,safety,modul,module,725,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:997,safety,error,error-pyinit-libpyroot,997,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:450,testability,Trace,Traceback,450,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1320,testability,context,context,1320,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:211,usability,error,error,211,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:220,usability,ERROR,ERROR,220,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:831,usability,support,support,831,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:997,usability,error,error-pyinit-libpyroot,997,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/issues/7289:1223,usability,prefer,preferably,1223,"Allow ROOT to work with both Python 2 and 3 ; ### Is your feature request related to a problem? Please describe. When I run . $ python -c 'import ROOT'. in Python 3.9.1 on Arch Linux with ROOT 6.20/02, I get an error. > ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. ccache -O2 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'. Results was:. With exit code 0. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/opt/root/cur/lib/ROOT.py"", line 24, in <module>. import cppyy. File ""/opt/root/cur/lib/cppyy.py"", line 61, in <module>. import libPyROOT as _backend. ImportError: dynamic module does not define module export function (PyInit_libPyROOT). I found a post on ROOT Forum that ROOT can only be compiled to support Python 2 OR Python 3. People suppose that this is [a limitation of the build and the way the bindings are created](https://root-forum.cern.ch/t/pyroot-import-error-pyinit-libpyroot/16263/11). ### Describe the solution you'd like. The solution could be:. - to make bindings work both for Python 2 and 3, or. - to allow separate compilation for Python 2 and 3 in one ROOT installation (preferably created by default during the installation, not when the need arises). ### Additional context. I'm not sure whether this is a feature request or an improvement. As I wrote, this was already suggested, but I searched the Jira and the issues here, and didn't find a ticket for this. I think this would be better to fix this request as an issue (so it's not lost on the forum).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7289
https://github.com/root-project/root/pull/7290:12,interoperability,Specif,Specify,12,"[metacling] Specify the class of the called function (#6637):; When invoking virtual functions, TClingCallFunc is told which class. to call that function on. It is unclear whether havoc will break. loose from this change because uses expect to evaluate the vtable. when invoking a function on a base class, or whether (as in #6637). that exact function of the class should be invoked. I.e. change from. invoking `((Klass*)obj)->VirtFunc()` to `((Klass*)obj)->Klass::VirtFunc()`. which does not anymore call `VirtFun()` overridden by a class derived. from `Klass` that `obj` is pointing to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/pull/7290:485,reliability,doe,does,485,"[metacling] Specify the class of the called function (#6637):; When invoking virtual functions, TClingCallFunc is told which class. to call that function on. It is unclear whether havoc will break. loose from this change because uses expect to evaluate the vtable. when invoking a function on a base class, or whether (as in #6637). that exact function of the class should be invoked. I.e. change from. invoking `((Klass*)obj)->VirtFunc()` to `((Klass*)obj)->Klass::VirtFunc()`. which does not anymore call `VirtFun()` overridden by a class derived. from `Klass` that `obj` is pointing to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7290
https://github.com/root-project/root/issues/7291:258,integrability,event,events,258,"Add an option to disable TBB warning of specific type; Dears,. we are having excessive number of warnings coming from ROOT of this type:. ```. %MSG-i Root_Information: DTGeometryValidate:valid@ctor TThreadExecutor::ParallelFor() 22-Feb-2021 23:50:26 CET pre-events. tbb::global_control is limiting the number of parallel workers. Proceeding with 1 threads this time. ```. see, https://github.com/cms-sw/cmssw/issues/32977 . . The warnings are as described but this is an intentional limitation in CMSSW (as from what I understood). One possibility we discussed was to ask ROOT devs to put a cmake flag to silence it or anything similar you can propose (such that we turn it on and the warning disappears). Please see the issue on cmssw for more info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7291
https://github.com/root-project/root/issues/7291:40,interoperability,specif,specific,40,"Add an option to disable TBB warning of specific type; Dears,. we are having excessive number of warnings coming from ROOT of this type:. ```. %MSG-i Root_Information: DTGeometryValidate:valid@ctor TThreadExecutor::ParallelFor() 22-Feb-2021 23:50:26 CET pre-events. tbb::global_control is limiting the number of parallel workers. Proceeding with 1 threads this time. ```. see, https://github.com/cms-sw/cmssw/issues/32977 . . The warnings are as described but this is an intentional limitation in CMSSW (as from what I understood). One possibility we discussed was to ask ROOT devs to put a cmake flag to silence it or anything similar you can propose (such that we turn it on and the warning disappears). Please see the issue on cmssw for more info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7291
https://github.com/root-project/root/issues/7291:215,performance,Parallel,ParallelFor,215,"Add an option to disable TBB warning of specific type; Dears,. we are having excessive number of warnings coming from ROOT of this type:. ```. %MSG-i Root_Information: DTGeometryValidate:valid@ctor TThreadExecutor::ParallelFor() 22-Feb-2021 23:50:26 CET pre-events. tbb::global_control is limiting the number of parallel workers. Proceeding with 1 threads this time. ```. see, https://github.com/cms-sw/cmssw/issues/32977 . . The warnings are as described but this is an intentional limitation in CMSSW (as from what I understood). One possibility we discussed was to ask ROOT devs to put a cmake flag to silence it or anything similar you can propose (such that we turn it on and the warning disappears). Please see the issue on cmssw for more info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7291
https://github.com/root-project/root/issues/7291:312,performance,parallel,parallel,312,"Add an option to disable TBB warning of specific type; Dears,. we are having excessive number of warnings coming from ROOT of this type:. ```. %MSG-i Root_Information: DTGeometryValidate:valid@ctor TThreadExecutor::ParallelFor() 22-Feb-2021 23:50:26 CET pre-events. tbb::global_control is limiting the number of parallel workers. Proceeding with 1 threads this time. ```. see, https://github.com/cms-sw/cmssw/issues/32977 . . The warnings are as described but this is an intentional limitation in CMSSW (as from what I understood). One possibility we discussed was to ask ROOT devs to put a cmake flag to silence it or anything similar you can propose (such that we turn it on and the warning disappears). Please see the issue on cmssw for more info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7291
https://github.com/root-project/root/issues/7291:361,performance,time,time,361,"Add an option to disable TBB warning of specific type; Dears,. we are having excessive number of warnings coming from ROOT of this type:. ```. %MSG-i Root_Information: DTGeometryValidate:valid@ctor TThreadExecutor::ParallelFor() 22-Feb-2021 23:50:26 CET pre-events. tbb::global_control is limiting the number of parallel workers. Proceeding with 1 threads this time. ```. see, https://github.com/cms-sw/cmssw/issues/32977 . . The warnings are as described but this is an intentional limitation in CMSSW (as from what I understood). One possibility we discussed was to ask ROOT devs to put a cmake flag to silence it or anything similar you can propose (such that we turn it on and the warning disappears). Please see the issue on cmssw for more info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7291
https://github.com/root-project/root/issues/7291:187,safety,valid,valid,187,"Add an option to disable TBB warning of specific type; Dears,. we are having excessive number of warnings coming from ROOT of this type:. ```. %MSG-i Root_Information: DTGeometryValidate:valid@ctor TThreadExecutor::ParallelFor() 22-Feb-2021 23:50:26 CET pre-events. tbb::global_control is limiting the number of parallel workers. Proceeding with 1 threads this time. ```. see, https://github.com/cms-sw/cmssw/issues/32977 . . The warnings are as described but this is an intentional limitation in CMSSW (as from what I understood). One possibility we discussed was to ask ROOT devs to put a cmake flag to silence it or anything similar you can propose (such that we turn it on and the warning disappears). Please see the issue on cmssw for more info.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7291
https://github.com/root-project/root/issues/7292:301,availability,Error,Error,301,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:635,availability,Error,Error,635,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:713,availability,Error,Error,713,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1133,availability,error,error,1133,"archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1485,availability,error,error,1485,"ROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1832,availability,error,error,1832,"nd. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2081,availability,Error,Error,2081,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2171,availability,Error,Error,2171,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2213,availability,Error,Error,2213,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2566,availability,Down,Download,2566,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:12,deployability,fail,fails,12,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:84,deployability,instal,installing,84,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:198,deployability,fail,fails,198,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:278,deployability,build,build-err,278,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:288,deployability,log,log,288,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:320,deployability,build,build-root-,320,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:377,deployability,build,build-Release,377,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:420,deployability,fail,failed,420,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:468,deployability,build,build-root-,468,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:525,deployability,build,build,525,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:533,deployability,log,log,533,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:574,deployability,build,build,574,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:628,deployability,build,build,628,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:776,deployability,contain,contains,776,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:929,deployability,build,build-root-,929,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1056,deployability,build,build-root-,1056,"Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1273,deployability,build,build-root-,1273,"uild-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1408,deployability,build,build-root-,1408,"mmand failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1621,deployability,build,build-root-,1621,"-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1755,deployability,build,build-root-,1755,"s.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2006,deployability,build,build,2006,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2271,deployability,build,build-problem-with-xrootd-on-root-,2271,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2622,deployability,build,build,2622,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2650,deployability,build,build,2650,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2667,deployability,instal,install,2667,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2893,deployability,fail,failed,2893,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:401,integrability,messag,message,401,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:816,integrability,repositor,repository,816,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:401,interoperability,messag,message,401,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:816,interoperability,repositor,repository,816,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2732,modifiability,pac,package,2732,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2862,modifiability,variab,variable,2862,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:301,performance,Error,Error,301,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:635,performance,Error,Error,635,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:713,performance,Error,Error,713,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1133,performance,error,error,1133,"archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1485,performance,error,error,1485,"ROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1832,performance,error,error,1832,"nd. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2081,performance,Error,Error,2081,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2171,performance,Error,Error,2171,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2213,performance,Error,Error,2213,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:12,reliability,fail,fails,12,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:198,reliability,fail,fails,198,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:420,reliability,fail,failed,420,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2893,reliability,fail,failed,2893,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:288,safety,log,log,288,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:301,safety,Error,Error,301,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:533,safety,log,log,533,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:635,safety,Error,Error,635,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:713,safety,Error,Error,713,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1133,safety,error,error,1133,"archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1485,safety,error,error,1485,"ROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1832,safety,error,error,1832,"nd. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2081,safety,Error,Error,2081,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2171,safety,Error,Error,2171,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2213,safety,Error,Error,2213,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:288,security,log,log,288,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:533,security,log,log,533,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:288,testability,log,log,288,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:533,testability,log,log,533,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2796,testability,context,context,2796,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:162,usability,progress,progress,162,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:301,usability,Error,Error,301,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:412,usability,Command,Command,412,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:635,usability,Error,Error,635,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:713,usability,Error,Error,713,"compilation fails on xrootd: _STAT_VER was not declared ; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from source archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreloa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1133,usability,error,error,1133,"archive on Arch Linux. At progress around 60% the compilation fails suggesting to look for details in . XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-err.log. > CMake Error at /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-Release.cmake:49 (message):. Command failed: 2. '/usr/bin/make'. See also. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1485,usability,error,error,1485,"ROOTD-prefix/src/XROOTD-stamp/XROOTD-build-*.log. make[2]: *** [CMakeFiles/XROOTD.dir/build.make:131: XROOTD-prefix/src/XROOTD-stamp/XROOTD-build] Error 1 . make[1]: *** [CMakeFiles/Makefile2:7256: CMakeFiles/XROOTD.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... The file contains this infomation:. > [I] No git repository info found. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:1832,usability,error,error,1832,"nd. Trying to interpret VERSION_INFO. [I] src/XrdVersion.hh successfully generated. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2081,usability,Error,Error,2081,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2171,usability,Error,Error,2171,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2213,usability,Error,Error,2213,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7292:2426,usability,behavi,behavior,2426,"x/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Fstat(int, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:379:27: error: ‘_STAT_VER’ was not declared in this scope. 379 | : Xunix.Fstat64(_STAT_VER, fildes, (struct stat64 *)buf));. | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Lstat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:563:27: error: ‘_STAT_VER’ was not declared in this scope. 563 | ? Xunix.Lstat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc: In function ‘int XrdPosix_Stat(const char*, stat*)’:. /opt/root/build-root-6.22.06/XROOTD-prefix/src/XROOTD/src/XrdPosix/XrdPosix.cc:891:26: error: ‘_STAT_VER’ was not declared in this scope. 891 | ? Xunix.Stat64(_STAT_VER, path, (struct stat64 *)buf). | ^~~~~~~~~. make[5]: *** [src/CMakeFiles/XrdPosixPreload.dir/build.make:108: src/CMakeFiles/XrdPosixPreload.dir/XrdPosix/XrdPosix.cc.o] Error 1. make[4]: *** [CMakeFiles/Makefile2:1838: src/CMakeFiles/XrdPosixPreload.dir/all] Error 2. make[3]: *** [Makefile:149: all] Error 2. I [disabled xrootd](https://root-forum.cern.ch/t/build-problem-with-xrootd-on-root-v6-22-00/40255/7) as was suggested on the forum with. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir>. ### Expected behavior. `xrootd` should compile or, if it's not needed, be optional (not default). I'm not sure whether I need that. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz . ### Additional context. There exist reports on xrootd, but not connected to this variable. I have to say that I failed to compile without xrootd, but it is probably another issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7292
https://github.com/root-project/root/issues/7293:245,availability,Error,Error,245,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:555,availability,Error,Error,555,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:883,availability,error,error,883,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1031,availability,error,error-cannot-find-libvectordict-so,1031,"h file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1436,availability,Down,Download,1436,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2139,availability,error,error-file-install-can-not-find,2139,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2210,availability,error,error-with-libvectordict-so,2210,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2303,availability,error,error-cannot-find-libvectordict-so,2303,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:0,deployability,Instal,Installation,0,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:13,deployability,fail,fails,13,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:95,deployability,instal,installing,95,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:179,deployability,instal,install,179,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:225,deployability,fail,fails,225,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:307,deployability,INSTAL,INSTALL,307,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:339,deployability,build,build-root-,339,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:414,deployability,Stack,Stack,414,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:546,deployability,instal,install,546,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:607,deployability,instal,installation,607,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:754,deployability,build,build-root-,754,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1018,deployability,instal,installation-error-cannot-find-libvectordict-so,1018,"no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.ce",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1089,deployability,build,build,1089,"'m installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1164,deployability,instal,installation,1164,". At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1198,deployability,build,build,1198,"s 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1215,deployability,instal,install,1215,"ation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-wit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1247,deployability,fail,fails,1247," at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1492,deployability,build,build,1492,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1688,deployability,build,build,1688,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1705,deployability,instal,install,1705,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2050,deployability,instal,installation-issues-of-new-version-root-,2050,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2150,deployability,instal,install-can-not-find,2150,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2290,deployability,instal,installation-error-cannot-find-libvectordict-so,2290,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:254,energy efficiency,core,core,254,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:447,energy efficiency,core,core,447,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2077,integrability,version,version-root-,2077,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1770,modifiability,pac,package,1770,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2077,modifiability,version,version-root-,2077,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:245,performance,Error,Error,245,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:555,performance,Error,Error,555,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:883,performance,error,error,883,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1031,performance,error,error-cannot-find-libvectordict-so,1031,"h file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2139,performance,error,error-file-install-can-not-find,2139,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2210,performance,error,error-with-libvectordict-so,2210,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2303,performance,error,error-cannot-find-libvectordict-so,2303,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:13,reliability,fail,fails,13,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:225,reliability,fail,fails,225,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1247,reliability,fail,fails,1247," at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:245,safety,Error,Error,245,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:555,safety,Error,Error,555,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:883,safety,error,error,883,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1031,safety,error,error-cannot-find-libvectordict-so,1031,"h file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2139,safety,error,error-file-install-can-not-find,2139,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2210,safety,error,error-with-libvectordict-so,2210,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2303,safety,error,error-cannot-find-libvectordict-so,2303,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1833,testability,context,context,1833,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:194,usability,progress,progress,194,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:245,usability,Error,Error,245,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:555,usability,Error,Error,555,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:883,usability,error,error,883,"Installation fails with libvectorDict.so: no such file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggeste",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1031,usability,error,error-cannot-find-libvectordict-so,1031,"h file or directory; ### Describe the bug. I'm installing the most recent ROOT 6.22.06 from a source archive on Arch Linux. At the install phase (progress 100%) the compilation fails with. > CMake Error at core/clingutils/cmake_install.cmake:56 (file):. file INSTALL cannot find. ""/opt/root/build-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1368,usability,behavi,behavior,1368,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:1914,usability,close,close,1914,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2139,usability,error,error-file-install-can-not-find,2139,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2210,usability,error,error-with-libvectordict-so,2210,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7293:2303,usability,error,error-cannot-find-libvectordict-so,2303,"-root-6.22.06/lib/libvectorDict.so"": No such file or. directory. Call Stack (most recent call first):. core/cmake_install.cmake:75 (include). cmake_install.cmake:200 (include). make: *** [Makefile:148: install] Error 1. I had `libvectorDict.so` from the previous installation (also it is present at /usr/lib/root/libvectorDict.so, I don't know why), so I linked that file to the needed one. ln -s `realpath ../build-root-6.20.02/lib/libvectorDict.so` lib/. it was linked fine (existed). However, when I re-run `cmake`, it outputs the same error and the file is removed. I found that it's possible to [generate this file separately](https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162/9) with. cmake --build . -- vectorDict . However, I can't be sure that this makes it a good installation (when I run `cmake --build . --target install -- -j15` after that, it fails to find the file again). `root` binary exists and can be run, so I hope it solves the problem for me. ### Expected behavior. `cmake` should not delete this file. ### To Reproduce. 1. Download and unpack a source .tar.gz, create and cd the build directory. 2. cmake -Dxrootd=OFF -Dbuiltin_xrootd=OFF <source_dir> (I had to got rid of `xrootd` as I wrote in [another issue](https://github.com/root-project/root/issues/7292)). 3. cmake --build . --target install -- -j15. ### Setup. 1. 6.22.06. 2. Arch Linux. 3. Source package from site, root_v6.22.06.source.tar.gz. ### Additional context. There are really many reports with this problem. An existing issue most close to this may be https://github.com/root-project/root/issues/7108 (it was suggested by git search). 1. https://root-forum.cern.ch/t/installation-issues-of-new-version-root-6-06-00/20523/8. 2. https://root-forum.cern.ch/t/error-file-install-can-not-find/37552. 3. https://root-forum.cern.ch/t/error-with-libvectordict-so/39097. 4. https://root-forum.cern.ch/t/root-6-22-02-installation-error-cannot-find-libvectordict-so/42162.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7293
https://github.com/root-project/root/issues/7295:0,availability,Error,Errors,0,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:862,availability,Error,Error,862,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1009,availability,Error,Error,1009,"g the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1045,availability,Error,Error,1045,"ree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1598,availability,Error,Error,1598,"rrently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1721,availability,error,errors,1721,"ot set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1001,deployability,fail,failed,1001,"rs during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2428,deployability,version,version,2428,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:599,energy efficiency,current,currently,599,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2428,integrability,version,version,2428,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1810,interoperability,specif,specific,1810,"rametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2428,modifiability,version,version,2428,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2475,modifiability,pac,package,2475,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:0,performance,Error,Errors,0,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:862,performance,Error,Error,862,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1009,performance,Error,Error,1009,"g the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1045,performance,Error,Error,1045,"ree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1598,performance,Error,Error,1598,"rrently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1721,performance,error,errors,1721,"ot set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:904,reliability,doe,does,904,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1001,reliability,fail,failed,1001,"rs during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1353,reliability,doe,doesn,1353,"eListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:0,safety,Error,Errors,0,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:587,safety,input,input,587,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:862,safety,Error,Error,862,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1009,safety,Error,Error,1009,"g the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1045,safety,Error,Error,1045,"ree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1598,safety,Error,Error,1598,"rrently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1721,safety,error,errors,1721,"ot set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:987,testability,Assert,Assertion,987,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2499,testability,context,context,2499,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:0,usability,Error,Errors,0,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:149,usability,document,documentation,149,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:587,usability,input,input,587,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:862,usability,Error,Error,862,"Errors during the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/class",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1009,usability,Error,Error,1009,"g the generation of html docs; no TTree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1045,usability,Error,Error,1045,"ree docs generated; - [x ] Checked for duplicates. ### Describe the bug. I'm trying to generate html documentation for ROOT. Most files are created, but it reports several issues:. > Warning in <THtml::CreateListOfClasses>: Cannot find the header for the following classes [reason]:. Warning in <THtml::CreateListOfClasses>: TVirtualPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1373,usability,document,documentation,1373,"lPaveStats [header TVirtualPaveStats.h not found]. Warning in <THtml::CreateListOfClasses>: THtml cannot find all headers and sources. . Warning in <THtml::CreateListOfClasses>: You might need to adjust the input path (currently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1598,usability,Error,Error,1598,"rrently ./:src/:include/:/opt/root/cur) by calling THtml::SetInputDir(). Warning in <THtml::CreateListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1694,usability,behavi,behavior,1694,"eListOfClasses>: Product not set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs sho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1721,usability,error,errors,1721,"ot set. You should call gHtml->SetProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:1749,usability,document,documentation,1749,"etProduct(""MyProductName"");. > 578 htmldoc/ROOT__Math__IParametricGradFunctionMultiDimTempl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2095,usability,command,commands,2095,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2514,usability,document,documentation,2514,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/issues/7295:2585,usability,document,documentation,2585,"empl_double_.html. Error: segment [(31.517,476.17),(22,480)] does not intersect box ll=(22,328),ur=(70,681). dot: compound.c:78: boxIntersectf: Assertion `0' failed. Error in <TClassDocOutput::RunDot>: Error running dot -q1 -Tpng -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.png -Tcmap -ohtmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.map htmldoc/inhmem/ROOT__Math__IParametricGradFunctionMultiDimTempl_double__InhMem.dot! Which is worse, it doesn't create html documentation for TTree (and it's missing in the index). . I try to generate it separately:. root [4] h.SetInputDir(""$(ROOTSYS)"");. root [5] h.MakeClass(""TTree"");. > Info in <THtml::CreateListOfClasses>: Initializing - DONE. Error in <THtml::MakeClass>: Unknown class 'TTree'! root [6] TTree t;. works fine. ### Expected behavior. Should report no errors, should create TTree documentation. ### To Reproduce. My ~/.rootrc is. > \# THtml specific settings. Root.Html.OutputDir: htmldoc/. Root.Html.SourcePrefix:. Unix.*.Root.Html.SourceDir: ./:src/:include/:/opt/root/cur. (I copied it from https://root.cern.ch/doc/master/classTHtml.html (MakeAll) and https://root.cern.ch/root/roottalk/roottalk01/0059.html). I run these commands from root interpreter:. > {. THtml html;. html.CreateHierarchy();. html.MakeAll();. }. It produces the output I mentioned. . ### Setup. 1. ROOT 6.22/06 compiled from source. However, I produced html with ROOT 6.20.02 earlier, and *TTree* was missing there as well (that's why I tried to regenerate docs with the most recent version). 2. Arch Linux. 3. Built from .tar.gz package. ### Additional context. TTree documentation exists on the site, but I very much want to have offline documentation. First I wanted to post this on ROOT Forum, but during post creation the system wrote that bugs should be reported to the tracking system (Jira). If this is more convenient for you here, I post it here, though I wrote many reports here already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7295
https://github.com/root-project/root/pull/7296:8,deployability,modul,modulemap,8,[cling] modulemap <string_view> requires C++17.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7296
https://github.com/root-project/root/pull/7296:8,modifiability,modul,modulemap,8,[cling] modulemap <string_view> requires C++17.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7296
https://github.com/root-project/root/pull/7296:8,safety,modul,modulemap,8,[cling] modulemap <string_view> requires C++17.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7296
https://github.com/root-project/root/pull/7297:36,availability,failur,failure,36,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:36,deployability,fail,failure,36,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:116,deployability,fail,failed,116,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:36,performance,failur,failure,36,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:124,performance,content,content,124,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:36,reliability,fail,failure,36,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:116,reliability,fail,failed,116,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:26,testability,assert,assertion,26,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:106,testability,Assert,Assertion,106,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7297:74,usability,hint,hints,74,"Temporary change to debug assertion failure on Windows; Try to print some hints about why there is this: `Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!""`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7297
https://github.com/root-project/root/pull/7298:286,availability,failur,failures,286,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:79,deployability,modul,modules,79,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:286,deployability,fail,failures,286,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:79,modifiability,modul,modules,79,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:286,performance,failur,failures,286,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:286,reliability,fail,failures,286,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:45,safety,safe,safe,45,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:79,safety,modul,modules,79,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:357,safety,review,reviews,357,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7298:357,testability,review,reviews,357,The Sema::LookupConstructor is not iteration safe.; When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7298
https://github.com/root-project/root/pull/7299:57,deployability,Updat,Update,57,"[webcanvas] Add TRatioPlot to list of supported classes; Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7299
https://github.com/root-project/root/pull/7299:57,safety,Updat,Update,57,"[webcanvas] Add TRatioPlot to list of supported classes; Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7299
https://github.com/root-project/root/pull/7299:57,security,Updat,Update,57,"[webcanvas] Add TRatioPlot to list of supported classes; Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7299
https://github.com/root-project/root/pull/7299:38,usability,support,supported,38,"[webcanvas] Add TRatioPlot to list of supported classes; Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7299
https://github.com/root-project/root/pull/7299:93,usability,support,supported,93,"[webcanvas] Add TRatioPlot to list of supported classes; Update JSROOT, where TRatioPlot now supported. Make use of functionality: https://jsroot.gsi.de/dev/examples.htm#tratioplot_r6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7299
https://github.com/root-project/root/pull/7300:41,deployability,build,build,41,[cling] Add the CLANG_INCLUDE_DIRS if we build as part of LLVM.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7300
https://github.com/root-project/root/pull/7301:9,deployability,Updat,Updated,9,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/pull/7301:17,interoperability,format,formatting,17,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/pull/7301:9,safety,Updat,Updated,9,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/pull/7301:9,security,Updat,Updated,9,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7301
https://github.com/root-project/root/issues/7302:24,availability,error,error,24,TGraph copy constructor error; Reported on forum: https://root-forum.cern.ch/t/tricky-to-me-memory-leak-when-creating-a-tgrapherrors-using-copy-constructor/43725/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:24,performance,error,error,24,TGraph copy constructor error; Reported on forum: https://root-forum.cern.ch/t/tricky-to-me-memory-leak-when-creating-a-tgrapherrors-using-copy-constructor/43725/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:92,performance,memor,memory-leak-when-creating-a-tgrapherrors-using-copy-constructor,92,TGraph copy constructor error; Reported on forum: https://root-forum.cern.ch/t/tricky-to-me-memory-leak-when-creating-a-tgrapherrors-using-copy-constructor/43725/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:24,safety,error,error,24,TGraph copy constructor error; Reported on forum: https://root-forum.cern.ch/t/tricky-to-me-memory-leak-when-creating-a-tgrapherrors-using-copy-constructor/43725/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:24,usability,error,error,24,TGraph copy constructor error; Reported on forum: https://root-forum.cern.ch/t/tricky-to-me-memory-leak-when-creating-a-tgrapherrors-using-copy-constructor/43725/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/issues/7302:92,usability,memor,memory-leak-when-creating-a-tgrapherrors-using-copy-constructor,92,TGraph copy constructor error; Reported on forum: https://root-forum.cern.ch/t/tricky-to-me-memory-leak-when-creating-a-tgrapherrors-using-copy-constructor/43725/4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7302
https://github.com/root-project/root/pull/7303:33,deployability,contain,contain,33,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:103,deployability,modul,modulemap,103,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:145,deployability,version,versions,145,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:217,deployability,patch,patch,217,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:286,deployability,build,builds,286,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:19,integrability,sub,submodules,19,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:145,integrability,version,versions,145,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:231,integrability,sub,submitted,231,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:103,modifiability,modul,modulemap,103,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:145,modifiability,version,versions,145,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:103,safety,modul,modulemap,103,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:217,safety,patch,patch,217,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:247,safety,review,review,247,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:217,security,patch,patch,217,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/pull/7303:247,testability,review,review,247,"[cxxmodules] Allow submodules to contain headers which may be missing.; This allows us to use a single modulemap file across multiple libstdc++. versions and gives us a way forward to deal with deprecated files. This patch will be submitted for a review upstream. It fixes our. gcc 4.8 builds where codecvt, cuchar and string_view header files do not exist.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7303
https://github.com/root-project/root/issues/7304:33,usability,guid,guide,33,RFitPanel missing from reference guide; ### Describe the bug. `ROOT::Experimental::RFitPanel` is missing in the reference guide. ### Expected behavior. https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RFitPanel.html links to the doc page.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7304
https://github.com/root-project/root/issues/7304:122,usability,guid,guide,122,RFitPanel missing from reference guide; ### Describe the bug. `ROOT::Experimental::RFitPanel` is missing in the reference guide. ### Expected behavior. https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RFitPanel.html links to the doc page.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7304
https://github.com/root-project/root/issues/7304:142,usability,behavi,behavior,142,RFitPanel missing from reference guide; ### Describe the bug. `ROOT::Experimental::RFitPanel` is missing in the reference guide. ### Expected behavior. https://root.cern.ch/doc/master/classROOT_1_1Experimental_1_1RFitPanel.html links to the doc page.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7304
https://github.com/root-project/root/pull/7306:9,deployability,Updat,Updated,9,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7306
https://github.com/root-project/root/pull/7306:17,interoperability,format,formatting,17,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7306
https://github.com/root-project/root/pull/7306:9,safety,Updat,Updated,9,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7306
https://github.com/root-project/root/pull/7306:9,security,Updat,Updated,9,[ntuple] Updated formatting for ROOTv7 revised climate tutorial;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7306
https://github.com/root-project/root/issues/7308:643,deployability,patch,patch,643,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:716,energy efficiency,current,current,716,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:849,energy efficiency,current,current,849,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:871,energy efficiency,current,current,871,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1682,energy efficiency,current,current,1682,"'s said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2432,energy efficiency,current,current,2432,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2815,energy efficiency,current,current,2815,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2853,energy efficiency,Draw,Draw,2853,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2875,energy efficiency,Draw,Draw,2875,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2663,integrability,event,event,2663,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2791,integrability,interfac,interfaces,2791,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:809,interoperability,semant,semantically,809,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1959,interoperability,share,share,1959,"tenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a go",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2791,interoperability,interfac,interfaces,2791,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1099,modifiability,variab,variables,1099,"Tree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2143,modifiability,inherit,inheritance,2143,"ten to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Foru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2791,modifiability,interfac,interfaces,2791,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2124,reliability,doe,doesn,2124,"to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:643,safety,patch,patch,643,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1000,safety,reme,remembered,1000,":Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:643,security,patch,patch,643,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1183,security,session,session,1183,"136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1916,security,hack,hackish,1916,"ng-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2479,testability,understand,understand,2479,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:3016,testability,context,context,3016,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:324,usability,learn,learn,324,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:670,usability,document,documentation,670,"TTree:Write should write to TTree's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see sev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1029,usability,User,User,1029,"ee's file; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be impro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1036,usability,Guid,Guide,1036,"e; ### Explain what you would like to see improved. There is a [TTree constructor](https://root.cern/doc/master/classTTree.html#a072dbaea957b66fe33f136e7319ed724),. TTree::TTree (const char *name, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1229,usability,clear,clear,1229,"me, const char * title, Int_t splitlevel = 99, TDirectory *dir = gDirectory). (it's easy to learn that a TDirectory object can be a TFile, which is used very often). There is a [TTree:Write](https://root.cern/doc/master/classTTree.html#af6f2d9ae4048ad85fcae5d2afa05100f) method (actually there are two of them; when I read the code I found that the non-const just calls a const method, so it looks like an ugly patch; but anyway). In the documentation it's said that it writes to the current directory (which is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:1733,usability,behavi,behaviour,1733,"ch is correct). I found an explanation by pcanal, that [TObject::Write semantically is explicitly to store the current object in the current TFile](https://root-forum.cern.ch/t/writing-trees-to-different-files/5640/3?u=ynikitenko). Why I was looking for that: I remembered from the old good User's Guide that there is a 'global directory' and many other global variables in ROOT. I wanted to have two trees written to two different files in one session from Python. But the trees (as now is clear) were written to the most recently opened file, not to those with which they were initialized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2325,usability,behavi,behaviour,2325,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2370,usability,document,documentation,2370,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/issues/7308:2828,usability,user,users,2828,"alized. In the link above, I found the way to solve this:. TFile.Write(). would save its objects. I find this very non-straightforward. I think that if a file is associated with TTree, it should be written to that file. On the line 891 of [TTree.cxx](https://root.cern/doc/master/TTree_8cxx_source.html) there is a fixme comment:. > // Insert ourself into the current directory. // FIXME: This is very annoying behaviour, we should. // be able to choose to not do this like we. // can with a histogram. That comment was misleading for me, I thought that was not implemented and was looking for hackish ways not to do that. ### Optional: share how it could be improved. I see several ways how it could be improved:. 1) make Write use TTree's file if that was set in the constructor. This is natural and doesn't contradict inheritance from TObject, because a) not all ROOT objects belong to the global directory b) virtual functions can be reimplemented in daughter classes; this is fine when the general behaviour is the same. 2) add to TTree:Write documentation the way to write to a given file instead of the current file (this might be easier to find and understand than in the vast docs of TTree). 3) maybe create a method Write(file) of TTree with an argument TFile/(its parent). In the [program of work for 2020](https://indico.cern.ch/event/875784/contributions/3690258/attachments/1975740/3288395/ROOT-PoW2020-EP-SFT.pdf) on page 10 Axel Naumann proposes: ""Keep interfaces readable for current ROOT users. canv->cd(); hist->Draw(); becomes canv->Draw(hist)."" I think this is very much in line with this suggestion, and it's just a good design. ### Setup. 1. ROOT 6.22/06. ### Additional context. I found a question [TTree.Write() vs. TFile.Write()](https://root-forum.cern.ch/t/ttree-write-vs-tfile-write/82) on the Forum, so it may be better to explain (or implement) it more explicitly in docs. There are really many questions about how to write one/two trees to one/several different files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7308
https://github.com/root-project/root/pull/7309:39,availability,operat,operator,39,Fix TGraph copy constructor and assign operator (#7302); Cloned histogram should not be assign to current directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7309
https://github.com/root-project/root/pull/7309:98,energy efficiency,current,current,98,Fix TGraph copy constructor and assign operator (#7302); Cloned histogram should not be assign to current directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7309
https://github.com/root-project/root/pull/7310:39,availability,operat,operator,39,Fix TGraph copy constructor and assign operator (#7302) [6.22]; Cloned histogram should not be assign to current directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7310
https://github.com/root-project/root/pull/7310:105,energy efficiency,current,current,105,Fix TGraph copy constructor and assign operator (#7302) [6.22]; Cloned histogram should not be assign to current directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7310
https://github.com/root-project/root/issues/7311:7,deployability,build,build,7,"Cannot build ROOT if some paths contain spaces; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:32,deployability,contain,contain,32,"Cannot build ROOT if some paths contain spaces; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:614,deployability,instal,installing-root-w-,614,"Cannot build ROOT if some paths contain spaces; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:438,usability,clear,clear,438,"Cannot build ROOT if some paths contain spaces; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/issues/7311:486,usability,behavi,behavior,486,"Cannot build ROOT if some paths contain spaces; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. The problem and steps to reproduce it are described [in this forum post](https://root-forum.cern.ch/t/trouble-installing-root-w-python3/43694/11).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7311
https://github.com/root-project/root/pull/7312:5,usability,clear,clear,5,Make clear THtml is legacy code; As requested her : https://github.com/root-project/root/issues/7295,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7312
https://github.com/root-project/root/pull/7313:8,safety,Prevent,Prevent,8,[cmake] Prevent `#include <complex.h>` also for GCC <=5.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7313
https://github.com/root-project/root/pull/7313:27,safety,compl,complex,27,[cmake] Prevent `#include <complex.h>` also for GCC <=5.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7313
https://github.com/root-project/root/pull/7313:8,security,Preven,Prevent,8,[cmake] Prevent `#include <complex.h>` also for GCC <=5.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7313
https://github.com/root-project/root/pull/7313:27,security,compl,complex,27,[cmake] Prevent `#include <complex.h>` also for GCC <=5.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7313
https://github.com/root-project/root/pull/7314:967,deployability,version,version,967,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:432,energy efficiency,Current,Currently,432,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:656,energy efficiency,adapt,adapted,656,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:656,integrability,adapt,adapted,656,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:967,integrability,version,version,967,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:656,interoperability,adapt,adapted,656,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:656,modifiability,adapt,adapted,656,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:967,modifiability,version,version,967,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:900,safety,test,test,900,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:922,safety,test,tested,922,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:900,testability,test,test,900,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7314:922,testability,test,tested,922,"[RF] Add keyword pythonization of fitTo to RooAbsPdf; My try to add some pythonization to `fitTo`. For reference see [#7217](https://github.com/root-project/root/issues/7217#issuecomment-785392761). Instead of passing, for example, . ```. pdf.fitTo(data, ROOT.RooFit.Range(""sideband"")). ```. one could now also do . ```. pdf.fitTo(data, Range=""sideband""). ```. etc. The code takes the kwargs and turns them into `RooFit` `CmdArg`s. Currently this requires the keyword to be equal to the `CmdArg` (cf. [here](https://root.cern.ch/doc/master/classRooAbsPdf.html#a8f802a3a93467d5b7b089e3ccaec0fa8)). . However, the `__cast` function in `_rooabspdf.py` can be adapted such that other variants may be accepted, like e.g. `range` instead of `Range`. I am not sure about some details of the implementation:. - Should the `__cast` function be kept although it is not doing anything for the moment? - Are the test appropriate? - I tested the features locally with a different version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7314
https://github.com/root-project/root/pull/7315:13,deployability,build,building,13,[clad] Allow building clad as a cling plugin via -DCLING_BUILD_PLUGINS=On; cc: @ioanaif,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7315
https://github.com/root-project/root/pull/7315:38,interoperability,plug,plugin,38,[clad] Allow building clad as a cling plugin via -DCLING_BUILD_PLUGINS=On; cc: @ioanaif,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7315
https://github.com/root-project/root/pull/7316:4,deployability,build,build,4,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:73,deployability,patch,patch,73,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:130,deployability,build,buildding,130,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:200,deployability,build,build,200,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:140,energy efficiency,Core,Core,140,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:186,modifiability,exten,extending,186,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:10,performance,time,time,10,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:206,performance,time,time,206,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:73,safety,patch,patch,73,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7316:73,security,patch,patch,73,"Fix build time on Windows when nothing changed in the code; Without this patch, CMake was always re-generating G__Imt.cxx, the re-buildding Core, and re-generating all the dictionaries, extending the build time from around two minutes to more than 30 minutes when nothing changed in the code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7316
https://github.com/root-project/root/pull/7317:172,deployability,depend,depends,172,"[RF] ActionHelper for RDF; To facilitate the creation of RooFit datasets from RDataFrame, an. ActionHelper is added to RooFit. It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:172,integrability,depend,depends,172,"[RF] ActionHelper for RDF; To facilitate the creation of RooFit datasets from RDataFrame, an. ActionHelper is added to RooFit. It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:172,modifiability,depend,depends,172,"[RF] ActionHelper for RDF; To facilitate the creation of RooFit datasets from RDataFrame, an. ActionHelper is added to RooFit. It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:172,safety,depend,depends,172,"[RF] ActionHelper for RDF; To facilitate the creation of RooFit datasets from RDataFrame, an. ActionHelper is added to RooFit. It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7317:172,testability,depend,depends,172,"[RF] ActionHelper for RDF; To facilitate the creation of RooFit datasets from RDataFrame, an. ActionHelper is added to RooFit. It lives in its own mini library, because it depends on RDF, which RooFit is not. This adresses #7223, but weighted filling is missing, so I'm not closing that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7317
https://github.com/root-project/root/pull/7318:30,energy efficiency,optim,optimizer,30,"[TMVA] Add capability to pass optimizer options in training string for MethodDL.; With this PR one can setup the options for the ADAM minimizer,. ADAM_beta1, ADAM_beta2 and ADAM_eps. Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7318
https://github.com/root-project/root/pull/7318:317,energy efficiency,optim,optimizer-parameters,317,"[TMVA] Add capability to pass optimizer options in training string for MethodDL.; With this PR one can setup the options for the ADAM minimizer,. ADAM_beta1, ADAM_beta2 and ADAM_eps. Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7318
https://github.com/root-project/root/pull/7318:327,modifiability,paramet,parameters,327,"[TMVA] Add capability to pass optimizer options in training string for MethodDL.; With this PR one can setup the options for the ADAM minimizer,. ADAM_beta1, ADAM_beta2 and ADAM_eps. Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7318
https://github.com/root-project/root/pull/7318:30,performance,optimiz,optimizer,30,"[TMVA] Add capability to pass optimizer options in training string for MethodDL.; With this PR one can setup the options for the ADAM minimizer,. ADAM_beta1, ADAM_beta2 and ADAM_eps. Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7318
https://github.com/root-project/root/pull/7318:317,performance,optimiz,optimizer-parameters,317,"[TMVA] Add capability to pass optimizer options in training string for MethodDL.; With this PR one can setup the options for the ADAM minimizer,. ADAM_beta1, ADAM_beta2 and ADAM_eps. Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7318
https://github.com/root-project/root/pull/7318:134,usability,minim,minimizer,134,"[TMVA] Add capability to pass optimizer options in training string for MethodDL.; With this PR one can setup the options for the ADAM minimizer,. ADAM_beta1, ADAM_beta2 and ADAM_eps. Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7318
https://github.com/root-project/root/issues/7319:816,safety,test,test,816,"[Hist] Wrong computation in TH3::GetCovariance for diagonal elements; As reported in https://root-forum.cern.ch/t/th3-covariance-computation-issue/43724. sumw should be used instead of sumw2 in the computation of the diagonal elements of the covariance. . ```. if (axis1 == 1 && axis2 == 1) {. return TMath::Abs(sumwx2/sumw - sumwx*sumwx/sumw2);. }. ```. should be : . ```. if (axis1 == 1 && axis2 == 1) {. return TMath::Abs(sumwx2/sumw - sumwx*sumwx/(sumw*sumw));. }. ```. The computation of the off-diagonal element is correct! To reproduce just do: . ```. {. TH3D h1(""h1"",""h1"",10,0,10,10,0,10,10,0,10);. h1.Fill(1,1,1,2);. h1.Fill(3,3,3,4);. R__ASSERT( h1.GetCovariance(1,1) == h1.GetCovariance(1,2));. R__ASSERT ( TMath::AreEqualAbs( h1.GetCovariance(1,1), h1.GetStdDev(1)*h1.GetStdDev(1), 1.E-10) ); . cout << ""test passed"" << endl;. }.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7319
https://github.com/root-project/root/issues/7319:816,testability,test,test,816,"[Hist] Wrong computation in TH3::GetCovariance for diagonal elements; As reported in https://root-forum.cern.ch/t/th3-covariance-computation-issue/43724. sumw should be used instead of sumw2 in the computation of the diagonal elements of the covariance. . ```. if (axis1 == 1 && axis2 == 1) {. return TMath::Abs(sumwx2/sumw - sumwx*sumwx/sumw2);. }. ```. should be : . ```. if (axis1 == 1 && axis2 == 1) {. return TMath::Abs(sumwx2/sumw - sumwx*sumwx/(sumw*sumw));. }. ```. The computation of the off-diagonal element is correct! To reproduce just do: . ```. {. TH3D h1(""h1"",""h1"",10,0,10,10,0,10,10,0,10);. h1.Fill(1,1,1,2);. h1.Fill(3,3,3,4);. R__ASSERT( h1.GetCovariance(1,1) == h1.GetCovariance(1,2));. R__ASSERT ( TMath::AreEqualAbs( h1.GetCovariance(1,1), h1.GetStdDev(1)*h1.GetStdDev(1), 1.E-10) ); . cout << ""test passed"" << endl;. }.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7319
https://github.com/root-project/root/pull/7321:259,deployability,Updat,Update,259,"[eve7] implement cleanup of GLViewer [skip-ci]; When drawing different projections via View -> Browse to menu. command, one have to cleanup previousely shown views. Implement for plain three.js and JSROOT-based views,. to be implemented for `RCore` renderer. Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7321
https://github.com/root-project/root/pull/7321:53,energy efficiency,draw,drawing,53,"[eve7] implement cleanup of GLViewer [skip-ci]; When drawing different projections via View -> Browse to menu. command, one have to cleanup previousely shown views. Implement for plain three.js and JSROOT-based views,. to be implemented for `RCore` renderer. Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7321
https://github.com/root-project/root/pull/7321:259,safety,Updat,Update,259,"[eve7] implement cleanup of GLViewer [skip-ci]; When drawing different projections via View -> Browse to menu. command, one have to cleanup previousely shown views. Implement for plain three.js and JSROOT-based views,. to be implemented for `RCore` renderer. Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7321
https://github.com/root-project/root/pull/7321:259,security,Updat,Update,259,"[eve7] implement cleanup of GLViewer [skip-ci]; When drawing different projections via View -> Browse to menu. command, one have to cleanup previousely shown views. Implement for plain three.js and JSROOT-based views,. to be implemented for `RCore` renderer. Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7321
https://github.com/root-project/root/pull/7321:105,usability,menu,menu,105,"[eve7] implement cleanup of GLViewer [skip-ci]; When drawing different projections via View -> Browse to menu. command, one have to cleanup previousely shown views. Implement for plain three.js and JSROOT-based views,. to be implemented for `RCore` renderer. Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7321
https://github.com/root-project/root/pull/7321:111,usability,command,command,111,"[eve7] implement cleanup of GLViewer [skip-ci]; When drawing different projections via View -> Browse to menu. command, one have to cleanup previousely shown views. Implement for plain three.js and JSROOT-based views,. to be implemented for `RCore` renderer. Update JSROOT with correspondent fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7321
https://github.com/root-project/root/pull/7322:257,deployability,integr,integration,257,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:358,deployability,integr,integration,358,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:257,integrability,integr,integration,257,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:358,integrability,integr,integration,358,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:375,integrability,sub,subranges,375,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:257,interoperability,integr,integration,257,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:358,interoperability,integr,integration,358,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:257,modifiability,integr,integration,257,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:335,modifiability,paramet,parameters,335,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:358,modifiability,integr,integration,358,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:257,reliability,integr,integration,257,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:358,reliability,integr,integration,358,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:9,safety,test,testRooParamHistFunc,9,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:207,safety,test,testRooParamHistFunc,207,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:295,safety,test,tested,295,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:257,security,integr,integration,257,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:358,security,integr,integration,358,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:9,testability,test,testRooParamHistFunc,9,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:207,testability,test,testRooParamHistFunc,207,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:257,testability,integr,integration,257,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:295,testability,test,tested,295,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7322:358,testability,integr,integration,358,"[RF] Add testRooParamHistFunc inspired by issue #7182; Follow-up on https://github.com/root-project/root/pull/7198 as promised in https://github.com/root-project/root/pull/7198#issuecomment-782401337. A new testRooParamHistFunc was introduced. The analytic integration of a. RooParamHistFunc is tested both for trivial and non-trivial parameters,. since the integration over subranges was problematic (as reported in. issue #7182).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7322
https://github.com/root-project/root/pull/7325:241,availability,down,down,241,"[RF] Use more RooAbsReal in constructors of RooFit classes; Some RooFit classes used the RooRealVar or RooAbsRealLValue types for. some of their parameters in the constructor, which is not as flexible as. RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were. encountered when investigating RooFit problems reported in the forum. More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which. was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:253,deployability,depend,dependency,253,"[RF] Use more RooAbsReal in constructors of RooFit classes; Some RooFit classes used the RooRealVar or RooAbsRealLValue types for. some of their parameters in the constructor, which is not as flexible as. RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were. encountered when investigating RooFit problems reported in the forum. More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which. was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:253,integrability,depend,dependency,253,"[RF] Use more RooAbsReal in constructors of RooFit classes; Some RooFit classes used the RooRealVar or RooAbsRealLValue types for. some of their parameters in the constructor, which is not as flexible as. RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were. encountered when investigating RooFit problems reported in the forum. More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which. was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:145,modifiability,paramet,parameters,145,"[RF] Use more RooAbsReal in constructors of RooFit classes; Some RooFit classes used the RooRealVar or RooAbsRealLValue types for. some of their parameters in the constructor, which is not as flexible as. RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were. encountered when investigating RooFit problems reported in the forum. More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which. was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:253,modifiability,depend,dependency,253,"[RF] Use more RooAbsReal in constructors of RooFit classes; Some RooFit classes used the RooRealVar or RooAbsRealLValue types for. some of their parameters in the constructor, which is not as flexible as. RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were. encountered when investigating RooFit problems reported in the forum. More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which. was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:253,safety,depend,dependency,253,"[RF] Use more RooAbsReal in constructors of RooFit classes; Some RooFit classes used the RooRealVar or RooAbsRealLValue types for. some of their parameters in the constructor, which is not as flexible as. RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were. encountered when investigating RooFit problems reported in the forum. More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which. was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7325:253,testability,depend,dependency,253,"[RF] Use more RooAbsReal in constructors of RooFit classes; Some RooFit classes used the RooRealVar or RooAbsRealLValue types for. some of their parameters in the constructor, which is not as flexible as. RooRealVar because they are further down in the dependency hierachy. This commit sustitutes `RooRealVar` in for some of these cases that were. encountered when investigating RooFit problems reported in the forum. More precisely, I wanted to use a `RooFormulaVar` in a `RooDecay` which. was not possible before but now it is.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7325
https://github.com/root-project/root/pull/7326:14,availability,failur,failure,14,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:54,availability,error,error,54,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:14,deployability,fail,failure,14,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:83,deployability,contain,containing,83,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:140,deployability,fail,failed,140,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:14,performance,failur,failure,14,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:54,performance,error,error,54,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:148,performance,content,content,148,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:14,reliability,fail,failure,14,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:140,reliability,fail,failed,140,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:54,safety,error,error,54,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:4,testability,assert,assertion,4,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:130,testability,Assert,Assertion,130,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:54,usability,error,error,54,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7326:239,usability,User,Users,239,"Fix assertion failure on Windows; Fixes the following error on Windows with macros containing Windows line endings (CR/LF):. ```. Assertion failed: content[posOpenCurly] == '{' && ""No curly at claimed position of opening curly!"",. file C:\Users\bellenot\git\master\interpreter\cling\lib\MetaProcessor\MetaProcessor.cpp, line 431. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7326
https://github.com/root-project/root/pull/7327:218,energy efficiency,draw,drawing,218,"[eve7] let use with multi-threaded app, fix cleanup; If TApplication runs in special thread, one should call `RWebWindowManager::AssignMainThrd()` to indicate this. Correctly cleanup JS handlers to be able make new GL drawing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7327
https://github.com/root-project/root/pull/7327:20,performance,multi-thread,multi-threaded,20,"[eve7] let use with multi-threaded app, fix cleanup; If TApplication runs in special thread, one should call `RWebWindowManager::AssignMainThrd()` to indicate this. Correctly cleanup JS handlers to be able make new GL drawing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7327
https://github.com/root-project/root/pull/7327:150,usability,indicat,indicate,150,"[eve7] let use with multi-threaded app, fix cleanup; If TApplication runs in special thread, one should call `RWebWindowManager::AssignMainThrd()` to indicate this. Correctly cleanup JS handlers to be able make new GL drawing",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7327
https://github.com/root-project/root/pull/7328:11,deployability,Updat,Update,11,[builtins] Update xxhash to latest version: 0.8.0;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7328
https://github.com/root-project/root/pull/7328:35,deployability,version,version,35,[builtins] Update xxhash to latest version: 0.8.0;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7328
https://github.com/root-project/root/pull/7328:35,integrability,version,version,35,[builtins] Update xxhash to latest version: 0.8.0;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7328
https://github.com/root-project/root/pull/7328:35,modifiability,version,version,35,[builtins] Update xxhash to latest version: 0.8.0;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7328
https://github.com/root-project/root/pull/7328:11,safety,Updat,Update,11,[builtins] Update xxhash to latest version: 0.8.0;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7328
https://github.com/root-project/root/pull/7328:11,security,Updat,Update,11,[builtins] Update xxhash to latest version: 0.8.0;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7328
https://github.com/root-project/root/pull/7329:81,interoperability,platform,platforms,81,"[llvm] Prevent static destruction from ending DefaultMMapper too early:; On some platforms, SectionMemoryManager::MMapper has uses (during static. destruction) that happen after static destruction has ended the lifetime. of the DefaultMMapper object. Use of a function-static prevents this, as. this guarantees that SectionMemoryManager::DefaultMMapper gets destructed. after users, as long as users were constructed after. SectionMemoryManager::DefaultMMapper (which is generally the case), rather. than a random sequencing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7329
https://github.com/root-project/root/pull/7329:7,safety,Prevent,Prevent,7,"[llvm] Prevent static destruction from ending DefaultMMapper too early:; On some platforms, SectionMemoryManager::MMapper has uses (during static. destruction) that happen after static destruction has ended the lifetime. of the DefaultMMapper object. Use of a function-static prevents this, as. this guarantees that SectionMemoryManager::DefaultMMapper gets destructed. after users, as long as users were constructed after. SectionMemoryManager::DefaultMMapper (which is generally the case), rather. than a random sequencing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7329
https://github.com/root-project/root/pull/7329:276,safety,prevent,prevents,276,"[llvm] Prevent static destruction from ending DefaultMMapper too early:; On some platforms, SectionMemoryManager::MMapper has uses (during static. destruction) that happen after static destruction has ended the lifetime. of the DefaultMMapper object. Use of a function-static prevents this, as. this guarantees that SectionMemoryManager::DefaultMMapper gets destructed. after users, as long as users were constructed after. SectionMemoryManager::DefaultMMapper (which is generally the case), rather. than a random sequencing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7329
https://github.com/root-project/root/pull/7329:7,security,Preven,Prevent,7,"[llvm] Prevent static destruction from ending DefaultMMapper too early:; On some platforms, SectionMemoryManager::MMapper has uses (during static. destruction) that happen after static destruction has ended the lifetime. of the DefaultMMapper object. Use of a function-static prevents this, as. this guarantees that SectionMemoryManager::DefaultMMapper gets destructed. after users, as long as users were constructed after. SectionMemoryManager::DefaultMMapper (which is generally the case), rather. than a random sequencing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7329
https://github.com/root-project/root/pull/7329:276,security,preven,prevents,276,"[llvm] Prevent static destruction from ending DefaultMMapper too early:; On some platforms, SectionMemoryManager::MMapper has uses (during static. destruction) that happen after static destruction has ended the lifetime. of the DefaultMMapper object. Use of a function-static prevents this, as. this guarantees that SectionMemoryManager::DefaultMMapper gets destructed. after users, as long as users were constructed after. SectionMemoryManager::DefaultMMapper (which is generally the case), rather. than a random sequencing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7329
https://github.com/root-project/root/pull/7329:376,usability,user,users,376,"[llvm] Prevent static destruction from ending DefaultMMapper too early:; On some platforms, SectionMemoryManager::MMapper has uses (during static. destruction) that happen after static destruction has ended the lifetime. of the DefaultMMapper object. Use of a function-static prevents this, as. this guarantees that SectionMemoryManager::DefaultMMapper gets destructed. after users, as long as users were constructed after. SectionMemoryManager::DefaultMMapper (which is generally the case), rather. than a random sequencing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7329
https://github.com/root-project/root/pull/7329:394,usability,user,users,394,"[llvm] Prevent static destruction from ending DefaultMMapper too early:; On some platforms, SectionMemoryManager::MMapper has uses (during static. destruction) that happen after static destruction has ended the lifetime. of the DefaultMMapper object. Use of a function-static prevents this, as. this guarantees that SectionMemoryManager::DefaultMMapper gets destructed. after users, as long as users were constructed after. SectionMemoryManager::DefaultMMapper (which is generally the case), rather. than a random sequencing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7329
https://github.com/root-project/root/pull/7330:7,availability,repair,repair,7,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:14,deployability,log,logic,14,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:100,integrability,event,event,100,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:137,integrability,event,event,137,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:160,interoperability,specif,specific,160,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:7,reliability,repair,repair,7,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:14,safety,log,logic,14,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:14,security,log,logic,14,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:14,testability,log,logic,14,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:23,usability,mous,mouseup,23,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:94,usability,mous,mouse,94,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7330:131,usability,mous,mouse,131,[eve7] repair logic of mouseup handler [skip-ci]; Was corrupted by previous reorganization of mouse event handlers. Now assign all mouse event handlers only to specific dom element,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7330
https://github.com/root-project/root/pull/7331:34,availability,avail,available,34,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:11,deployability,Updat,Update,11,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:44,deployability,version,version,44,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:44,integrability,version,version,44,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:44,modifiability,version,version,44,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:34,reliability,availab,available,34,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:11,safety,Updat,Update,11,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:34,safety,avail,available,34,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:11,security,Updat,Update,11,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/pull/7331:34,security,availab,available,34,[builtins] Update Davix to latest available version: 0.7.6;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7331
https://github.com/root-project/root/issues/7332:393,deployability,API,API,393,"Improvements in TUnuran and ROOT::Math::DistSampler; As requested in https://root-forum.cern.ch/t/can-one-pass-dpdf-to-root-distsampler-for-unuran/43652, it would be nice to have the DistSampler class having th epossibility to pass Derivative of Pdf or CDF. . In addition it would be nice to pass Unuran methos specific parameters to Unuran methods. Now this is possible only using the string API",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:393,integrability,API,API,393,"Improvements in TUnuran and ROOT::Math::DistSampler; As requested in https://root-forum.cern.ch/t/can-one-pass-dpdf-to-root-distsampler-for-unuran/43652, it would be nice to have the DistSampler class having th epossibility to pass Derivative of Pdf or CDF. . In addition it would be nice to pass Unuran methos specific parameters to Unuran methods. Now this is possible only using the string API",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:311,interoperability,specif,specific,311,"Improvements in TUnuran and ROOT::Math::DistSampler; As requested in https://root-forum.cern.ch/t/can-one-pass-dpdf-to-root-distsampler-for-unuran/43652, it would be nice to have the DistSampler class having th epossibility to pass Derivative of Pdf or CDF. . In addition it would be nice to pass Unuran methos specific parameters to Unuran methods. Now this is possible only using the string API",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:393,interoperability,API,API,393,"Improvements in TUnuran and ROOT::Math::DistSampler; As requested in https://root-forum.cern.ch/t/can-one-pass-dpdf-to-root-distsampler-for-unuran/43652, it would be nice to have the DistSampler class having th epossibility to pass Derivative of Pdf or CDF. . In addition it would be nice to pass Unuran methos specific parameters to Unuran methods. Now this is possible only using the string API",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/issues/7332:320,modifiability,paramet,parameters,320,"Improvements in TUnuran and ROOT::Math::DistSampler; As requested in https://root-forum.cern.ch/t/can-one-pass-dpdf-to-root-distsampler-for-unuran/43652, it would be nice to have the DistSampler class having th epossibility to pass Derivative of Pdf or CDF. . In addition it would be nice to pass Unuran methos specific parameters to Unuran methods. Now this is possible only using the string API",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7332
https://github.com/root-project/root/pull/7335:11,deployability,Updat,Update,11,[builtins] Update builtin xrootd to 5.3.0 and move it to proper ROOT builtins;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,safety,Updat,Update,11,[builtins] Update builtin xrootd to 5.3.0 and move it to proper ROOT builtins;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7335:11,security,Updat,Update,11,[builtins] Update builtin xrootd to 5.3.0 and move it to proper ROOT builtins;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7335
https://github.com/root-project/root/pull/7336:48,deployability,patch,patch,48,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:173,deployability,patch,patch,173,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:204,performance,time,time,204,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:48,safety,patch,patch,48,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:143,safety,review,reviews,143,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:173,safety,patch,patch,173,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:48,security,patch,patch,48,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:173,security,patch,patch,173,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:143,testability,review,reviews,143,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7336:78,usability,tool,tools,78,Fix type printing of array template args; Apply patch to interpreter/llvm/src/tools/clang/lib/AST/TemplateBase.cpp as suggested here:. https://reviews.llvm.org/D36368. This patch has been in use for some time on the CMS fork of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7336
https://github.com/root-project/root/pull/7337:321,deployability,automat,automatically,321,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:54,modifiability,variab,variable,54,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:116,performance,time,time,116,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:32,safety,avoid,avoid,32,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:245,safety,avoid,avoid,245,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:321,testability,automat,automatically,321,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:126,usability,dialog,dialog,126,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:345,usability,dialog,dialog,345,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7337:352,usability,close,closed,352,"[gui] fix leak in TGFSComboBox, avoid usage of static variable; Initial problem - static array `gLbc`, filled every time file dialog created new with entries with `StrDup`. Was fixed with first commit. Then replace `char *` by `std::string` and avoid `StrDup`. And finally replace static array by `std::vector` - cleanup automatically when file dialog closed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7337
https://github.com/root-project/root/pull/7338:0,deployability,Instal,Install,0,Install the global module index.; This should fix the lcg nightlies and cmssw modules IB. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7338
https://github.com/root-project/root/pull/7338:19,deployability,modul,module,19,Install the global module index.; This should fix the lcg nightlies and cmssw modules IB. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7338
https://github.com/root-project/root/pull/7338:78,deployability,modul,modules,78,Install the global module index.; This should fix the lcg nightlies and cmssw modules IB. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7338
https://github.com/root-project/root/pull/7338:19,modifiability,modul,module,19,Install the global module index.; This should fix the lcg nightlies and cmssw modules IB. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7338
https://github.com/root-project/root/pull/7338:78,modifiability,modul,modules,78,Install the global module index.; This should fix the lcg nightlies and cmssw modules IB. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7338
https://github.com/root-project/root/pull/7338:19,safety,modul,module,19,Install the global module index.; This should fix the lcg nightlies and cmssw modules IB. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7338
https://github.com/root-project/root/pull/7338:78,safety,modul,modules,78,Install the global module index.; This should fix the lcg nightlies and cmssw modules IB. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7338
https://github.com/root-project/root/pull/7339:768,availability,avail,available,768,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:985,availability,slo,slow,985,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1030,availability,slo,slot,1030,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:342,deployability,version,version,342,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:507,deployability,version,version,507,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1393,deployability,contain,contains,1393,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1325,energy efficiency,Optim,Optimization,1325,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1780,energy efficiency,reduc,reduced,1780,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:6,integrability,Buffer,Buffer,6,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:342,integrability,version,version,342,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:507,integrability,version,version,507,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:602,integrability,event,events,602,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1404,integrability,coupl,couple,1404,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1668,integrability,queue,queue,1668,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:342,modifiability,version,version,342,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:507,modifiability,version,version,507,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1404,modifiability,coupl,couple,1404,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:181,performance,perform,performance,181,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:200,performance,parallel,parallel,200,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1112,performance,cach,caching,1112,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1325,performance,Optimiz,Optimization,1325,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1668,performance,queue,queue,1668,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1729,performance,parallel,parallelism,1729,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1750,performance,parallel,parallel,1750,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1796,performance,content,contention,1796,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1875,performance,time,time,1875,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:768,reliability,availab,available,768,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:985,reliability,slo,slow,985,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1030,reliability,slo,slot,1030,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:768,safety,avail,available,768,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1253,safety,input,input,1253,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1314,safety,input,input,1314,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1586,safety,safe,safe,1586,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:768,security,availab,available,768,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1404,testability,coupl,couple,1404,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:181,usability,perform,performance,181,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1253,usability,input,input,1253,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1314,usability,input,input,1314,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/pull/7339:1621,usability,stop,stop,1621,"v6.22 Buffer merger improvement; See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7339
https://github.com/root-project/root/issues/7340:15,availability,sli,slider,15,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/issues/7340:118,availability,error,errors-when-trying-to-fit-a-histogram,118,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/issues/7340:228,availability,sli,slider,228,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/issues/7340:118,performance,error,errors-when-trying-to-fit-a-histogram,118,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/issues/7340:15,reliability,sli,slider,15,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/issues/7340:228,reliability,sli,slider,228,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/issues/7340:118,safety,error,errors-when-trying-to-fit-a-histogram,118,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/issues/7340:118,usability,error,errors-when-trying-to-fit-a-histogram,118,When using the slider in Fit Panel we get Warnings; . ### Describe the bug. https://root-forum.cern.ch/t/bugs-in-tfit-errors-when-trying-to-fit-a-histogram/43789. ### To Reproduce. Open the fit Panel on a TH1 and move the range slider. ### Setup. On Mac.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7340
https://github.com/root-project/root/pull/7341:158,availability,avail,available,158,"[ntuple] Fix reading of untyped collections; Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7341:158,reliability,availab,available,158,"[ntuple] Fix reading of untyped collections; Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7341:158,safety,avail,available,158,"[ntuple] Fix reading of untyped collections; Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7341:158,security,availab,available,158,"[ntuple] Fix reading of untyped collections; Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7341:174,testability,simpl,simplifies,174,"[ntuple] Fix reading of untyped collections; Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7341:93,usability,help,helper,93,"[ntuple] Fix reading of untyped collections; Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7341:174,usability,simpl,simplifies,174,"[ntuple] Fix reading of untyped collections; Along the way, this PR removes the `RFieldFuse` helper class. Instead, the RField class knows its field ID where available. This simplifies connecting fields to a page storage and gives the process more flexibility. The PR also adds an `RRecordField` for untyped `struct`s. @mxxo That should fix the problem you saw with NanoAOD printing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7341
https://github.com/root-project/root/pull/7342:161,availability,error,error,161,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:216,availability,error,error,216,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:161,performance,error,error,161,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:216,performance,error,error,216,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:161,safety,error,error,161,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:216,safety,error,error,216,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:72,security,expos,expose,72,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:161,usability,error,error,161,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7342:216,usability,error,error,216,"Remove the __type_info_node symbol from the exports list; Don't export (expose) the '?__type_info_root_node@@3U__type_info_node@@A', this leads to the following error in some cases:. ```. MSVCRT.lib(tncleanup.obj) : error LNK2005: ""struct __type_info_node __type_info_root_node"" (?__type_info_root_node@@3U__type_info_node@@A) already defined in libCling.lib(libCling.dll). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7342
https://github.com/root-project/root/pull/7343:8,modifiability,Exten,Extend,8,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:143,modifiability,exten,extended,143,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:91,reliability,doe,does,91,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7343:232,safety,valid,valid,232,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7343
https://github.com/root-project/root/pull/7344:747,deployability,observ,observed,747,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:70,integrability,batch,batched,70,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:759,integrability,batch,batch,759,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1119,integrability,batch,batch,1119,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:457,modifiability,paramet,parameter,457,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:543,modifiability,paramet,parameter,543,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:874,modifiability,interm,intermediate,874,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1096,modifiability,interm,intermediate,1096,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:70,performance,batch,batched,70,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:122,performance,cach,cached,122,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:363,performance,cach,cached,363,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:571,performance,time,time,571,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:759,performance,batch,batch,759,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1119,performance,batch,batch,1119,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:5,safety,Avoid,Avoid,5,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:190,safety,compl,completely,190,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:190,security,compl,completely,190,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:820,security,sign,significant,820,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:747,testability,observ,observed,747,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:11,usability,clear,clearing,11,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:201,usability,clear,cleared,201,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/pull/7344:1086,usability,clear,clear,1086,"[RF] Avoid clearing full RunContext after each NLL evaluation; In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7344
https://github.com/root-project/root/issues/7345:590,availability,error,errors,590,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1713,availability,Error,Error,1713,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1733,availability,error,error,1733,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1887,availability,avail,available,1887,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:6,deployability,build,building,6,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:542,deployability,build,building,542,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:565,deployability,fail,fails,565,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1697,deployability,instal,install,1697,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1777,deployability,INSTAL,INSTALL,1777,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1840,deployability,instal,install,1840,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1878,deployability,instal,install,1878,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2187,deployability,build,build,2187,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2258,deployability,contain,container,2258,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2302,deployability,build,build,2302,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2422,deployability,Instal,Installing,2422,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2442,deployability,version,version,2442,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:500,integrability,configur,configuring,500,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1739,integrability,messag,message,1739,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2442,integrability,version,version,2442,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1739,interoperability,messag,message,1739,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:500,modifiability,configur,configuring,500,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1796,modifiability,variab,variable,1796,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2442,modifiability,version,version,2442,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:590,performance,error,errors,590,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1713,performance,Error,Error,1713,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1733,performance,error,error,1733,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:565,reliability,fail,fails,565,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1887,reliability,availab,available,1887,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:590,safety,error,errors,590,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1713,safety,Error,Error,1713,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1733,safety,error,error,1733,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1887,safety,avail,available,1887,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2141,safety,input,input,2141,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:500,security,configur,configuring,500,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1887,security,availab,available,1887,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2356,testability,context,context,2356,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2385,testability,context,context,2385,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:429,usability,clear,clear,429,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:477,usability,behavi,behavior,477,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:590,usability,error,errors,590,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:626,usability,command,command,626,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:667,usability,command,command,667,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:708,usability,command,command,708,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:749,usability,command,command,749,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:790,usability,command,command,790,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:831,usability,command,command,831,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:872,usability,command,command,872,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:913,usability,command,command,913,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:954,usability,command,command,954,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:995,usability,command,command,995,"Issue building built-in libafterimage; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the beha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1036,usability,command,command,1036," [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1077,usability,command,command,1077," search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1118,usability,command,command,1118,"/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1159,usability,command,command,1159,"* AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1200,usability,command,command,1200,"/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1241,usability,command,command,1241,"ing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1282,usability,command,command,1282,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1323,usability,command,command,1323,"sting report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1364,usability,command,command,1364,"xists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1405,usability,command,command,1405,"be the bug. <!--. A clear and concise description of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the proble",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1446,usability,command,command,1446,"cription of what the wrong behavior is. -->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1487,usability,command,command,1487,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1528,usability,command,command,1528,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1569,usability,command,command,1569,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1649,usability,command,command,1649,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1713,usability,Error,Error,1713,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1733,usability,error,error,1733,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1756,usability,indicat,indicate,1756,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:1996,usability,behavi,behavior,1996,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/issues/7345:2141,usability,input,input,2141,"-->. When configuring ROOT with builtin_afterimage, building libAfterImage fails with the following errors:. ```. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. /bin/sh: line 30: -m: command not found. gmake[3]: m: No such file or directory. /bin/sh: line 2: -m: command not found. gmake[3]: *** [Makefile:145: install.static] Error 127. ```. The error message seems to indicate that the `${INSTALL}` makefile variable expands to nothing rather than to `install` as it should, but I do have `install` available on my system. This happens both on Fedora and Arch. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Probably just start a Docker container with Arch or Fedora 33 and try to build ROOT with builtin_libafterimage. ### Additional context. <!--. Add any other context about the problem here. -->. Installing a system version of libafterimage works around the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7345
https://github.com/root-project/root/pull/7346:136,availability,error,error,136,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:18,deployability,build,building,18,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:130,deployability,build,build,130,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:212,deployability,version,version,212,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:439,deployability,version,version,439,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:479,deployability,version,version,479,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:212,integrability,version,version,212,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:424,integrability,Pub,Public,424,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:439,integrability,version,version,439,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:479,integrability,version,version,479,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:212,modifiability,version,version,212,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:439,modifiability,version,version,439,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:479,modifiability,version,version,479,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:136,performance,error,error,136,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:136,safety,error,error,136,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:53,usability,command,command,53,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7346:136,usability,error,error,136,"Fix libAfterImage building; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a. . Fixing build error on latest OpenSUSE. Most probably caused by latest `ar`:. ```. % ar --version. GNU ar (GNU Binutils; openSUSE Tumbleweed) 2.36.0.20210204-1. Copyright (C) 2021 Free Software Foundation, Inc. This program is free software; you may redistribute it under the terms of. the GNU General Public License version 3 or (at your option) any later version. This program has absolutely no warranty. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7346
https://github.com/root-project/root/pull/7347:446,availability,error,error,446,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:273,energy efficiency,current,current,273,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:323,integrability,event,event,323,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:452,integrability,messag,message,452,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:452,interoperability,messag,message,452,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:253,modifiability,variab,variables,253,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:446,performance,error,error,446,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:233,safety,avoid,avoid,233,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:446,safety,error,error,446,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:303,security,ident,identical,303,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7347:446,usability,error,error,446,"[RF] Do not import data in a RooDataSet if some branches are missing.; When importing data from a TTree in a RooDataSet, if some of the branches are not existing in the Tree . do not import any data and make an empty dataset. . This avoid importing the variables using the current values, which will be identical for every event. This fixes ROOT-5112. After https://github.com/root-project/root/commit/b5c2fb7909fbd1e483a3e17b21d24093409d67c1 an error message was printed, but this can pass easly unnoticed. . If one needs to add ad-hoc some column to the dataset, it is also very easy to add branches to a TTree, using RDataFrame. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7347
https://github.com/root-project/root/pull/7348:13,deployability,Instal,Install,13,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:24,deployability,modul,modulemap,24,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:65,deployability,instal,install,65,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:156,deployability,build,build,156,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:299,deployability,modul,modulemap,299,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:366,deployability,build,build,366,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:383,deployability,modul,modules,383,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:453,deployability,patch,patch,453,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:511,deployability,upgrad,upgrade,511,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:541,deployability,modul,module,541,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:440,interoperability,share,shared,440,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:24,modifiability,modul,modulemap,24,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:299,modifiability,modul,modulemap,299,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:383,modifiability,modul,modules,383,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:407,modifiability,responsibil,responsibility,407,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:511,modifiability,upgrad,upgrade,511,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:541,modifiability,modul,module,541,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:169,reliability,doe,does,169,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:267,reliability,doe,does,267,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:24,safety,modul,modulemap,24,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:299,safety,modul,modulemap,299,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:383,safety,modul,modules,383,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:453,safety,patch,patch,453,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:541,safety,modul,module,541,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7348:453,security,patch,patch,453,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where we also added a module for Vc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7348
https://github.com/root-project/root/pull/7349:8,modifiability,Exten,Extend,8,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7349
https://github.com/root-project/root/pull/7349:143,modifiability,exten,extended,143,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7349
https://github.com/root-project/root/pull/7349:91,reliability,doe,does,91,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7349
https://github.com/root-project/root/pull/7349:232,safety,valid,valid,232,"[cling] Extend lifetime of SectionMemoryManager::DefaultMMapper, again:; A function-static does not guarantee the lifetime to be sufficiently. extended - at least on CentOS7. Use a unique_ptr which guarantees the. reference to stay valid for as long as the referencee is alive. Fixes crash at exit on CentOS7. (cherry picked from commit 80c14bb948df53d54596cbbabe725e6ef0acc8e8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7349
https://github.com/root-project/root/pull/7350:346,availability,failur,failures,346,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:139,deployability,modul,modules,139,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:346,deployability,fail,failures,346,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:51,integrability,messag,message,51,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:51,interoperability,messag,message,51,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:139,modifiability,modul,modules,139,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:346,performance,failur,failures,346,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:346,reliability,fail,failures,346,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:106,safety,safe,safe,106,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:139,safety,modul,modules,139,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:417,safety,review,reviews,417,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7350:417,testability,review,reviews,417,Bump the preallocated items more.; Original commit message:. The Sema::LookupConstructor is not iteration safe. When looking up a ctor the modules infrasturcture deserializes more ctor. candidates in the body of the function causing the internal vector implementation. to rellocate and invalidate the pointers. This workaround should address the failures reported by LCG. The real fix is being processed here https://reviews.llvm.org/D91524 and we. after being merged we should be able to backport it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7350
https://github.com/root-project/root/pull/7352:26,usability,mous,mouse,26,"TGHtml: clicking on right mouse button saves as HTML file; This enables a new future when right-clicking, to store the HTML code within the TGHtml as a an html file, selected via filedialog.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7352
https://github.com/root-project/root/pull/7353:140,usability,indicat,indicate,140,"[webgui] let reassign main thread id [6.22]; If application runs in special thread, one should. call RWebWindowManager::AssignMainThrd() to indicate this",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7353
https://github.com/root-project/root/pull/7354:322,availability,error,error,322,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:574,integrability,filter,filter,574,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:201,modifiability,variab,variable,201,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:322,performance,error,error,322,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:730,performance,Cach,Cache,730,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:784,performance,Cach,Cache,784,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:843,performance,Cach,Cache,843,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:431,reliability,pra,pragma,431,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:270,safety,test,test,270,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:322,safety,error,error,322,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:822,safety,test,test,822,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:1034,safety,except,exception,1034,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:270,testability,test,test,270,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:822,testability,test,test,822,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:94,usability,efficien,efficient,94,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:275,usability,interact,interaction,275,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:322,usability,error,error,322,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:707,usability,user,user,707,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:744,usability,document,document,744,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:753,usability,interact,interaction,753,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7354:827,usability,interact,interaction,827,"[DF] Allow `#var` as an alias for `__rdf_sizeof_var` ; Data sources such as RNTuple that have efficient ways to get the. size of a collection can recognize the `__rdf_sizeof_` prefix and. connect that variable to the column representing the size of `var`. To do:. - [x] test interaction of `#var` and `Alias`. - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment). - [x] do not expand `#define`, `#pragma` and other preprocessor directives. - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out). - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user). - [x] same for `Cache`. - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns. - [x] test interaction of `Cache` and `#var`. - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7354
https://github.com/root-project/root/pull/7355:20,deployability,depend,depending,20,[DF] Veto tutorials depending on davix when it is not present;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7355
https://github.com/root-project/root/pull/7355:20,integrability,depend,depending,20,[DF] Veto tutorials depending on davix when it is not present;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7355
https://github.com/root-project/root/pull/7355:20,modifiability,depend,depending,20,[DF] Veto tutorials depending on davix when it is not present;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7355
https://github.com/root-project/root/pull/7355:20,safety,depend,depending,20,[DF] Veto tutorials depending on davix when it is not present;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7355
https://github.com/root-project/root/pull/7355:20,testability,depend,depending,20,[DF] Veto tutorials depending on davix when it is not present;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7355
https://github.com/root-project/root/pull/7357:94,availability,error,error,94,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7357:63,deployability,version,versions,63,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7357:63,integrability,version,versions,63,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7357:154,interoperability,distribut,distributions,154,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7357:63,modifiability,version,versions,63,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7357:94,performance,error,error,94,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7357:94,safety,error,error,94,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7357:94,usability,error,error,94,[asimage] set screen gamma to SCREEN_GAMMA; With latest libpng versions value 0 recognized as error and. produced results are wrong. Mean on newest Linux distributions one get problem to use TASImage class,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7357
https://github.com/root-project/root/pull/7358:26,usability,support,supported,26,"[webgui] mark TASImage as supported class in RBrowser; Let show images, stored in ROOT file, in TWebCanvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7358
https://github.com/root-project/root/pull/7359:112,availability,error,error,112,"[asimage] set screen gamma to SCREEN_GAMMA, backport to 6.24; With latest libpng versions value 0 recognized as error and. produced results are wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/pull/7359:81,deployability,version,versions,81,"[asimage] set screen gamma to SCREEN_GAMMA, backport to 6.24; With latest libpng versions value 0 recognized as error and. produced results are wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/pull/7359:81,integrability,version,versions,81,"[asimage] set screen gamma to SCREEN_GAMMA, backport to 6.24; With latest libpng versions value 0 recognized as error and. produced results are wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/pull/7359:81,modifiability,version,versions,81,"[asimage] set screen gamma to SCREEN_GAMMA, backport to 6.24; With latest libpng versions value 0 recognized as error and. produced results are wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/pull/7359:112,performance,error,error,112,"[asimage] set screen gamma to SCREEN_GAMMA, backport to 6.24; With latest libpng versions value 0 recognized as error and. produced results are wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/pull/7359:112,safety,error,error,112,"[asimage] set screen gamma to SCREEN_GAMMA, backport to 6.24; With latest libpng versions value 0 recognized as error and. produced results are wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/pull/7359:112,usability,error,error,112,"[asimage] set screen gamma to SCREEN_GAMMA, backport to 6.24; With latest libpng versions value 0 recognized as error and. produced results are wrong",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7359
https://github.com/root-project/root/pull/7360:18,deployability,build,building,18,"Fix libAfterImage building, backport to 6.24; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7360
https://github.com/root-project/root/pull/7360:71,usability,command,command,71,"Fix libAfterImage building, backport to 6.24; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7360
https://github.com/root-project/root/issues/7361:204,availability,avail,available,204,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:267,availability,down,down,267,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:498,deployability,releas,release,498,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:597,deployability,releas,release,597,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:780,deployability,build,builds,780,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:152,energy efficiency,load,loaded,152,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:299,energy efficiency,load,loaded,299,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:798,energy efficiency,optim,optimal,798,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:33,interoperability,specif,specific,33,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:42,interoperability,architectur,architecture,42,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:276,interoperability,specif,specific,276,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:338,interoperability,specif,specifically,338,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:920,interoperability,share,share,920,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:677,modifiability,variab,variable,677,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:152,performance,load,loaded,152,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:299,performance,load,loaded,299,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:204,reliability,availab,available,204,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:204,safety,avail,available,204,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:377,safety,valid,validated,377,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:761,safety,Prevent,Preventing,761,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:204,security,availab,available,204,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:377,security,validat,validated,377,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:439,security,expos,expose,439,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:761,security,Preven,Preventing,761,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:888,testability,context,context,888,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:227,usability,user,users,227,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:482,usability,document,documentation,482,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7361:611,usability,usab,usable,611,"RooFit backend library: force to specific architecture; ### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to. - [ ] have a mechanism for this. - [ ] expose the mechanism, for instance through documentation / release notes. - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7361
https://github.com/root-project/root/issues/7362:705,availability,error,error,705,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1038,availability,Error,Error,1038," for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1097,availability,failur,failure,1097,"etting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1276,availability,Error,Error,1276," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1373,availability,Error,Error,1373," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:12,deployability,build,build,12,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:91,deployability,updat,update,91,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:138,deployability,build,builds,138,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:210,deployability,build,build,210,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:352,deployability,fail,fails,352,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:452,deployability,build,build,452,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:527,deployability,build,build,527,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:609,deployability,build,build,609,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:659,deployability,build,build,659,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:712,deployability,modul,module,712,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:737,deployability,build,build,737,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:856,deployability,build,build,856,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:914,deployability,modul,module,914,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:942,deployability,build,build,942,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1057,deployability,build,build,1057,"# Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1097,deployability,fail,failure,1097,"etting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1118,deployability,build,build,1118,"incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1229,deployability,build,build,1229," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1646,deployability,build,build,1646," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:2050,deployability,fail,failed,2050," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1717,energy efficiency,Cpu,Cpu,1717," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:2085,energy efficiency,core,core,2085," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:813,interoperability,mismatch,mismatch,813,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:712,modifiability,modul,module,712,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:914,modifiability,modul,module,914,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:705,performance,error,error,705,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1038,performance,Error,Error,1038," for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1097,performance,failur,failure,1097,"etting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1276,performance,Error,Error,1276," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1373,performance,Error,Error,1373," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1697,performance,Time,Time,1697," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1717,performance,Cpu,Cpu,1717," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1721,performance,Time,Time,1721," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:352,reliability,fail,fails,352,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1097,reliability,fail,failure,1097,"etting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1828,reliability,Diagno,Diagnostic,1828," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1854,reliability,Diagno,DiagnosticBuilder,1854," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1879,reliability,Diagno,DiagnosticsEngine,1879," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:2017,reliability,diagno,diagnostics,2017," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:2050,reliability,fail,failed,2050," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:91,safety,updat,update,91,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:705,safety,error,error,705,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:712,safety,modul,module,712,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:914,safety,modul,module,914,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:988,safety,test,testInterpreterLock,988,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1029,safety,test,testImt,1029," Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1038,safety,Error,Error,1038," for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1276,safety,Error,Error,1276," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1373,safety,Error,Error,1373," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1473,safety,compl,complete,1473," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:91,security,updat,update,91,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:803,security,sign,signature,803,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1473,security,compl,complete,1473," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:988,testability,test,testInterpreterLock,988,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1029,testability,test,testImt,1029," Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1828,testability,Diagno,Diagnostic,1828," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1854,testability,Diagno,DiagnosticBuilder,1854," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1879,testability,Diagno,DiagnosticsEngine,1879," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1943,testability,Assert,Assertion,1943," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:2017,testability,diagno,diagnostics,2017," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:705,usability,error,error,705,"Incremental build problems; - [x] Checked for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1038,usability,Error,Error,1038," for duplicates. ### Describe the bug. After llvm update I getting problem with incremental ROOT builds. For instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1276,usability,Error,Error,1276," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1373,usability,Error,Error,1373," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1448,usability,command,command,1448," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/issues/7362:1796,usability,tool,tools,1796," instance, I trying to rebuild libAfterImage by executing in build directory:. ```. rm -rf AFTERIMAGE-prefix lib/libAfterImage.a lib/libASImage.so . ```. libAfterImage.a is rebuild, but ROOT compilation fails at the point:. ```. In file included from input_line_10:3:. In file included from /home/linev/build/webgui/include/Fit/BasicFCN.h:18:. In file included from /home/linev/build/webgui/include/Math/IParamFunction.h:20:. In file included from /home/linev/build/webgui/include/Math/Util.h:28:. /home/linev/build/webgui/include/Math/Types.h:19:2: fatal error: module file '/home/linev/build/webgui/lib/std.pcm' is out of date and needs to be rebuilt: signature mismatch. #include <Vc/Vc>. ^. /home/linev/build/webgui/include/Math/Types.h:19:2: note: imported by module 'Vc' in '/home/linev/build/webgui/lib/Vc.pcm'. [ 74%] Built target testInterpreterLock. [ 74%] Built target testImt. Error: /home/linev/build/webgui/bin/rootcling: compilation failure (/home/linev/build/webgui/lib/libMathCorecc902379ff_dictUmbrella.h). make[2]: *** [math/mathcore/CMakeFiles/G__MathCore.dir/build.make:260: math/mathcore/G__MathCore.cxx] Error 1. make[1]: *** [CMakeFiles/Makefile2:31016: math/mathcore/CMakeFiles/G__MathCore.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... ```. If I call cmake command directly, it may complete to the end, but then ROOT has problems executing hsimple.C. ```. % root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q (04.03. 14:31:36) !10127 . Processing /home/linev/build/webgui/tutorials/hsimple.C... hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds. root.exe: /home/linev/git/webgui/interpreter/llvm/src/tools/clang/include/clang/Basic/Diagnostic.h:1299: clang::DiagnosticBuilder clang::DiagnosticsEngine::Report(clang::SourceLocation, unsigned int): Assertion `CurDiagID == std::numeric_limits<unsigned>::max() && ""Multiple diagnostics in flight at once!""' failed. [1] 25284 IOT instruction (core dumped) root.exe -l -b $ROOTSYS/tutorials/hsimple.C -q. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7362
https://github.com/root-project/root/pull/7363:26,usability,support,supported,26,"[webgui] mark TASImage as supported class in RBrowser, backport 6.24; Let show images, stored in ROOT file, in TWebCanvas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7363
https://github.com/root-project/root/pull/7364:42,energy efficiency,load,loading,42,[TChain] Do not try to look up index when loading non-existing entries; Fixes ROOT-5464.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7364
https://github.com/root-project/root/pull/7364:42,performance,load,loading,42,[TChain] Do not try to look up index when loading non-existing entries; Fixes ROOT-5464.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7364
https://github.com/root-project/root/pull/7365:281,availability,down,down,281,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:1,deployability,modul,modules,1,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:575,deployability,modul,modules,575,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:1,modifiability,modul,modules,1,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:575,modifiability,modul,modules,575,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:1,safety,modul,modules,1,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:344,safety,review,reviews,344,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:486,safety,Review,Reviewed,486,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:538,safety,review,reviews,538,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:575,safety,modul,modules,575,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:344,testability,review,reviews,344,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:486,testability,Review,Reviewed,486,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/pull/7365:538,testability,review,reviews,538,"[modules] Fix crash in call to `FunctionDecl::setPure()`; In some cases, when deserializing a `CXXMethodDecl` of a `CXXSpecializationTemplateDecl`,. the call to `FunctionDecl::setPure()` happens before the `DefinitionData` member has been. populated (which appears to happen lower down in a `mergeRedeclarable` call), causing a. crash (https://reviews.llvm.org/P8228). This diff fixes this by deferring the `FunctionDecl::setPure()` till after the `DefinitionData` has. been filled in. Reviewed By: lxfind. Differential Revision: https://reviews.llvm.org/D86853. Fixes cmssw modules IB. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7365
https://github.com/root-project/root/issues/7366:670,availability,failur,failures,670,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:707,availability,failur,failure,707,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:777,availability,error,errors,777,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1206,availability,error,error,1206,"s?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1255,availability,error,error,1255,"n.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1295,availability,Error,Error,1295," for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3982,availability,Operat,Operating,3982,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4057,availability,down,download,4057,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4245,availability,failur,failure,4245,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:558,deployability,Build,Building,558,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:670,deployability,fail,failures,670,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:707,deployability,fail,failure,707,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:952,deployability,build,build,952,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1041,deployability,build,build,1041," with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1104,deployability,version,version,1104,"Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1162,deployability,build,build,1162,"](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1348,deployability,build,build,1348," you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1557,deployability,build,build,1557,"ilding ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1610,deployability,build,build,1610,"""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1645,deployability,build,build,1645,"sults in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1686,deployability,build,build,1686," various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1725,deployability,build,build,1725,"command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1763,deployability,build,build,1763,"se kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1827,deployability,build,build,1827,"ottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1929,deployability,build,build,1929,"/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2123,deployability,build,build,2123,"9: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2166,deployability,build,build,2166,"oottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2381,deployability,build,build,2381," -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2423,deployability,build,build,2423,"licit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2468,deployability,build,build,2468," -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""ha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2584,deployability,build,build,2584,"-I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2631,deployability,build,build,2631,"opezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at leas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2673,deployability,build,build,2673,"pezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run our",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2721,deployability,build,build,2721,"/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2873,deployability,build,build,2873,"iC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2943,deployability,build,build,2943,"ot/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:2993,deployability,build,build,2993," ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating syst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3040,deployability,build,build,3040,"ib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3081,deployability,build,build,3081,"lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it you",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3144,deployability,build,build,3144,"home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3179,deployability,fail,failed,3179,"e.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3332,deployability,manag,manage,3332,"r/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3769,deployability,build,build,3769,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3886,deployability,contain,container,3886,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3970,deployability,version,version,3970,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4039,deployability,instal,install,4039,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4159,deployability,build,building,4159,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4209,deployability,instal,installing,4209,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4245,deployability,fail,failure,4245,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3332,energy efficiency,manag,manage,3332,"r/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1104,integrability,version,version,1104,"Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3825,integrability,repositor,repository,3825,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3970,integrability,version,version,3970,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:50,interoperability,share,shared,50,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:917,interoperability,share,shared,917,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1990,interoperability,share,shared,1990,"ot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3825,interoperability,repositor,repository,3825,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1104,modifiability,version,version,1104,"Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3970,modifiability,version,version,3970,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:670,performance,failur,failures,670,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:707,performance,failur,failure,707,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:777,performance,error,errors,777,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1206,performance,error,error,1206,"s?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1255,performance,error,error,1255,"n.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1295,performance,Error,Error,1295," for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3416,performance,concurren,concurrently,3416,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4245,performance,failur,failure,4245,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:670,reliability,fail,failures,670,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:707,reliability,fail,failure,707,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3179,reliability,fail,failed,3179,"e.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/libz.so.1"" ""/usr/lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4245,reliability,fail,failure,4245,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:665,safety,test,test,665,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:777,safety,error,errors,777,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1206,safety,error,error,1206,"s?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1255,safety,error,error,1255,"n.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1295,safety,Error,Error,1295," for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3310,safety,valid,valid,3310,"lib/libzstd.so.1"" ""/usr/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without probl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3332,safety,manag,manage,3332,"r/lib/libnss_files.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3410,safety,test,tests,3410,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3462,safety,test,tests,3462,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3723,safety,input,input,3723,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4294,safety,test,tests,4294,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:665,testability,test,test,665,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3410,testability,test,tests,3410,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3462,testability,test,tests,3462,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:4294,testability,test,tests,4294,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:492,usability,clear,clear,492,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:540,usability,behavi,behavior,540,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:728,usability,command,command,728,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:777,usability,error,errors,777,"ACLiC compilation confuses compiled binaries with shared objects, breaking compilation in some cases; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1206,usability,error,error,1206,"s?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1255,usability,error,error,1255,"n.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1281,usability,statu,status,1281,"ect %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:1295,usability,Error,Error,1295," for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Building ROOT on Arch Linux and then running `ctest -R ""(dataframe|datasource)"" -- -j8` results in several test failures. There are various possible failure modes -- the command above typically results in these kind of errors:. ```. 1369: Processing /home/jalopezg/CERN/roottest/root/dataframe/test_snapshot.C+... 1369: Info in <TUnixSystem::ACLiC>: creating shared library /home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so. 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: _ZSt4cout: invalid version 6 (max 0). 1369: /usr/bin/ld: /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc: error adding symbols: bad value. 1369: collect2: error: ld returned 1 exit status. 1369: Error in <ACLiC>: Executing 'cd ""/home/jalopezg/CERN/build/roottest/root/dataframe"" ; c++ -fPIC -c -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I/home/jalopezg/CERN/build/roottest/root/dataframe -I""/home/jalopezg/CERN/build/etc/"" -I""/home/jalopezg/CERN/build/etc//cling"" -I""/home/jalopezg/CERN/build/include/"" -I""/home/jalopezg/CERN/build/include"" -I""/home/jalopezg/CERN/build/roottest/root/dataframe"" -D__ACLIC__ ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C_ACLiC_dict.o"" -shared ""/usr/lib/libdl.so"" ""/usr/lib/libc.so"" ""/usr/lib/libgcc_s.so"" ""/usr/lib/libm.so"" ""/usr/lib/libstdc++.so"" ""/home/jalopezg/CERN/build/lib/libRint.so"" ""/home/jalopezg/CERN/build/lib/libCore.so"" ""/usr/lib/libpthread.so.0"" ""/usr/lib/libpcre.so.1"" ""/usr/lib/liblzma.so.5"" ""/usr/lib/liblz4.so.1"" ""/usr/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3578,usability,behavi,behavior,3578,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/issues/7366:3723,usability,input,input,3723,"es.so.2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed! 1369: terminate called after throwing an instance of 'std::logic_error'. 1369: what(): basic_string::_M_construct null not valid. ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7366
https://github.com/root-project/root/pull/7367:42,energy efficiency,load,loading,42,[TChain] Do not try to look up index when loading non-existing entries (v6.24); Fixes ROOT-5464.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7367
https://github.com/root-project/root/pull/7367:42,performance,load,loading,42,[TChain] Do not try to look up index when loading non-existing entries (v6.24); Fixes ROOT-5464.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7367
https://github.com/root-project/root/pull/7368:146,deployability,build,build,146,[cmake] Gracefully fall back to C++11 if compiler default is undetected; This works around an issue for which @guitargeek could not configure his build properly (thanks for double-checking) -- and in general provides a nicer behavior.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7368
https://github.com/root-project/root/pull/7368:132,integrability,configur,configure,132,[cmake] Gracefully fall back to C++11 if compiler default is undetected; This works around an issue for which @guitargeek could not configure his build properly (thanks for double-checking) -- and in general provides a nicer behavior.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7368
https://github.com/root-project/root/pull/7368:132,modifiability,configur,configure,132,[cmake] Gracefully fall back to C++11 if compiler default is undetected; This works around an issue for which @guitargeek could not configure his build properly (thanks for double-checking) -- and in general provides a nicer behavior.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7368
https://github.com/root-project/root/pull/7368:132,security,configur,configure,132,[cmake] Gracefully fall back to C++11 if compiler default is undetected; This works around an issue for which @guitargeek could not configure his build properly (thanks for double-checking) -- and in general provides a nicer behavior.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7368
https://github.com/root-project/root/pull/7368:225,usability,behavi,behavior,225,[cmake] Gracefully fall back to C++11 if compiler default is undetected; This works around an issue for which @guitargeek could not configure his build properly (thanks for double-checking) -- and in general provides a nicer behavior.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7368
https://github.com/root-project/root/pull/7369:13,integrability,rout,routing,13,Eve-7 Enable routing to table views; This change can be tested only in collection_proxies.C demo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7369
https://github.com/root-project/root/pull/7369:56,safety,test,tested,56,Eve-7 Enable routing to table views; This change can be tested only in collection_proxies.C demo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7369
https://github.com/root-project/root/pull/7369:56,testability,test,tested,56,Eve-7 Enable routing to table views; This change can be tested only in collection_proxies.C demo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7369
https://github.com/root-project/root/pull/7370:263,availability,error,error,263,"prevent crash when TPython::Import is called in standalone projects; from a standalone C++ project including ROOTTPython libs. Side note:. Is there any way to make TPython work outside ROOT, in a C++ project? `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7370
https://github.com/root-project/root/pull/7370:263,performance,error,error,263,"prevent crash when TPython::Import is called in standalone projects; from a standalone C++ project including ROOTTPython libs. Side note:. Is there any way to make TPython work outside ROOT, in a C++ project? `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7370
https://github.com/root-project/root/pull/7370:0,safety,prevent,prevent,0,"prevent crash when TPython::Import is called in standalone projects; from a standalone C++ project including ROOTTPython libs. Side note:. Is there any way to make TPython work outside ROOT, in a C++ project? `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7370
https://github.com/root-project/root/pull/7370:263,safety,error,error,263,"prevent crash when TPython::Import is called in standalone projects; from a standalone C++ project including ROOTTPython libs. Side note:. Is there any way to make TPython work outside ROOT, in a C++ project? `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7370
https://github.com/root-project/root/pull/7370:0,security,preven,prevent,0,"prevent crash when TPython::Import is called in standalone projects; from a standalone C++ project including ROOTTPython libs. Side note:. Is there any way to make TPython work outside ROOT, in a C++ project? `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7370
https://github.com/root-project/root/pull/7370:263,usability,error,error,263,"prevent crash when TPython::Import is called in standalone projects; from a standalone C++ project including ROOTTPython libs. Side note:. Is there any way to make TPython work outside ROOT, in a C++ project? `TPython::Exec(""import numpy"");`. returns `kTRUE` (no error). but the result is a `_Py_NoneStruct`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7370
https://github.com/root-project/root/pull/7371:35,deployability,build,build,35,Add distributed RDataFrame pyspark build option;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7371
https://github.com/root-project/root/pull/7371:4,interoperability,distribut,distributed,4,Add distributed RDataFrame pyspark build option;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7371
https://github.com/root-project/root/issues/7372:856,availability,Operat,Operating,856,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:839,deployability,version,version,839,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:950,deployability,stack,stackoverflow,950,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:1035,deployability,stack,stackoverflow,1035,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:839,integrability,version,version,839,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:839,modifiability,version,version,839,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:285,reliability,doe,does,285,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:343,reliability,doe,does,343,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:914,testability,context,context,914,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:380,usability,behavi,behavior,380,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/issues/7372:934,usability,help,helps,934,"TPython not redirecting stdout and stderr to IDE's stderr and stdout; ### Describe the bug. When executed in a ROOT console or on a normal terminal, TPython::Exec( ""print \'Hello World!\'"" );. prints correctly to stderr and stdout of the terminal. When executed in QtCreator's IDE, it does not. If one selects the option 'run in terminal', it does print it corretly. ### Expected behavior. sys.stderr and sys.stdout are forwarded to the QtCreators IDE's stderr and stdout if not being run on terminal. ### To Reproduce. 1. Open a ROOT terminal and call TPython::Exec( ""print \'Hello World!\'"" );. 2. Create a standalone C++ program with CMake, open with QtCreator and call the same function. 3. In this same standalone C++ program, you can write std::cout and std::cerr, and those are correctly shown in the IDE window. ### Setup. 1. ROOT version 6.23. 2. Operating system Ubuntu 18. 3. Self-built. ### Additional context. Maybe this helps:. https://stackoverflow.com/questions/46632488/how-to-catch-python-3-stdout-in-c-code. https://stackoverflow.com/a/8335297/7471760",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7372
https://github.com/root-project/root/pull/7374:18,deployability,build,building,18,"Fix libAfterImage building, backport 6.22; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7374
https://github.com/root-project/root/pull/7374:68,usability,command,command,68,"Fix libAfterImage building, backport 6.22; Remove ""l"" from ""ar clq"" command while there is no extra library. linked to libAfterImage.a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7374
https://github.com/root-project/root/pull/7376:12,deployability,Updat,Update,12,[Cling][cpt]Update cpt shebang to reflect Python 3 requirement [skip-ci];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7376
https://github.com/root-project/root/pull/7376:12,safety,Updat,Update,12,[Cling][cpt]Update cpt shebang to reflect Python 3 requirement [skip-ci];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7376
https://github.com/root-project/root/pull/7376:12,security,Updat,Update,12,[Cling][cpt]Update cpt shebang to reflect Python 3 requirement [skip-ci];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7376
https://github.com/root-project/root/issues/7377:1218,deployability,build,build,1218,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:41,energy efficiency,optim,optimizations,41,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:579,energy efficiency,optim,optimization,579,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:711,energy efficiency,optim,optimization,711,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:887,energy efficiency,optim,optimization,887,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1602,energy efficiency,optim,optimizations,1602,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:41,performance,optimiz,optimizations,41,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:579,performance,optimiz,optimization,579,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:711,performance,optimiz,optimization,711,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:887,performance,optimiz,optimization,887,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1602,performance,optimiz,optimizations,1602,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:727,safety,compl,completely,727,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1172,safety,input,input,1172,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:727,security,compl,completely,727,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1368,testability,context,context,1368,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1397,testability,context,context,1397,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:446,usability,clear,clear,446,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:494,usability,behavi,behavior,494,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:635,usability,behavi,behavior,635,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:756,usability,user,users,756,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:776,usability,behavi,behavior,776,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:794,usability,clear,clear,794,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1027,usability,behavi,behavior,1027,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1172,usability,input,input,1172,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/issues/7377:1545,usability,behavi,behavior,1545,"In CompileMacro, the ""g"" option disables optimizations; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context. <!--. Add any other context about the problem here. -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7377
https://github.com/root-project/root/pull/7378:41,deployability,depend,dependency,41,[rootcling] add extra check for MathCore dependency from Vc; Enables incremental builds again,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7378
https://github.com/root-project/root/pull/7378:81,deployability,build,builds,81,[rootcling] add extra check for MathCore dependency from Vc; Enables incremental builds again,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7378
https://github.com/root-project/root/pull/7378:41,integrability,depend,dependency,41,[rootcling] add extra check for MathCore dependency from Vc; Enables incremental builds again,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7378
https://github.com/root-project/root/pull/7378:41,modifiability,depend,dependency,41,[rootcling] add extra check for MathCore dependency from Vc; Enables incremental builds again,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7378
https://github.com/root-project/root/pull/7378:41,safety,depend,dependency,41,[rootcling] add extra check for MathCore dependency from Vc; Enables incremental builds again,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7378
https://github.com/root-project/root/pull/7378:41,testability,depend,dependency,41,[rootcling] add extra check for MathCore dependency from Vc; Enables incremental builds again,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7378
https://github.com/root-project/root/pull/7379:41,deployability,depend,dependency,41,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24; Enables incremental builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7379
https://github.com/root-project/root/pull/7379:99,deployability,build,builds,99,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24; Enables incremental builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7379
https://github.com/root-project/root/pull/7379:41,integrability,depend,dependency,41,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24; Enables incremental builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7379
https://github.com/root-project/root/pull/7379:41,modifiability,depend,dependency,41,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24; Enables incremental builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7379
https://github.com/root-project/root/pull/7379:41,safety,depend,dependency,41,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24; Enables incremental builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7379
https://github.com/root-project/root/pull/7379:41,testability,depend,dependency,41,"[rootcling] add extra check for MathCore dependency from Vc, backport to 6.24; Enables incremental builds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7379
https://github.com/root-project/root/pull/7380:0,deployability,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7380
https://github.com/root-project/root/pull/7380:29,deployability,contain,contains,29,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7380
https://github.com/root-project/root/pull/7380:47,deployability,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7380
https://github.com/root-project/root/pull/7380:0,safety,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7380
https://github.com/root-project/root/pull/7380:47,safety,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7380
https://github.com/root-project/root/pull/7380:0,security,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7380
https://github.com/root-project/root/pull/7380:47,security,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7380
https://github.com/root-project/root/issues/7381:449,deployability,fail,fails,449,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:1278,energy efficiency,current,currently,1278,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:449,reliability,fail,fails,449,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:1127,testability,context,context,1127,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:1156,testability,context,context,1156,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:147,usability,clear,clear,147,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:263,usability,user,users,263,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/issues/7381:921,usability,clear,clear,921,"[DF] Let Aliases be defined per computation graph branch, not globally; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. While users can `Define` a column with the same name in different branches of the computation graph, that's not true for `Alias`es: they are global to the computation graph. For example, this fails:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <iostream>. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 42; }).Define(""y"", [] { return 0; });. auto dfzx = df.Alias(""z"", ""x"");. auto dfzy = df.Alias(""z"", ""y"");. auto max42 = dfzx.Max<int>(""z"");. auto max0 = dfzy.Max<int>(""z"");. std::cout << ""should be 42: "" << *max42 << '\n';. std::cout << ""should be 0: "" << *max0 << '\n';. return 0;. }. ```. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Aliases should behave the same as Defines, we should track them per-computation-graph-branch rather than per-computation-graph. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. That would make it possible to `Redefine` aliases, which is currently not a thing because we don't want a computation-graph-branch-local `Redefine` to undefine a global `Alias`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7381
https://github.com/root-project/root/pull/7384:52,reliability,doe,does,52,[DF] Add Redefine method; - [x] throw if the column does not exist. - [x] document that Redefine throws if the column does not exist,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7384
https://github.com/root-project/root/pull/7384:118,reliability,doe,does,118,[DF] Add Redefine method; - [x] throw if the column does not exist. - [x] document that Redefine throws if the column does not exist,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7384
https://github.com/root-project/root/pull/7384:74,usability,document,document,74,[DF] Add Redefine method; - [x] throw if the column does not exist. - [x] document that Redefine throws if the column does not exist,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7384
https://github.com/root-project/root/pull/7385:68,deployability,depend,depends,68,"[Tutorials] Veto rf408 when RDataFrame is deactivated.; Since rf408 depends on RDF, it make sense to veto it when RDF is off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7385
https://github.com/root-project/root/pull/7385:68,integrability,depend,depends,68,"[Tutorials] Veto rf408 when RDataFrame is deactivated.; Since rf408 depends on RDF, it make sense to veto it when RDF is off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7385
https://github.com/root-project/root/pull/7385:68,modifiability,depend,depends,68,"[Tutorials] Veto rf408 when RDataFrame is deactivated.; Since rf408 depends on RDF, it make sense to veto it when RDF is off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7385
https://github.com/root-project/root/pull/7385:68,safety,depend,depends,68,"[Tutorials] Veto rf408 when RDataFrame is deactivated.; Since rf408 depends on RDF, it make sense to veto it when RDF is off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7385
https://github.com/root-project/root/pull/7385:68,testability,depend,depends,68,"[Tutorials] Veto rf408 when RDataFrame is deactivated.; Since rf408 depends on RDF, it make sense to veto it when RDF is off.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7385
https://github.com/root-project/root/pull/7386:0,deployability,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7386
https://github.com/root-project/root/pull/7386:29,deployability,contain,contains,29,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7386
https://github.com/root-project/root/pull/7386:47,deployability,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7386
https://github.com/root-project/root/pull/7386:0,safety,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7386
https://github.com/root-project/root/pull/7386:47,safety,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7386
https://github.com/root-project/root/pull/7386:0,security,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7386
https://github.com/root-project/root/pull/7386:47,security,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7386
https://github.com/root-project/root/pull/7387:0,deployability,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7387
https://github.com/root-project/root/pull/7387:29,deployability,contain,contains,29,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7387
https://github.com/root-project/root/pull/7387:47,deployability,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7387
https://github.com/root-project/root/pull/7387:0,safety,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7387
https://github.com/root-project/root/pull/7387:47,safety,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7387
https://github.com/root-project/root/pull/7387:0,security,Updat,Update,0,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7387
https://github.com/root-project/root/pull/7387:47,security,patch,patch,47,Update xrootd to v4.12.8 (it contains critical patch fixing compilati…; …on on Debian/Arch),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7387
https://github.com/root-project/root/pull/7388:21,usability,user,user,21,"[DF][skip-ci] Revise user guide; I am sure these docs could still be much better, feedback is welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7388
https://github.com/root-project/root/pull/7388:26,usability,guid,guide,26,"[DF][skip-ci] Revise user guide; I am sure these docs could still be much better, feedback is welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7388
https://github.com/root-project/root/pull/7388:82,usability,feedback,feedback,82,"[DF][skip-ci] Revise user guide; I am sure these docs could still be much better, feedback is welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7388
