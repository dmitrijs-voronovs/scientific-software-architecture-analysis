id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/3891:5401,usability,perform,performance-test,5401,":12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5543,usability,perform,performance-test,5543,"al function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5659,usability,perform,performance-test,5659," O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch. if (NeedsToWrite(optmode)) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5797,usability,perform,performance-test,5797,") {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:5923,usability,perform,performance-test,5923,"' has not returned when the virtual method was called. fD = SysOpen(path, O_RDONLY, 0644);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6076,usability,perform,performance-test,6076,"98:12: note: Call to virtual function during construction. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6216,usability,perform,performance-test,6216,"ter passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6349,usability,perform,performance-test,6349,"fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6470,usability,perform,performance-test,6470,"mFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6621,usability,perform,performance-test,6621,"f (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6766,usability,perform,performance-test,6766,"ffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:6938,usability,perform,performance-test,6938,"ster/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7062,usability,perform,performance-test,7062,"/home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7174,usability,perform,performance-test,7174,"<= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSee",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7326,usability,perform,performance-test,7326,"t) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWrite",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7484,usability,perform,performance-test,7484,"aster/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7630,usability,perform,performance-test,7630,"src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7788,usability,perform,performance-test,7788,"/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:7977,usability,perform,performance-test,7977,"cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8036,usability,error,error,8036,"ize != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/perf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8157,usability,error,errors,8157,") {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8220,usability,perform,performance-test,8220,"16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8362,usability,perform,performance-test,8362,"le.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8478,usability,perform,performance-test,8478,"rformance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is true. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8616,usability,perform,performance-test,8616,"/home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is true. Entering loop body. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8742,usability,perform,performance-test,8742,"left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:646:13: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:8895,usability,perform,performance-test,8895,"parameter. memcpy(fBlockSeek->fBuffer, buf, fBlockSeek->fSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: error: Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9035,usability,perform,performance-test,9035,"Null pointer passed as an argument to a 'nonnull' parameter [clang-analyzer-core.NonNullParamChecker,-warnings-as-errors]. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9168,usability,perform,performance-test,9168,"ockSeek->fBuffer, buf, len_left);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:672:11: note: Calling 'TMemFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9289,usability,perform,performance-test,9289,"mFile::SysWriteImpl'. return SysWriteImpl(fd,buf,len);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch. if (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9440,usability,perform,performance-test,9440,"f (fExternalData) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /hom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9585,usability,perform,performance-test,9585,"ffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch. if (fBlockList.fBuffer == 0) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fB",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9757,usability,perform,performance-test,9757,"ster/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9881,usability,perform,performance-test,9881,"/home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch. if (fBlockOffset+len <= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from al",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:9993,usability,perform,performance-test,9993,"<= fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10145,usability,perform,performance-test,10145,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10303,usability,perform,performance-test,10303,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10450,usability,perform,performance-test,10450,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10622,usability,perform,performance-test,10622,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10830,usability,user,user,10830,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10875,usability,error,errors,10875,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:10942,usability,error,errors,10942,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:11000,usability,error,errors,11000,"eek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch. if (!fBlockSeek->fNext) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'. fPrevious(previous), fNext(0), fBuffer(0), fSize(0). ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch. if (size != -1) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'. fNext = new TMemBlock(size,this);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'. fBlockSeek->CreateNext(fDefaultBlockSize);. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:17: note: Assuming the condition is false. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:643:10: note: Loop condition is false. Execution continues on line 657. while (len_left > fBlockSeek->fSize) {. ^. /home/performance-test/src_master/io/io/src/TMemFile.cxx:658:10: note: Null pointer passed as an argument to a 'nonnull' parameter. memcpy(fBlockSeek->fBuffer, buf, len_left);. ^. Suppressed 97 warnings (97 in non-user code). Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well. 6 warnings treated as errors. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3893:86,deployability,build,build,86,This PR introduced some warnings: https://epsft-jenkins.cern.ch/job/root-pullrequests-build/60454/parsed_console/ Please fix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3893
https://github.com/root-project/root/pull/3894:176,security,sign,significant,176,"> Do we really need to back-port to 6.18? I guess, @Axel-Naumann want to fix as much as possible warnings for 6.18. Of course, we cannot eliminate all of them for Windows, but significant part will be fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3894
https://github.com/root-project/root/pull/3896:37,availability,failur,failures,37,@vgvassilev I will take a look on IO failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:37,deployability,fail,failures,37,@vgvassilev I will take a look on IO failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:37,performance,failur,failures,37,@vgvassilev I will take a look on IO failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:37,reliability,fail,failures,37,@vgvassilev I will take a look on IO failures :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:43,availability,ping,ping,43,"@oshadura, I think I found the bug, I will ping you if I need help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:62,usability,help,help,62,"@oshadura, I think I found the bug, I will ping you if I need help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:52,availability,failur,failures,52,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:19,deployability,fail,fails,19,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:52,deployability,fail,failures,52,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:52,performance,failur,failures,52,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:19,reliability,fail,fails,19,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:52,reliability,fail,failures,52,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:14,safety,test,test,14,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:14,testability,test,test,14,"The cmsUnload test fails on other PRs, too. PS: The failures in debug do not seem related.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:15,availability,failur,failures,15,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:85,availability,failur,failures,85,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:15,deployability,fail,failures,15,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:28,deployability,unload,unloadCMS,28,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:85,deployability,fail,failures,85,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:109,deployability,unload,unloadCMS,109,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:235,deployability,build,builds,235,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:15,performance,failur,failures,15,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:85,performance,failur,failures,85,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:15,reliability,fail,failures,15,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:85,reliability,fail,failures,85,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:55,testability,assert,assert,55,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:281,usability,hint,hints,281,The other PRs' failures of `unloadCMS` are due to the `assert` fixed by this PR; the failures of this PR in `unloadCMS` are new. I heard rumors that making MLP an option (that was made an option and which wasn't enabled in the Jenkins builds) migt have triggered this. That indeed hints at an independent issue. - See https://github.com/root-project/root/pull/3918 for the fix. - MLP is now re-enabled in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:8,availability,failur,failure,8,Windows failure is understood!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:8,deployability,fail,failure,8,Windows failure is understood!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:8,performance,failur,failure,8,Windows failure is understood!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:8,reliability,fail,failure,8,Windows failure is understood!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3897:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3897
https://github.com/root-project/root/pull/3897:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3897
https://github.com/root-project/root/pull/3897:13,safety,permiss,permission,13,Closing with permission by @dpiparo .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3897
https://github.com/root-project/root/pull/3898:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:34,availability,failur,failure,34,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:34,deployability,fail,failure,34,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:34,performance,failur,failure,34,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:34,reliability,fail,failure,34,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:29,safety,test,test,29,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:29,testability,test,test,29,Rebuild to check whether the test failure above is reproducible.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3903:94,deployability,build,builds,94,"Alright, these are now the actual changes that I want to merge. They passed all but Fedora 29 builds, which was stuck and I aborted.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3903
https://github.com/root-project/root/pull/3903:4,deployability,build,builds,4,"All builds passed, Fedora 29 was stuck, so I aborted it again. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3903
https://github.com/root-project/root/pull/3904:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:8,deployability,build,build,8,"Windows build is working, ROOT-fedora27/noimt just was not working yesterday at all",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3907:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3907
https://github.com/root-project/root/pull/3907:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3907
https://github.com/root-project/root/pull/3911:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3911
https://github.com/root-project/root/pull/3912:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3913:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3914:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3914
https://github.com/root-project/root/pull/3915:4,availability,failur,failure,4,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3915
https://github.com/root-project/root/pull/3915:4,deployability,fail,failure,4,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3915
https://github.com/root-project/root/pull/3915:41,deployability,infrastructur,infrastructure,41,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3915
https://github.com/root-project/root/pull/3915:4,performance,failur,failure,4,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3915
https://github.com/root-project/root/pull/3915:4,reliability,fail,failure,4,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3915
https://github.com/root-project/root/pull/3915:78,reliability,doe,does,78,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3915
https://github.com/root-project/root/pull/3915:70,usability,command,command,70,"The failure in ROOT-fedora29/python3. is infrastructure related (""-j9 command does not exist"" :) ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3915
https://github.com/root-project/root/pull/3917:11,deployability,build,build,11,@phsft-bot build with flags -Dmlp=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3917
https://github.com/root-project/root/pull/3917:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3917
https://github.com/root-project/root/pull/3917:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3 with flags -Dmlp=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3917
https://github.com/root-project/root/pull/3917:24,deployability,releas,release,24,Can you add this to the release notes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3917
https://github.com/root-project/root/pull/3918:4,availability,error,error,4,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:246,availability,failur,failure,246,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:246,deployability,fail,failure,246,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:4,performance,error,error,4,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:246,performance,failur,failure,246,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:246,reliability,fail,failure,246,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:4,safety,error,error,4,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:135,safety,test,testReport,135,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:135,testability,test,testReport,135,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:4,usability,error,error,4,"The error was introduced by a commit here https://epsft-jenkins.cern.ch/job/root-nightly-master/2198/LABEL=ROOT-ubuntu18.10,SPEC=cxx17/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/ (for v6-18). How do the failure, these commits and your fix correlate?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:141,deployability,build,builds,141,Rumors say that making MLP optional (and not enabling it in Jenkins) triggered this. This PR indeed fixes the issue; after the successful PR builds here I have enabled MLP in Jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:165,availability,failur,failure,165,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:56,deployability,fail,failed,56,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:78,deployability,build,build,78,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:105,deployability,build,build,105,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:144,deployability,fail,failing,144,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:165,deployability,fail,failure,165,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:194,modifiability,pac,package,194,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:165,performance,failur,failure,165,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:56,reliability,fail,failed,56,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:144,reliability,fail,failing,144,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:165,reliability,fail,failure,165,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:51,safety,test,test,51,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:51,testability,test,test,51,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3918:136,usability,stop,stopped,136,"If you look at my PR (#3917), you can see that the test failed in the initial build, but when I asked to build ""with flags -Dmlp=ON"" it stopped failing. The Jupyter failure was due to a missing package on the new node.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3918
https://github.com/root-project/root/pull/3922:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:79,availability,fault,fault,79,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:27,deployability,fail,failing,27,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:79,energy efficiency,fault,fault,79,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:79,performance,fault,fault,79,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:27,reliability,fail,failing,27,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:79,reliability,fault,fault,79,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:79,safety,fault,fault,79,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:157,usability,Clear,Clear,157,"I see that the CI is still failing through `clang-tidy`, but I cannot find any fault of my own here, seems to be related to a call to the virtual `TMatrixT::Clear` in the `TMatrixT` destructor... Any opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:200,usability,behavi,behavior,200,"done. While playing with the code, I found that apparently my idea of how the `_nominalBinWidth` member is supposed to work was wrong - the normalization seems to be a bit off. I only get the correct behavior if I put `_nominalBinWidth=1`, but that seems wrong. Any idea what the ""right"" thing to be doing here is?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:54,usability,document,documented,54,"Hi Carsten,. The code seems ok, but the option is not documented. For which classes can you use it? Should it be added to the docs of RooAbsPdf::plotOn()?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:682,deployability,patch,patch,682,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:77,energy efficiency,draw,draw,77,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:177,energy efficiency,Draw,DrawOptions,177,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:563,energy efficiency,Draw,DrawOption,563,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:1026,energy efficiency,draw,draw,1026,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:37,reliability,doe,doesn,37,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:104,reliability,doe,does,104,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:647,reliability,doe,doesn,647,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:682,safety,patch,patch,682,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:682,security,patch,patch,682,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:10,usability,document,documentation,10,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:64,usability,document,document,64,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:165,usability,support,support,165,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:334,usability,support,supports,334,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:431,usability,support,supports,431,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:539,usability,document,documentation,539,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:599,usability,document,documented,599,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:633,usability,document,documentation,633,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:962,usability,document,documentation,962,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:1056,usability,support,supported,1056,"As far as documentation goes, RooFit doesn't really excessively document the draw options yet. Since it does just refer to TGraph, I naturally assumed that it would support all DrawOptions of TGraph both for RooAbsData and RooAbsReal, which turned out not to be the case, which is the whole reason for the MR. Now at least RooAbsReal supports ""P/E"" instead of just ""L/E"", which is already a step forward, but RooAbsData still only supports ""P/E"" I think since I didn't mess with that. It might be useful to add this fact to the respective documentation lines of ""DrawOption"". But since this was not documented so far at all, the old documentation doesn't become invalidated by this patch. What might be useful though is to add the lines. MarkerStyle(Int_t style) | Select the ROOT marker style, default is 21. MarkerColor(Int_t color) | Select the ROOT marker color, default is black. MarkerSize(Double_t size) | Select the ROOT marker size. from the RooAbsData documentation table of plotOn also to RooAbsReal, since for the draw option ""P"", they are now supported there. Regards,. Carsten.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:70,usability,interact,interactively,70,"We cannot put merge commits in master. The branch needs to be rebased interactively to drop the merge commit, and afterwards, it needs to be rebased on top of master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:0,usability,Document,Documentation,0,Documentation was added and the branch was rebased to master. Anything else I should do?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:252,availability,fault,fault,252,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:171,deployability,continu,continuous,171,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:182,deployability,integr,integration,182,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:252,energy efficiency,fault,fault,252,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:118,integrability,topic,topics,118,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:182,integrability,integr,integration,182,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:238,integrability,topic,topics,238,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:557,integrability,topic,topics,557,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:182,interoperability,integr,integration,182,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:182,modifiability,integr,integration,182,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:85,performance,time,time,85,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:252,performance,fault,fault,252,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:182,reliability,integr,integration,182,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:252,reliability,fault,fault,252,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:201,safety,test,test,201,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:252,safety,fault,fault,252,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:182,security,integr,integration,182,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:182,testability,integr,integration,182,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:201,testability,test,test,201,"> Hello Rahul,. > . > I had a look over the changes. and added some comments. > Next time, please don't mix different topics such as graphics and Bernstein ranges, as the continuous integration should test them one by one. The ""mixing of topics"" is my fault here - this is our development branch for the RooFit implementation of RooUnfold, and so far we only needed to change graphics. We encountered problems with RooBernstein and needed to fix them to get our examples running. We hope that not so many further changes are needed, but we will try to keep topics more separate in the future. If you want, I can split this into two different branches before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:47,availability,error,error,47,"Hello all,. there has apparently been a rebase error, no need to review at the moment!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:47,performance,error,error,47,"Hello all,. there has apparently been a rebase error, no need to review at the moment!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:47,safety,error,error,47,"Hello all,. there has apparently been a rebase error, no need to review at the moment!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:65,safety,review,review,65,"Hello all,. there has apparently been a rebase error, no need to review at the moment!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:65,testability,review,review,65,"Hello all,. there has apparently been a rebase error, no need to review at the moment!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:47,usability,error,error,47,"Hello all,. there has apparently been a rebase error, no need to review at the moment!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:57,availability,error,error,57,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:57,performance,error,error,57,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:57,safety,error,error,57,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:308,safety,compl,completely,308,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:308,security,compl,completely,308,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:57,usability,error,error,57,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:216,usability,interact,interactive,216,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:431,usability,close,close,431,"Hello @cburgard and @rahulgrit,. there must have been an error when rebasing the branch, would you try again with `root-project/master`, and only apply the RooFit-related commits? You might also want to try rebase --interactive to reorder/squash commits. After that, let's go through the comments, because I completely lost track if we addressed them or there's still something to be done. Are you expecting more changes or are we close to ""finishing"" this line of development?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3924:30,integrability,messag,message,30,"""Commit"" is not a good commit message. @lmoneta could you help @surya2191997 rewrite the commits?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:30,interoperability,messag,message,30,"""Commit"" is not a good commit message. @lmoneta could you help @surya2191997 rewrite the commits?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:58,usability,help,help,58,"""Commit"" is not a good commit message. @lmoneta could you help @surya2191997 rewrite the commits?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3925:84,deployability,updat,updated,84,@couet Only this and the read-write lock remain for GCC 9 warnings. Can we get this updated and merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3925
https://github.com/root-project/root/pull/3925:36,performance,lock,lock,36,@couet Only this and the read-write lock remain for GCC 9 warnings. Can we get this updated and merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3925
https://github.com/root-project/root/pull/3925:84,safety,updat,updated,84,@couet Only this and the read-write lock remain for GCC 9 warnings. Can we get this updated and merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3925
https://github.com/root-project/root/pull/3925:36,security,lock,lock,36,@couet Only this and the read-write lock remain for GCC 9 warnings. Can we get this updated and merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3925
https://github.com/root-project/root/pull/3925:84,security,updat,updated,84,@couet Only this and the read-write lock remain for GCC 9 warnings. Can we get this updated and merged?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3925
https://github.com/root-project/root/pull/3929:156,energy efficiency,reduc,reduce,156,"> Should all be replaced the same way ? (std::vector instead of c array). I don't think this needs to be done generically. It's really as needed - this can reduce code complexity (""do all code paths delete the memory?"") but as I was looking at the code anyway I decided to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3929
https://github.com/root-project/root/pull/3929:210,performance,memor,memory,210,"> Should all be replaced the same way ? (std::vector instead of c array). I don't think this needs to be done generically. It's really as needed - this can reduce code complexity (""do all code paths delete the memory?"") but as I was looking at the code anyway I decided to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3929
https://github.com/root-project/root/pull/3929:168,safety,compl,complexity,168,"> Should all be replaced the same way ? (std::vector instead of c array). I don't think this needs to be done generically. It's really as needed - this can reduce code complexity (""do all code paths delete the memory?"") but as I was looking at the code anyway I decided to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3929
https://github.com/root-project/root/pull/3929:168,security,compl,complexity,168,"> Should all be replaced the same way ? (std::vector instead of c array). I don't think this needs to be done generically. It's really as needed - this can reduce code complexity (""do all code paths delete the memory?"") but as I was looking at the code anyway I decided to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3929
https://github.com/root-project/root/pull/3929:210,usability,memor,memory,210,"> Should all be replaced the same way ? (std::vector instead of c array). I don't think this needs to be done generically. It's really as needed - this can reduce code complexity (""do all code paths delete the memory?"") but as I was looking at the code anyway I decided to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3929
https://github.com/root-project/root/pull/3935:144,deployability,build,build,144,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:150,deployability,configurat,configuration,150,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:242,deployability,depend,dependencies,242,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:150,integrability,configur,configuration,150,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:242,integrability,depend,dependencies,242,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:150,modifiability,configur,configuration,150,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:242,modifiability,depend,dependencies,242,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:169,safety,compl,complicated,169,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:215,safety,avoid,avoiding,215,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:242,safety,depend,dependencies,242,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:150,security,configur,configuration,150,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:169,security,compl,complicated,169,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3935:242,testability,depend,dependencies,242,"Hi @dpiparo, since there are no commit or PR descriptions: what was the reason to add this `spectrum` option? As far as I can see, it makes the build configuration more complicated with no tangible benefit, such as avoiding optional external dependencies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3935
https://github.com/root-project/root/pull/3940:345,energy efficiency,current,currently,345,"This is an incompatible change, so I think @Axel-Naumann should give his ok before we merge. On second thought, after searching for this variable on GitHub, I see several examples of people using the values of `ROOT_LIBRARY_DIR` and `ROOT_BINARY_DIR` to mean the equivalent of `root-config --libdir` and `root-config --bindir`, which is what we currently export in `ROOTConfig.cmake`. I think that renaming this variable now will break all these users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:11,interoperability,incompatib,incompatible,11,"This is an incompatible change, so I think @Axel-Naumann should give his ok before we merge. On second thought, after searching for this variable on GitHub, I see several examples of people using the values of `ROOT_LIBRARY_DIR` and `ROOT_BINARY_DIR` to mean the equivalent of `root-config --libdir` and `root-config --bindir`, which is what we currently export in `ROOTConfig.cmake`. I think that renaming this variable now will break all these users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:319,interoperability,bind,bindir,319,"This is an incompatible change, so I think @Axel-Naumann should give his ok before we merge. On second thought, after searching for this variable on GitHub, I see several examples of people using the values of `ROOT_LIBRARY_DIR` and `ROOT_BINARY_DIR` to mean the equivalent of `root-config --libdir` and `root-config --bindir`, which is what we currently export in `ROOTConfig.cmake`. I think that renaming this variable now will break all these users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:137,modifiability,variab,variable,137,"This is an incompatible change, so I think @Axel-Naumann should give his ok before we merge. On second thought, after searching for this variable on GitHub, I see several examples of people using the values of `ROOT_LIBRARY_DIR` and `ROOT_BINARY_DIR` to mean the equivalent of `root-config --libdir` and `root-config --bindir`, which is what we currently export in `ROOTConfig.cmake`. I think that renaming this variable now will break all these users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:319,modifiability,bind,bindir,319,"This is an incompatible change, so I think @Axel-Naumann should give his ok before we merge. On second thought, after searching for this variable on GitHub, I see several examples of people using the values of `ROOT_LIBRARY_DIR` and `ROOT_BINARY_DIR` to mean the equivalent of `root-config --libdir` and `root-config --bindir`, which is what we currently export in `ROOTConfig.cmake`. I think that renaming this variable now will break all these users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:412,modifiability,variab,variable,412,"This is an incompatible change, so I think @Axel-Naumann should give his ok before we merge. On second thought, after searching for this variable on GitHub, I see several examples of people using the values of `ROOT_LIBRARY_DIR` and `ROOT_BINARY_DIR` to mean the equivalent of `root-config --libdir` and `root-config --bindir`, which is what we currently export in `ROOTConfig.cmake`. I think that renaming this variable now will break all these users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:446,usability,user,users,446,"This is an incompatible change, so I think @Axel-Naumann should give his ok before we merge. On second thought, after searching for this variable on GitHub, I see several examples of people using the values of `ROOT_LIBRARY_DIR` and `ROOT_BINARY_DIR` to mean the equivalent of `root-config --libdir` and `root-config --bindir`, which is what we currently export in `ROOTConfig.cmake`. I think that renaming this variable now will break all these users' code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:193,deployability,releas,release,193,"@oshadura and I converged on the following: introduce `ROOT_BIN_DIR` as a synonym for the current `ROOT_BINARY_DIR` (i.e. notably for v6.18), announcing deprecation of `ROOT_BINARY_DIR` in the release notes for v6.18. Then in v6.20 remove `ROOT_BINARY_DIR` from RootConfig (such that it can be set by FindPackage to the build directory, as traditionally done by CMake).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:320,deployability,build,build,320,"@oshadura and I converged on the following: introduce `ROOT_BIN_DIR` as a synonym for the current `ROOT_BINARY_DIR` (i.e. notably for v6.18), announcing deprecation of `ROOT_BINARY_DIR` in the release notes for v6.18. Then in v6.20 remove `ROOT_BINARY_DIR` from RootConfig (such that it can be set by FindPackage to the build directory, as traditionally done by CMake).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:90,energy efficiency,current,current,90,"@oshadura and I converged on the following: introduce `ROOT_BIN_DIR` as a synonym for the current `ROOT_BINARY_DIR` (i.e. notably for v6.18), announcing deprecation of `ROOT_BINARY_DIR` in the release notes for v6.18. Then in v6.20 remove `ROOT_BINARY_DIR` from RootConfig (such that it can be set by FindPackage to the build directory, as traditionally done by CMake).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:150,deployability,build,builds,150,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:188,deployability,build,builds,188,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:274,deployability,build,builds,274,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:290,deployability,build,builds,290,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:377,deployability,build,builds,377,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:408,deployability,build,builds,408,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:518,deployability,build,builds,518,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:851,deployability,build,builds,851,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:865,deployability,instal,installtree,865,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:964,deployability,instal,installtree,964,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:704,safety,test,test,704,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:704,testability,test,test,704,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:678,usability,HINT,HINTS,678,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1032,usability,HINT,HINTS,1032,"@Axel-Naumann @amadio ROOTConfig.cmake looks now like this: https://gist.github.com/oshadura/43e0d5de7b25673ab646475c6d9189b8. [oksana@oksana-dellxps builds]$ grep -R ROOT_BINARY_DIR . ../builds/ROOTConfig.cmake:set(ROOT_BINARY_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ../builds/CMakeCache.txt:ROOT_BINARY_DIR:STATIC=/home/oksana/CERN_sources/root-cxxmodules/builds. [oksana@oksana-dellxps builds]$ grep -R ROOT_BIN_DIR . ./ROOTConfig.cmake:set(ROOT_BIN_DIR /home/oksana/CERN_sources/root-cxxmodules/builds/bin). ./ROOTConfig.cmake:# Deprecated value, please don't use it and use ROOT_BIN_DIR instead. ./ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}). ./test/CMakeLists.txt: set(ROOT_root_CMD ${ROOT_BIN_DIR}/root.exe). ./CMakeCache.txt:ROOT_BIN_DIR:INTERNAL=/home/oksana/CERN_sources/root-cxxmodules/builds/bin. ./installtree/ROOTConfig.cmake:get_filename_component(ROOT_BIN_DIR ""${_thisdir}/../bin"" ABSOLUTE). ./installtree/ROOTConfig.cmake: find_program(ROOT_${_cpt}_CMD ${_cpt} HINTS ${ROOT_BIN_DIR}).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:322,interoperability,bind,bindir,322,"I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:417,interoperability,bind,bindir,417,"I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:46,modifiability,variab,variable,46,"I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:322,modifiability,bind,bindir,322,"I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:417,modifiability,bind,bindir,417,"I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:324,interoperability,bind,bindir,324,"> I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want. We reached an agreement to use ROOT_BINDIR and add a deprecation function for deprecating ROOT_BINARY_DIR variable when it is included...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:419,interoperability,bind,bindir,419,"> I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want. We reached an agreement to use ROOT_BINDIR and add a deprecation function for deprecating ROOT_BINARY_DIR variable when it is included...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:48,modifiability,variab,variable,48,"> I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want. We reached an agreement to use ROOT_BINDIR and add a deprecation function for deprecating ROOT_BINARY_DIR variable when it is included...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:324,modifiability,bind,bindir,324,"> I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want. We reached an agreement to use ROOT_BINDIR and add a deprecation function for deprecating ROOT_BINARY_DIR variable when it is included...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:419,modifiability,bind,bindir,419,"> I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want. We reached an agreement to use ROOT_BINDIR and add a deprecation function for deprecating ROOT_BINARY_DIR variable when it is included...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:598,modifiability,variab,variable,598,"> I think that it's not necessary to rename the variable. This is only a problem for roottest (and maybe rootbench) because it's built both as part of ROOT, when `ROOT_BINARY_DIR` has the special meaning to CMake, and standalone, when `ROOT_BINARY_DIR` is what `ROOTConfig.cmake` exports and is equivalent to `root-config --bindir`. I think that this can be easily solved by setting `ROOT_BINARY_DIR` to `root-config --bindir` in `roottest/CMakeLists.txt`. I can give this a try if you want. We reached an agreement to use ROOT_BINDIR and add a deprecation function for deprecating ROOT_BINARY_DIR variable when it is included...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:34,deployability,build,building,34,Do deprecation warnings show when building ROOT (I assume the gist above is for a standalone build of roottest).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:93,deployability,build,build,93,Do deprecation warnings show when building ROOT (I assume the gist above is for a standalone build of roottest).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:36,deployability,build,building,36,"> Do deprecation warnings show when building ROOT (I assume the gist above is for a standalone build of roottest). You are correct, this gist is for standalone build of roottest, for ROOT build I don't see any warnings (I change all appearances of ROOT_BINARY_DIR -> ROOT_BINDIR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:95,deployability,build,build,95,"> Do deprecation warnings show when building ROOT (I assume the gist above is for a standalone build of roottest). You are correct, this gist is for standalone build of roottest, for ROOT build I don't see any warnings (I change all appearances of ROOT_BINARY_DIR -> ROOT_BINDIR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:160,deployability,build,build,160,"> Do deprecation warnings show when building ROOT (I assume the gist above is for a standalone build of roottest). You are correct, this gist is for standalone build of roottest, for ROOT build I don't see any warnings (I change all appearances of ROOT_BINARY_DIR -> ROOT_BINDIR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:188,deployability,build,build,188,"> Do deprecation warnings show when building ROOT (I assume the gist above is for a standalone build of roottest). You are correct, this gist is for standalone build of roottest, for ROOT build I don't see any warnings (I change all appearances of ROOT_BINARY_DIR -> ROOT_BINDIR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:26,availability,error,errors,26,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:64,deployability,build,build,64,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:98,deployability,build,build,98,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:104,deployability,build,build,104,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:744,deployability,build,build,744,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:778,deployability,build,build,778,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:784,deployability,build,build,784,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:858,deployability,build,build,858,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:892,deployability,build,build,892,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:898,deployability,build,build,898,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:963,deployability,build,build,963,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:997,deployability,build,build,997,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1073,deployability,build,build,1073,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1107,deployability,build,build,1107,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1113,deployability,build,build,1113,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1184,deployability,build,build,1184,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1218,deployability,build,build,1218,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1224,deployability,build,build,1224,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1273,deployability,build,build,1273,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1307,deployability,build,build,1307,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1402,deployability,fail,failed,1402,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:26,performance,error,errors,26,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:146,performance,time,timeout,146,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1393,performance,time,timeout,1393,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1402,reliability,fail,failed,1402,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:26,safety,error,errors,26,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:38,safety,TEST,TEST,38,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:146,safety,timeout,timeout,146,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1368,safety,TEST,TEST,1368,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1393,safety,timeout,timeout,1393,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:38,testability,TEST,TEST,38,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1368,testability,TEST,TEST,1368,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:26,usability,error,errors,26,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:43,usability,COMMAND,COMMAND,43,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1416,usability,command,command,1416,"@amadio I am getting next errors:. -- TEST COMMAND -- . cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. -- BEGIN TEST OUTPUT --. /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. ===============================. I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:151,availability,error,errors,151,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:196,deployability,build,build,196,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:230,deployability,build,build,230,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:236,deployability,build,build,236,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:878,deployability,build,build,878,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:912,deployability,build,build,912,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:918,deployability,build,build,918,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:992,deployability,build,build,992,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1026,deployability,build,build,1026,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1032,deployability,build,build,1032,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1097,deployability,build,build,1097,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1131,deployability,build,build,1131,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1207,deployability,build,build,1207,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1241,deployability,build,build,1241,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1247,deployability,build,build,1247,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1318,deployability,build,build,1318,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1352,deployability,build,build,1352,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1358,deployability,build,build,1358,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1407,deployability,build,build,1407,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1441,deployability,build,build,1441,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1540,deployability,fail,failed,1540,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:151,performance,error,errors,151,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:280,performance,time,timeout,280,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1531,performance,time,timeout,1531,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1540,reliability,fail,failed,1540,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:115,safety,test,tested,115,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:151,safety,error,errors,151,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:169,safety,TEST,TEST,169,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:280,safety,timeout,timeout,280,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1504,safety,TEST,TEST,1504,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1531,safety,timeout,timeout,1531,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:115,testability,test,tested,115,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:169,testability,TEST,TEST,169,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1504,testability,TEST,TEST,1504,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:151,usability,error,errors,151,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:174,usability,COMMAND,COMMAND,174,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:1554,usability,command,command,1554,"I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > @amadio I am getting next errors:. > . > -- TEST COMMAND --. > cd /mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray. > /usr/bin/timeout -s USR2 270s /usr/bin/root.exe -e '#define ClingWorkAroundMissingDynamicScope' -e '#define ClingWorkAroundUnnamedInclude' -e '#define ClingWorkAroundMissingSmartInclude' -e '#define ClingWorkAroundNoDotInclude' -e '#define ClingWorkAroundMissingAutoLoadingForTemplates' -e '#define ClingWorkAroundAutoParseUsingNamespace' -e '#define ClingWorkAroundTClassUpdateDouble32' -e '#define ClingWorkAroundAutoParseDeclaration' -e '#define ClingWorkAroundMissingUnloading' -e '#define ClingWorkAroundBrokenUnnamedReturn' -e '#define ClingWorkAroundUnnamedDetection2' -e 'gSystem->SetBuildDir(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"",true)' -e 'gSystem->AddDynamicPath(""/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gROOT->SetMacroPath(""/mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray"")' -e 'gInterpreter->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -e 'gSystem->AddIncludePath(""-I/mnt/build/workspace/root-pullrequests-build/build/roottest/root/io/stdarray"")' -q -l -b /mnt/build/workspace/root-pullrequests-build/roottest/root/io/stdarray/aclicModelWrite.C+. > -- BEGIN TEST OUTPUT --. > /usr/bin/timeout: failed to run command /usr/bin/root.exe: No such file or directory. > . > ===============================. > . > I am confused, it is because you uninstalled root binaries at fedora node?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:313,deployability,instal,installed,313,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node? I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:364,deployability,build,build,364,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node? I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:226,integrability,sub,submit,226,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node? I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:357,performance,cach,cache,357,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node? I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:117,safety,test,tested,117,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node? I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:117,testability,test,tested,117,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node? I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:262,testability,understand,understand,262,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node? I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)? .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:72,availability,error,errors,72,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:138,deployability,instal,installed,138,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:196,deployability,instal,installed,196,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:72,performance,error,errors,72,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:72,safety,error,errors,72,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:180,safety,test,tested,180,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:180,testability,test,tested,180,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3940:72,usability,error,errors,72,"Well, now I uninstalled it as Axel requested it. You will not see these errors on the PR anymore, but roottest is still broken if ROOT is installed. It needs to use the ROOT being tested, not the installed one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3940
https://github.com/root-project/root/pull/3943:48,safety,test,tests,48,"This is not enough to disable all history, some tests in `root/test/` (the `*-interpreted` ones) still create entries in `$HOME/.root_hist`. I will make more changes to get rid of those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3943
https://github.com/root-project/root/pull/3943:63,safety,test,test,63,"This is not enough to disable all history, some tests in `root/test/` (the `*-interpreted` ones) still create entries in `$HOME/.root_hist`. I will make more changes to get rid of those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3943
https://github.com/root-project/root/pull/3943:48,testability,test,tests,48,"This is not enough to disable all history, some tests in `root/test/` (the `*-interpreted` ones) still create entries in `$HOME/.root_hist`. I will make more changes to get rid of those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3943
https://github.com/root-project/root/pull/3943:63,testability,test,test,63,"This is not enough to disable all history, some tests in `root/test/` (the `*-interpreted` ones) still create entries in `$HOME/.root_hist`. I will make more changes to get rid of those too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3943
https://github.com/root-project/root/pull/3946:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3946
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:13,deployability,build,build,13,> @phsft-bot build! sorry you don't have rights to trigger ROOT builds..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:64,deployability,build,builds,64,> @phsft-bot build! sorry you don't have rights to trigger ROOT builds..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:55,availability,failur,failures,55,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:55,deployability,fail,failures,55,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:127,deployability,build,build,127,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:156,deployability,build,build,156,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:224,deployability,build,builds,224,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:55,performance,failur,failures,55,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:72,performance,perform,performance-,72,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:215,performance,parallel,parallel,215,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:55,reliability,fail,failures,55,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:26,safety,review,review,26,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:246,safety,test,test,246,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:26,testability,review,review,26,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:246,testability,test,test,246,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:72,usability,perform,performance-,72,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:52,deployability,build,building,52,@fylux please fork also roottest in order to enable building on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:54,deployability,build,building,54,> @fylux please fork also roottest in order to enable building on Windows. Done! https://github.com/fylux/roottest/tree/zstd-dev2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:77,deployability,Log,Logs,77,@fylux what about clang-formatting? Can you add please as a separate commit? Logs are here https://travis-ci.org/root-project/root/jobs/553883729,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:24,interoperability,format,formatting,24,@fylux what about clang-formatting? Can you add please as a separate commit? Logs are here https://travis-ci.org/root-project/root/jobs/553883729,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:77,safety,Log,Logs,77,@fylux what about clang-formatting? Can you add please as a separate commit? Logs are here https://travis-ci.org/root-project/root/jobs/553883729,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:77,security,Log,Logs,77,@fylux what about clang-formatting? Can you add please as a separate commit? Logs are here https://travis-ci.org/root-project/root/jobs/553883729,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:77,testability,Log,Logs,77,@fylux what about clang-formatting? Can you add please as a separate commit? Logs are here https://travis-ci.org/root-project/root/jobs/553883729,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:15,deployability,build,build,15,"@fylux Jenkins build is successful! Congrats! After clang-formatting, PR will be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:58,interoperability,format,formatting,58,"@fylux Jenkins build is successful! Congrats! After clang-formatting, PR will be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:91,safety,review,review,91,"@fylux Jenkins build is successful! Congrats! After clang-formatting, PR will be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:91,testability,review,review,91,"@fylux Jenkins build is successful! Congrats! After clang-formatting, PR will be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:51,performance,perform,performance,51,LGTM! (it could be merged after showing/presenting performance results on I/O meeting),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:74,performance,I/O,I/O,74,LGTM! (it could be merged after showing/presenting performance results on I/O meeting),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:51,usability,perform,performance,51,LGTM! (it could be merged after showing/presenting performance results on I/O meeting),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3947:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3949:54,safety,test,test,54,Yes I guess 0 should be allowed. Have you run a small test to check if it works ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:54,testability,test,test,54,Yes I guess 0 should be allowed. Have you run a small test to check if it works ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:56,safety,test,test,56,"> Yes I guess 0 should be allowed. Have you run a small test to check if it works ? I'm just compiling the branch now, will get back to you once I have results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:56,testability,test,test,56,"> Yes I guess 0 should be allowed. Have you run a small test to check if it works ? I'm just compiling the branch now, will get back to you once I have results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:41,deployability,patch,patches,41,"I would be happy to see this in v6-18-00-patches, too, so that I can start using this in v6.18.00.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:41,safety,patch,patches,41,"I would be happy to see this in v6-18-00-patches, too, so that I can start using this in v6.18.00.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:41,security,patch,patches,41,"I would be happy to see this in v6-18-00-patches, too, so that I can start using this in v6.18.00.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:43,deployability,patch,patches,43,@Axel-Naumann: can we put this in v6-18-00-patches ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:43,safety,patch,patches,43,@Axel-Naumann: can we put this in v6-18-00-patches ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:43,security,patch,patches,43,@Axel-Naumann: can we put this in v6-18-00-patches ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:21,deployability,patch,patches,21,Merged into v6-18-00-patches as 3a55a4702f492abdb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:21,safety,patch,patches,21,Merged into v6-18-00-patches as 3a55a4702f492abdb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3949:21,security,patch,patches,21,Merged into v6-18-00-patches as 3a55a4702f492abdb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3949
https://github.com/root-project/root/pull/3951:18,deployability,updat,update,18,"I dropped the TBB update as it was not meant to be merged into 6.18, and merged manually. Closing this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3951
https://github.com/root-project/root/pull/3951:18,safety,updat,update,18,"I dropped the TBB update as it was not meant to be merged into 6.18, and merged manually. Closing this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3951
https://github.com/root-project/root/pull/3951:18,security,updat,update,18,"I dropped the TBB update as it was not meant to be merged into 6.18, and merged manually. Closing this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3951
https://github.com/root-project/root/pull/3954:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3954
https://github.com/root-project/root/pull/3955:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3955
https://github.com/root-project/root/pull/3955:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3955
https://github.com/root-project/root/pull/3957:145,availability,avail,availble,145,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:448,deployability,depend,depend,448,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:482,deployability,build,build,482,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:432,integrability,compon,components,432,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:448,integrability,depend,depend,448,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:432,interoperability,compon,components,432,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:432,modifiability,compon,components,432,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:448,modifiability,depend,depend,448,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:145,safety,avail,availble,145,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:192,safety,compl,complicated,192,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:378,safety,test,tests,378,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:448,safety,depend,depend,448,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:192,security,compl,complicated,192,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:378,testability,test,tests,378,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:448,testability,depend,depend,448,"It may be a good idea to make dataframe optional and disable (or require it to be off) on 32bits machines. The proliferation of these things not availble on 32bits will only get more and more complicated. We already have a few other places where this needs to be checked. It's better to have a `dataframe` option than keeping in sync all the 32bit checks everywhere (i.e. which tests to run, which tutorials to veto, which optional components that depend on dataframe and cannot be build as a consequence, etc). @dpiparo @bluehood What are your thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:304,availability,consist,consistent,304,"@Axel-Naumann correct me if I'm wrong. We do not plan to make dataframe optional since we expect gcc/clang to figure out their discrepancies and resolve the 32bit issue for RDF? However, from the technical side, I agree with @amadio having a dataframe flag would make stuff much easier and for sure more consistent on the long run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:49,testability,plan,plan,49,"@Axel-Naumann correct me if I'm wrong. We do not plan to make dataframe optional since we expect gcc/clang to figure out their discrepancies and resolve the 32bit issue for RDF? However, from the technical side, I agree with @amadio having a dataframe flag would make stuff much easier and for sure more consistent on the long run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:304,usability,consist,consistent,304,"@Axel-Naumann correct me if I'm wrong. We do not plan to make dataframe optional since we expect gcc/clang to figure out their discrepancies and resolve the 32bit issue for RDF? However, from the technical side, I agree with @amadio having a dataframe flag would make stuff much easier and for sure more consistent on the long run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:291,availability,failur,failure,291,"@dpiparo I thought rdf was reenabled on 32 bits at some point, do I remember incorrectly? @amadio I don't have anything against a dataframe option that is usually on and is turned off on 32 bit machines. If I had time I'd check that we actually still need to disable rdf on 32 bits, but the failure was not easy to reproduce.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:291,deployability,fail,failure,291,"@dpiparo I thought rdf was reenabled on 32 bits at some point, do I remember incorrectly? @amadio I don't have anything against a dataframe option that is usually on and is turned off on 32 bit machines. If I had time I'd check that we actually still need to disable rdf on 32 bits, but the failure was not easy to reproduce.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:213,performance,time,time,213,"@dpiparo I thought rdf was reenabled on 32 bits at some point, do I remember incorrectly? @amadio I don't have anything against a dataframe option that is usually on and is turned off on 32 bit machines. If I had time I'd check that we actually still need to disable rdf on 32 bits, but the failure was not easy to reproduce.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:291,performance,failur,failure,291,"@dpiparo I thought rdf was reenabled on 32 bits at some point, do I remember incorrectly? @amadio I don't have anything against a dataframe option that is usually on and is turned off on 32 bit machines. If I had time I'd check that we actually still need to disable rdf on 32 bits, but the failure was not easy to reproduce.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:291,reliability,fail,failure,291,"@dpiparo I thought rdf was reenabled on 32 bits at some point, do I remember incorrectly? @amadio I don't have anything against a dataframe option that is usually on and is turned off on 32 bit machines. If I had time I'd check that we actually still need to disable rdf on 32 bits, but the failure was not easy to reproduce.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:68,safety,reme,remember,68,"@dpiparo I thought rdf was reenabled on 32 bits at some point, do I remember incorrectly? @amadio I don't have anything against a dataframe option that is usually on and is turned off on 32 bit machines. If I had time I'd check that we actually still need to disable rdf on 32 bits, but the failure was not easy to reproduce.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:160,deployability,build,build,160,"@amadio @Axel-Naumann ok, that is getting out of hands :sweat_smile: we can have the very first commit to just fix the issue OR add the dataframe option to the build system, which is really a lot of changes. Is just fixing the 32bit issue it worth?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:26,usability,person,person,26,"We should discuss that in person, given that this is easily possible :-) Can we do that on Monday?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:130,modifiability,maintain,maintain,130,"As I mentioned on mattermost, the proliferation of bug prone if conditions is also getting out of hand and will be a nightmare to maintain. I think that we should reconsider this way of disabling RDataFrame and just re-enable it (and other deps) everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:130,safety,maintain,maintain,130,"As I mentioned on mattermost, the proliferation of bug prone if conditions is also getting out of hand and will be a nightmare to maintain. I think that we should reconsider this way of disabling RDataFrame and just re-enable it (and other deps) everywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:27,integrability,coupl,couple,27,Much nicer! I think with a couple of tweaks this will be ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:27,modifiability,coupl,couple,27,Much nicer! I think with a couple of tweaks this will be ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:27,testability,coupl,couple,27,Much nicer! I think with a couple of tweaks this will be ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3959:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3959
https://github.com/root-project/root/pull/3960:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3960
https://github.com/root-project/root/pull/3961:469,availability,State,Statement,469,"Hello. I can also add my output showing the old bugs with PostgreSQL date/time fields. Writing ""2019-06-03 13:01:01"" to a timestamp field with a time zone (+03 in my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1506,availability,State,Statement,1506,"$1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Jun 3 10:01:01 2019. root [11] stmt->NextResultRow(). (bool) true. root [12] stmt->GetTimestamp(0, year, month, day, hour, minute, sec, mcs). (bool) true. root [13] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<"". Microsecond: ""<<mcs<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:469,integrability,State,Statement,469,"Hello. I can also add my output showing the old bugs with PostgreSQL date/time fields. Writing ""2019-06-03 13:01:01"" to a timestamp field with a time zone (+03 in my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1506,integrability,State,Statement,1506,"$1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Jun 3 10:01:01 2019. root [11] stmt->NextResultRow(). (bool) true. root [12] stmt->GetTimestamp(0, year, month, day, hour, minute, sec, mcs). (bool) true. root [13] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<"". Microsecond: ""<<mcs<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:217,interoperability,Format,Format,217,"Hello. I can also add my output showing the old bugs with PostgreSQL date/time fields. Writing ""2019-06-03 13:01:01"" to a timestamp field with a time zone (+03 in my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1254,interoperability,Format,Format,1254,"_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Jun 3 10:01:01 2019. root [11] stmt->NextResultRow(). (bool) true. root [12] stmt->GetTimestamp(0,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:2777,modifiability,variab,variable,2777,", 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Jun 3 10:01:01 2019. root [11] stmt->NextResultRow(). (bool) true. root [12] stmt->GetTimestamp(0, year, month, day, hour, minute, sec, mcs). (bool) true. root [13] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<"". Microsecond: ""<<mcs<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. Microsecond: . root [14] stmt->NextResultRow(). (bool) true. root [15] time_stamp = stmt->GetTimestamp(0). (TDatime &) Mon Jun 3 10:01:01 2019. ```. And also the last reading returns 987600 microseconds (not 987654) because the date/time string variable is larger than kBindStringSize. ![timestamptz](https://user-images.githubusercontent.com/35529614/59505391-f278cc00-8ead-11e9-84cb-4b4fea2e959a.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:74,performance,time,time,74,"Hello. I can also add my output showing the old bugs with PostgreSQL date/time fields. Writing ""2019-06-03 13:01:01"" to a timestamp field with a time zone (+03 in my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:122,performance,time,timestamp,122,"Hello. I can also add my output showing the old bugs with PostgreSQL date/time fields. Writing ""2019-06-03 13:01:01"" to a timestamp field with a time zone (+03 in my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:145,performance,time,time,145,"Hello. I can also add my output showing the old bugs with PostgreSQL date/time fields. Writing ""2019-06-03 13:01:01"" to a timestamp field with a time zone (+03 in my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Mo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1134,performance,time,timestamp,1134,"ith a time zone (+03 in my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1159,performance,time,time,1159,"n my case):. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x5582858f97d0. root [2] TSQLStatement* stmt = pSQLServer->Statement(""insert into test_table values ($1)""). (TSQLStatement *) 0x5582856015a0. root [3] stmt->NextIteration(). (bool) true. root [4] stmt->SetDatime(0, 2019, 6, 3, 13, 1, 1). (bool) true. root [5] stmt->NextIteration(). (bool) true. root [6] TDatime time_stamp(2019, 6, 3, 13, 1, 1). (TDatime &) Mon Jun 3 13:01:01 2019. root [7] stmt->SetDatime(0, time_stamp). (bool) true. root [8] stmt->NextIteration(). (bool) true. root [9] stmt->SetTimestamp(0, 2019, 6, 3, 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Ju",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:2765,performance,time,time,2765,", 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Jun 3 10:01:01 2019. root [11] stmt->NextResultRow(). (bool) true. root [12] stmt->GetTimestamp(0, year, month, day, hour, minute, sec, mcs). (bool) true. root [13] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<"". Microsecond: ""<<mcs<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. Microsecond: . root [14] stmt->NextResultRow(). (bool) true. root [15] time_stamp = stmt->GetTimestamp(0). (TDatime &) Mon Jun 3 10:01:01 2019. ```. And also the last reading returns 987600 microseconds (not 987654) because the date/time string variable is larger than kBindStringSize. ![timestamptz](https://user-images.githubusercontent.com/35529614/59505391-f278cc00-8ead-11e9-84cb-4b4fea2e959a.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:2820,performance,time,timestamptz,2820,", 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Jun 3 10:01:01 2019. root [11] stmt->NextResultRow(). (bool) true. root [12] stmt->GetTimestamp(0, year, month, day, hour, minute, sec, mcs). (bool) true. root [13] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<"". Microsecond: ""<<mcs<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. Microsecond: . root [14] stmt->NextResultRow(). (bool) true. root [15] time_stamp = stmt->GetTimestamp(0). (TDatime &) Mon Jun 3 10:01:01 2019. ```. And also the last reading returns 987600 microseconds (not 987654) because the date/time string variable is larger than kBindStringSize. ![timestamptz](https://user-images.githubusercontent.com/35529614/59505391-f278cc00-8ead-11e9-84cb-4b4fea2e959a.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:2841,usability,user,user-images,2841,", 13, 1, 1, 987654). (bool) true. root [10] stmt->NextIteration(). (bool) true. root [11] stmt->SetTimestamp(0, time_stamp). (bool) true. root [12] stmt->Process(). (bool) true. ```. Reading from the timestamp field with the time zone gives wrong ""2019-06-03 10:01:01"" value:. ```. root [0] TString conString = TString::Format(""pgsql://%s/%s"", ""xxxxxxx"", ""test_db""). (TString &) ""pgsql://xxxxxxx/test_db""[32]. root [1] TSQLServer* pSQLServer =TSQLServer::Connect(conString, ""xxxxxxx"", ""xxxxxxx"") . (TSQLServer *) 0x55cee530db80. root [2] TSQLStatement* stmt = pSQLServer->Statement(""select test_time_tz from test_table""). (TSQLStatement *) 0x55cee5346320. root [3] stmt->Process(). (bool) true. root [4] stmt->StoreResult(). (bool) true. root [5] stmt->NextResultRow(). (bool) true. root [6] Int_t year, month, day, hour, minute, sec, mcs;. root [7] stmt->GetDatime(0, year, month, day, hour, minute, sec). (bool) true. root [8] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. root [9] stmt->NextResultRow(). (bool) true. root [10] TDatime time_stamp = stmt->GetDatime(0). (TDatime &) Mon Jun 3 10:01:01 2019. root [11] stmt->NextResultRow(). (bool) true. root [12] stmt->GetTimestamp(0, year, month, day, hour, minute, sec, mcs). (bool) true. root [13] cout<<""Year: ""<<year<<"". Month: ""<<month<<"". Day: ""<<day<<"". Hour:""<<hour<<"". Minute: ""<<minute<<"". Second: ""<<sec<<"". Microsecond: ""<<mcs<<endl;. Year: 2019. Month: 6. Day: 3. Hour:10. Minute: 1. Second: 1. Microsecond: . root [14] stmt->NextResultRow(). (bool) true. root [15] time_stamp = stmt->GetTimestamp(0). (TDatime &) Mon Jun 3 10:01:01 2019. ```. And also the last reading returns 987600 microseconds (not 987654) because the date/time string variable is larger than kBindStringSize. ![timestamptz](https://user-images.githubusercontent.com/35529614/59505391-f278cc00-8ead-11e9-84cb-4b4fea2e959a.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:67,availability,error,error,67,@kgertsenberger please fork also roottest to fix the Windows build error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:61,deployability,build,build,61,@kgertsenberger please fork also roottest to fix the Windows build error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:67,performance,error,error,67,@kgertsenberger please fork also roottest to fix the Windows build error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:67,safety,error,error,67,@kgertsenberger please fork also roottest to fix the Windows build error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:67,usability,error,error,67,@kgertsenberger please fork also roottest to fix the Windows build error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:69,availability,error,error,69,"> @kgertsenberger please fork also roottest to fix the Windows build error. @bellenot Good afternoon, Done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:63,deployability,build,build,63,"> @kgertsenberger please fork also roottest to fix the Windows build error. @bellenot Good afternoon, Done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:69,performance,error,error,69,"> @kgertsenberger please fork also roottest to fix the Windows build error. @bellenot Good afternoon, Done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:69,safety,error,error,69,"> @kgertsenberger please fork also roottest to fix the Windows build error. @bellenot Good afternoon, Done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:69,usability,error,error,69,"> @kgertsenberger please fork also roottest to fix the Windows build error. @bellenot Good afternoon, Done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:489,deployability,manag,management,489,"> In my mind, we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:489,energy efficiency,manag,management,489,"> In my mind, we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:235,interoperability,plug,plugins,235,"> In my mind, we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:917,interoperability,specif,specification,917,"> In my mind, we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1279,interoperability,specif,specify,1279,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1654,interoperability,specif,specified,1654,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1911,interoperability,format,format,1911,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1926,interoperability,plug,plugins,1926,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:847,modifiability,paramet,parameter,847,"> In my mind, we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1090,performance,time,timestamp,1090,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1232,performance,time,timezone,1232,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1507,performance,time,timezone,1507,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:489,safety,manag,management,489,"> In my mind, we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:214,usability,usab,usable,214,"> In my mind, we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:1051,usability,support,supports,1051,"we should provide real implementation . > ```. > TSQLStatement::SetTimestamp(Int_t, const TTimeStamp&). > TSQLStatement::GetTimestamp(Int_t, TTimeStamp&). > ```. > Otherwise these methods will be non-usable for other SQL plugins. > In principle, `TPgSQLStatement::GetTimestamp` could be just copy into `TSQLStatement`. > And same approach used for `SetTimestamp`. Unfortunately, it is impossible to implement these functions directly in TSQLStatement for all cases (database management systems: MySQL, PostgreSQL, Oracle...) because of the following important reasons:. 1. The one possible function with fractions of a second which can be used in TSQLStatement to set and get TTimeStamp. `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. has the last parameter defined everywhere as a fraction of a second without strict specification what fraction means: milliseconds, microseconds, nanoseconds... For example, PostgreSQL returns microseconds, but MySQL supports and can return nanoseconds in timestamp value, So, if i don't know what a fraction i get via the function, i can't set TTimeStamp with nanoseconds. 2. TTimeStamp class has timezone value (opposed to TDatime) and i must specify whether it is in UTC in the TTimeStamp constructor:. `TTimeStamp (UInt_t year, UInt_t month, UInt_t day, UInt_t hour, UInt_t min, UInt_t sec, UInt_t nsec=0, Bool_t isUTC=kTRUE, Int_t secOffset=0)`. But I don't know what timezone returns from the function above (in 1.). In PostgreSQL - TPgSQLStatement it is in UTC, in MySQL - TMySQLStatement it is not UTC. If it is specified that ""virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)"" function always returns microseconds in the last field (indeed, it is better in nanoseconds) and always in UTC format for all plugins/DBMS, new functions could be copied to TSQLStatement. Sorry for the long answer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:612,deployability,depend,dependent,612,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:612,integrability,depend,dependent,612,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:395,modifiability,inherit,inherited,395,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:612,modifiability,depend,dependent,612,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:648,performance,time,timestamp,648,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:703,reliability,doe,doen,703,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:612,safety,depend,dependent,612,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:612,testability,depend,dependent,612,"> 1. If `frac` has different meaning in different SQL databases, one has to provide proper solution. > For instance, one can introduce `virtual Long_t TSQLStatement::GetTimeFractionUnit()`,. > which can return value representing 1 seconds (like 10^9 for nanoseconds or 10^6 for mus). If`we add virtual Long_t TSQLStatement::GetTimeFractionUnit()`, we also need to implement this function in all inherited classes. So, instead virtual Get/SetTimestamp(TTimeStamp) we will have another virtual function whiich should be also implemented for all DBMS. I'm not sure but may be in TMySQLStatement the fraction can be dependent on SQL column definition (timestamp definition in ""create table""), but may be it doen't. > 2. Probably, we should provide TTimeStamp with UTC in `TSQLStatement::GetTimeStamp`. > And try to provide proper solution for MySQL. Otherwise method only will be implemented in. > PostgreSQL. As a result, which decision are you choosing? I can move my functions to the TSQLStatement class but i think it should be thoughtful and considered decision. Or new functions are not necessary at all...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:209,availability,error,error,209,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:215,integrability,messag,messages,215,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:73,interoperability,plug,plugins,73,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:215,interoperability,messag,messages,215,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:209,performance,error,error,209,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:209,safety,error,error,209,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:97,usability,indicat,indicate,97,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:209,usability,error,error,209,"I guess, there is nobody who can implement all these methods for all SQL plugins. But we need to indicate problem if somebody tries to call GetTimeStamp, which is not implemented. I will merge your PR and add error messages to TSQLStatement methods afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:408,deployability,deploy,deploy,408,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:88,interoperability,specif,specify,88,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:127,interoperability,format,format,127,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:370,interoperability,plug,plugins,370,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:587,interoperability,plug,plugins,587,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:122,performance,time,time,122,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:400,performance,time,time,400,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:479,performance,time,time,479,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:435,safety,test,test,435,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:549,security,modif,modifications,549,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:435,testability,test,test,435,"Good morning. As you wish. In principle, I can move the functions to the base class and specify that microseconds and UTC time format are required from `virtual Bool_t GetTimestamp(Int_t npar, Int_t& year, Int_t& month, Int_t& day, Int_t& hour, Int_t& min, Int_t& sec, Int_t& frac)`. As a result of the merging, I think it is possible to implement new functions for all plugins, but it requires much time to deploy the others DBMS and test databases. But unfortunately I have no time now but i hope i'll find it in the future. It also requires some modifications of the existing code in plugins. For example, TMySQLStatement always returns 0 in the fraction part .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:149,interoperability,plug,plugins,149,"@kgertsenberger . As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 . If you can implement methods for other plugins - it would be grate. . Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:213,safety,test,testing,213,"@kgertsenberger . As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 . If you can implement methods for other plugins - it would be grate. . Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:213,testability,test,testing,213,"@kgertsenberger . As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 . If you can implement methods for other plugins - it would be grate. . Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:271,testability,simpl,simple,271,"@kgertsenberger . As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 . If you can implement methods for other plugins - it would be grate. . Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:271,usability,simpl,simple,271,"@kgertsenberger . As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 . If you can implement methods for other plugins - it would be grate. . Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3962:92,interoperability,format,format,92,"The changes to the class still hold valid, I was held back by a strange behaviour in `clang-format`. Will resume work asap, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:36,safety,valid,valid,36,"The changes to the class still hold valid, I was held back by a strange behaviour in `clang-format`. Will resume work asap, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:72,usability,behavi,behaviour,72,"The changes to the class still hold valid, I was held back by a strange behaviour in `clang-format`. Will resume work asap, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:106,usability,resum,resume,106,"The changes to the class still hold valid, I was held back by a strange behaviour in `clang-format`. Will resume work asap, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3964:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:4,availability,failur,failure,4,the failure are real and due to a compiler bug which introduce (infinite) loop where there isn't ... Trying to narrow down and/or avoid the pattern provoking this ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:118,availability,down,down,118,the failure are real and due to a compiler bug which introduce (infinite) loop where there isn't ... Trying to narrow down and/or avoid the pattern provoking this ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:4,deployability,fail,failure,4,the failure are real and due to a compiler bug which introduce (infinite) loop where there isn't ... Trying to narrow down and/or avoid the pattern provoking this ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:4,performance,failur,failure,4,the failure are real and due to a compiler bug which introduce (infinite) loop where there isn't ... Trying to narrow down and/or avoid the pattern provoking this ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:4,reliability,fail,failure,4,the failure are real and due to a compiler bug which introduce (infinite) loop where there isn't ... Trying to narrow down and/or avoid the pattern provoking this ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:130,safety,avoid,avoid,130,the failure are real and due to a compiler bug which introduce (infinite) loop where there isn't ... Trying to narrow down and/or avoid the pattern provoking this ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:25,availability,failur,failure,25,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:187,availability,failur,failure,187,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:25,deployability,fail,failure,25,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:187,deployability,fail,failure,187,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:107,integrability,coupl,couple,107,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:107,modifiability,coupl,couple,107,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:25,performance,failur,failure,25,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:187,performance,failur,failure,187,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:25,reliability,fail,failure,25,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:187,reliability,fail,failure,187,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3964:107,testability,coupl,couple,107,@couet @Axel-Naumann the failure on mac1014/cxx17 in tutorial/v7/line.cxx is unclear and has happened in a couple of other PR but is not easily reproducible (even on the machine with the failure).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3964
https://github.com/root-project/root/pull/3965:38,usability,prefer,prefer,38,"@amadio, thanks for the comments. I'd prefer to have the discussion about TMemFile under the relevant PR #3891 as some of your questions and remarks are answered there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3971:0,reliability,Doe,Does,0,Does this actually work? What's the output of. ```. cd $ROOTSYS; cmake -Dall=On ../src; make -j 8; ctest -j 8. cd ../src. git status. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:126,usability,statu,status,126,Does this actually work? What's the output of. ```. cd $ROOTSYS; cmake -Dall=On ../src; make -j 8; ctest -j 8. cd ../src. git status. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:178,deployability,build,build,178,"I wanted to make a ""no functional change"" PR, but looking at `.gitignore` I realized we had all those useless lines. I never see the source directory of ROOT being polluted with build artifacts (i.e. your git status would come clean). The same is not true for roottest, though. I think we can safely remove these lines from the `.gitignore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:184,deployability,artifact,artifacts,184,"I wanted to make a ""no functional change"" PR, but looking at `.gitignore` I realized we had all those useless lines. I never see the source directory of ROOT being polluted with build artifacts (i.e. your git status would come clean). The same is not true for roottest, though. I think we can safely remove these lines from the `.gitignore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:293,safety,safe,safely,293,"I wanted to make a ""no functional change"" PR, but looking at `.gitignore` I realized we had all those useless lines. I never see the source directory of ROOT being polluted with build artifacts (i.e. your git status would come clean). The same is not true for roottest, though. I think we can safely remove these lines from the `.gitignore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:209,usability,statu,status,209,"I wanted to make a ""no functional change"" PR, but looking at `.gitignore` I realized we had all those useless lines. I never see the source directory of ROOT being polluted with build artifacts (i.e. your git status would come clean). The same is not true for roottest, though. I think we can safely remove these lines from the `.gitignore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:14,availability,failur,failures,14,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:280,availability,failur,failures,280,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:14,deployability,fail,failures,14,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:139,deployability,instal,installed,139,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:176,deployability,build,build,176,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:280,deployability,fail,failures,280,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:326,deployability,instal,install,326,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:201,integrability,configur,configured,201,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:201,modifiability,configur,configured,201,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:14,performance,failur,failures,14,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:280,performance,failur,failures,280,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:14,reliability,fail,failures,14,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:280,reliability,fail,failures,280,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:201,security,configur,configured,201,"The Fedora 29 failures are due to what I talked about before lunch. I think it's caused by recent changes to roottest that now pick up any installed ROOT over the one from the build directory that was configured with `-Droottest=ON`. @oshadura said she will take a look. BTW, the failures started happening because I ran `yum install root` on the Fedora 29 nodes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:52,availability,state,stated,52,Right. Could you paste the output of the commands I stated above? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:52,integrability,state,stated,52,Right. Could you paste the output of the commands I stated above? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:41,usability,command,commands,41,Right. Could you paste the output of the commands I stated above? Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:20,deployability,instal,install,20,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:119,deployability,version,versions,119,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:238,deployability,build,build,238,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:119,integrability,version,versions,119,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:170,integrability,discover,discover,170,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:170,interoperability,discover,discover,170,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:119,modifiability,version,versions,119,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:139,testability,understand,understand,139,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:160,usability,help,helped,160,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:170,usability,discov,discover,170,"Can we please *not* install ROOT on the nodes we use for Jenkins? Thanks! (I really want to make sure we're not mixing versions etc - I do understand that this helped us discover a bug in this case, but still.) Can you remove it from the build nodes, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:89,deployability,version,versions,89,"Well, right now roottest is picking up the wrong root for me, so I'd have to uninstall 3 versions of root to make it work. Once roottest is fixed I will do it, but that is something I often check, so I'm pretty sure the git status will come clean.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:89,integrability,version,versions,89,"Well, right now roottest is picking up the wrong root for me, so I'd have to uninstall 3 versions of root to make it work. Once roottest is fixed I will do it, but that is something I often check, so I'm pretty sure the git status will come clean.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:89,modifiability,version,versions,89,"Well, right now roottest is picking up the wrong root for me, so I'd have to uninstall 3 versions of root to make it work. Once roottest is fixed I will do it, but that is something I often check, so I'm pretty sure the git status will come clean.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:224,usability,statu,status,224,"Well, right now roottest is picking up the wrong root for me, so I'd have to uninstall 3 versions of root to make it work. Once roottest is fixed I will do it, but that is something I often check, so I'm pretty sure the git status will come clean.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:50,deployability,instal,installed,50,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:68,deployability,version,versions,68,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:105,deployability,fail,failing,105,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:135,deployability,instal,installed,135,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:68,integrability,version,versions,68,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:68,modifiability,version,versions,68,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:105,reliability,fail,failing,105,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:88,safety,test,tests,88,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:88,testability,test,tests,88,"The only way to really make it sure is to have it installed! :-) If versions are mixed, tests will start failing. That's exactly why I installed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:34,deployability,build,build,34,@Axel-Naumann I just ran the ROOT build + ctest and `git status` comes out clean (no files are created in the source directory). Can we merge this now?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:57,usability,statu,status,57,@Axel-Naumann I just ran the ROOT build + ctest and `git status` comes out clean (no files are created in the source directory). Can we merge this now?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3975:4,availability,failur,failure,4,"The failure above on macOS is due to `-Dfail-on-missing=ON` being passed, and PCRE not being found, which is the expected behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:4,deployability,fail,failure,4,"The failure above on macOS is due to `-Dfail-on-missing=ON` being passed, and PCRE not being found, which is the expected behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:4,performance,failur,failure,4,"The failure above on macOS is due to `-Dfail-on-missing=ON` being passed, and PCRE not being found, which is the expected behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:4,reliability,fail,failure,4,"The failure above on macOS is due to `-Dfail-on-missing=ON` being passed, and PCRE not being found, which is the expected behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:122,usability,behavi,behavior,122,"The failure above on macOS is due to `-Dfail-on-missing=ON` being passed, and PCRE not being found, which is the expected behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:21,safety,review,review,21,@Axel-Naumann Please review and let me know if this is ok for fixing ROOT-9385. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:21,testability,review,review,21,@Axel-Naumann Please review and let me know if this is ok for fixing ROOT-9385. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:27,deployability,build,builds,27,"I've fixed rootspi, so all builds pass now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3976:19,deployability,build,build,19,"Sorry, the Windows build failed because of me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3976
https://github.com/root-project/root/pull/3976:25,deployability,fail,failed,25,"Sorry, the Windows build failed because of me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3976
https://github.com/root-project/root/pull/3976:25,reliability,fail,failed,25,"Sorry, the Windows build failed because of me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3976
https://github.com/root-project/root/pull/3976:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3976
https://github.com/root-project/root/pull/3977:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3979:4,availability,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3979
https://github.com/root-project/root/pull/3979:4,deployability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3979
https://github.com/root-project/root/pull/3979:4,performance,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3979
https://github.com/root-project/root/pull/3979:4,reliability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3979
https://github.com/root-project/root/pull/3982:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:23,safety,test,test,23,Can we *please* have a test for this? E.g. looking at the `TStreamerInfoElements` to correspond to what we expect?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:23,testability,test,test,23,Can we *please* have a test for this? E.g. looking at the `TStreamerInfoElements` to correspond to what we expect?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:81,deployability,contain,containing,81,...and this is a blocker for v6.18 - I really want to reduce the amount of files containing broken `tuple`s.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:54,energy efficiency,reduc,reduce,54,...and this is a blocker for v6.18 - I really want to reduce the amount of files containing broken `tuple`s.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3983:4,deployability,build,builds,4,"The builds actually passed. Jenkins itself had some problem, though:. ```. 10:41:22 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:84,deployability,Build,Build,84,"The builds actually passed. Jenkins itself had some problem, though:. ```. 10:41:22 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:90,deployability,fail,failed,90,"The builds actually passed. Jenkins itself had some problem, though:. ```. 10:41:22 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:120,interoperability,plug,plugins,120,"The builds actually passed. Jenkins itself had some problem, though:. ```. 10:41:22 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:90,reliability,fail,failed,90,"The builds actually passed. Jenkins itself had some problem, though:. ```. 10:41:22 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:128,usability,workflow,workflow,128,"The builds actually passed. Jenkins itself had some problem, though:. ```. 10:41:22 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:141,usability,Workflow,WorkflowRun,141,"The builds actually passed. Jenkins itself had some problem, though:. ```. 10:41:22 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3984:26,deployability,releas,release,26,Can you add a line to the release notes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3984
https://github.com/root-project/root/pull/3984:29,deployability,updat,update,29,"This is for 6.20 only, I can update the release notes for this and other removed options in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3984
https://github.com/root-project/root/pull/3984:40,deployability,releas,release,40,"This is for 6.20 only, I can update the release notes for this and other removed options in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3984
https://github.com/root-project/root/pull/3984:94,integrability,sub,subsequent,94,"This is for 6.20 only, I can update the release notes for this and other removed options in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3984
https://github.com/root-project/root/pull/3984:29,safety,updat,update,29,"This is for 6.20 only, I can update the release notes for this and other removed options in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3984
https://github.com/root-project/root/pull/3984:29,security,updat,update,29,"This is for 6.20 only, I can update the release notes for this and other removed options in a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3984
https://github.com/root-project/root/pull/3986:25,deployability,version,version,25,@moneta Does the current version fix the problem you see?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:17,energy efficiency,current,current,17,@moneta Does the current version fix the problem you see?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:25,integrability,version,version,25,@moneta Does the current version fix the problem you see?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:25,modifiability,version,version,25,@moneta Does the current version fix the problem you see?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:8,reliability,Doe,Does,8,@moneta Does the current version fix the problem you see?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3987:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3987
https://github.com/root-project/root/pull/3987:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3987
https://github.com/root-project/root/pull/3991:24,deployability,build,build,24,Thanks LGTM waiting for build to finish. I'll merge tonight.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3991
https://github.com/root-project/root/pull/3992:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3992
https://github.com/root-project/root/pull/3992:116,interoperability,format,formats,116,"Hello @goi42,. excellent pull request, thanks! I took the liberty of beefing up the documentation such that doxygen formats it nicely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3992
https://github.com/root-project/root/pull/3992:84,usability,document,documentation,84,"Hello @goi42,. excellent pull request, thanks! I took the liberty of beefing up the documentation such that doxygen formats it nicely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3992
https://github.com/root-project/root/pull/3995:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3996:19,usability,user,users,19,"That would require users to change to `find_package(UNURAN)`, `find_package(Unuran)` would not work anymore. Guilherme takes over :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/4003:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4003
https://github.com/root-project/root/pull/4003:42,deployability,fail,failed,42,"I'm at a loss as to why one of the checks failed, and nothing comes up when I try to look at the details. What should I fix?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4003
https://github.com/root-project/root/pull/4003:42,reliability,fail,failed,42,"I'm at a loss as to why one of the checks failed, and nothing comes up when I try to look at the details. What should I fix?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4003
https://github.com/root-project/root/pull/4003:9,security,loss,loss,9,"I'm at a loss as to why one of the checks failed, and nothing comes up when I try to look at the details. What should I fix?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4003
https://github.com/root-project/root/pull/4005:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4006:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:198,modifiability,paramet,parameter,198,"How sure are we that, once ROOT is compiled with one system of units, trying to use the other system at runtime there will not be any bugs due to hard-coded values in ROOT (e.g. as default function parameter value, etc) with the wrong value?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:63,testability,unit,units,63,"How sure are we that, once ROOT is compiled with one system of units, trying to use the other system at runtime there will not be any bugs due to hard-coded values in ROOT (e.g. as default function parameter value, etc) with the wrong value?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4007:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4007
https://github.com/root-project/root/pull/4008:47,energy efficiency,current,currently,47,"The way to implement RNTupleReader::Print() is currently being reconsidered, so reviewing is not necessary at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4008
https://github.com/root-project/root/pull/4008:80,safety,review,reviewing,80,"The way to implement RNTupleReader::Print() is currently being reconsidered, so reviewing is not necessary at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4008
https://github.com/root-project/root/pull/4008:80,testability,review,reviewing,80,"The way to implement RNTupleReader::Print() is currently being reconsidered, so reviewing is not necessary at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4008
https://github.com/root-project/root/pull/4011:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4011:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4011:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4013:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:57,deployability,fail,failing,57,@chrisburr please fork also roottest in order to fix the failing build on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:65,deployability,build,build,65,@chrisburr please fork also roottest in order to fix the failing build on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:57,reliability,fail,failing,57,@chrisburr please fork also roottest in order to fix the failing build on Windows,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4014:53,deployability,manag,management,53,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:53,energy efficiency,manag,management,53,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:339,energy efficiency,alloc,allocation,339,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:294,interoperability,registr,registry,294,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:46,performance,memor,memory,46,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:189,performance,memor,memory,189,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:249,reliability,doe,doesn,249,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:53,safety,manag,management,53,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:46,usability,memor,memory,46,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:189,usability,memor,memory,189,"@Axel-Naumann As discussed, this PR moves the memory management of the pages to the concrete storage backend implementation. For the TFile backend, this now also gets rid of the additional memory copy. A storage backend may use the page pool but it doesn't have to. The page pool is now a mere registry of pages, it is not involved in the allocation anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4015:249,safety,avoid,avoiding,249,"@hageboeck @lmoneta : these are super simple additional classes. following up on our discussion on the ""RooAbsPdf"" vs. ""RooAbsReal"" business: do you think it would be useful for me to template these classes in such a way as to meet my suggestion of avoiding code duplication?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:38,testability,simpl,simple,38,"@hageboeck @lmoneta : these are super simple additional classes. following up on our discussion on the ""RooAbsPdf"" vs. ""RooAbsReal"" business: do you think it would be useful for me to template these classes in such a way as to meet my suggestion of avoiding code duplication?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:38,usability,simpl,simple,38,"@hageboeck @lmoneta : these are super simple additional classes. following up on our discussion on the ""RooAbsPdf"" vs. ""RooAbsReal"" business: do you think it would be useful for me to template these classes in such a way as to meet my suggestion of avoiding code duplication?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:327,deployability,integr,integrals,327,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:359,deployability,integr,integrate,359,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:380,deployability,integr,integrals,380,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:478,deployability,integr,integrals,478,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:567,deployability,integr,integral,567,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:327,integrability,integr,integrals,327,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:359,integrability,integr,integrate,359,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:380,integrability,integr,integrals,380,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:478,integrability,integr,integrals,478,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:567,integrability,integr,integral,567,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:327,interoperability,integr,integrals,327,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:359,interoperability,integr,integrate,359,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:380,interoperability,integr,integrals,380,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:478,interoperability,integr,integrals,478,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:567,interoperability,integr,integral,567,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:327,modifiability,integr,integrals,327,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:359,modifiability,integr,integrate,359,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:380,modifiability,integr,integrals,380,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:478,modifiability,integr,integrals,478,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:567,modifiability,integr,integral,567,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:327,reliability,integr,integrals,327,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:359,reliability,integr,integrate,359,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:380,reliability,integr,integrals,380,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:478,reliability,integr,integrals,478,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:567,reliability,integr,integral,567,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:511,safety,test,test,511,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:327,security,integr,integrals,327,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:359,security,integr,integrate,359,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:380,security,integr,integrals,380,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:478,security,integr,integrals,478,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:567,security,integr,integral,567,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:327,testability,integr,integrals,327,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:359,testability,integr,integrate,359,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:380,testability,integr,integrals,380,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:478,testability,integr,integrals,478,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:506,testability,unit,unit,506,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:511,testability,test,test,511,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:567,testability,integr,integral,567,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:295,usability,person,person,295,"Hi Carsten, looks great so far. Three things, two optional ones:. - I left some comments to modernise the iterators. - Did I miss something or is RooPower implementing the same as RooPolynomial? - I believe we have a solution to resolve the PDF-Function duality, but that is better discussed in person. - [Optional] Analytical integrals. Since we know how to integrate these, the integrals (at least over `x`) should probably be implemented. This gets around triggering numeric integrals. I can send you a unit test class that runs the numeric against the analytical integral and compares. Interested? This should speed up the norms quite a bit. - [Optional, but nice to have] Could you send me plots of the two? I would like to include them on the webpage and try to make it look like this:. https://root.cern.ch/doc/master/classRooJohnson.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,deployability,integr,integral,99,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:163,deployability,integr,integrals,163,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:1289,energy efficiency,Draw,Draw,1289,"sing RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). pow1.plotOn(frame,ROOT.RooFit.Name(""pow1_curve""),ROOT.RooFit.LineColor(ROOT.kGreen)). pow2.plotOn(frame,ROOT.RooFit.Name(""pow2_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). pow3.plotOn(frame,ROOT.RooFit.Name(""pow3_curve""),ROOT.RooFit.LineColor(ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:1538,energy efficiency,Draw,Draw,1538,"RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). pow1.plotOn(frame,ROOT.RooFit.Name(""pow1_curve""),ROOT.RooFit.LineColor(ROOT.kGreen)). pow2.plotOn(frame,ROOT.RooFit.Name(""pow2_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). pow3.plotOn(frame,ROOT.RooFit.Name(""pow3_curve""),ROOT.RooFit.LineColor(ROOT.kYellow)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.5,0.5,0.9,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""pow0_curve""),""x^{-1}"",""l""). leg.AddEntry(frame.getCurve(""pow1_curve""),""x^{0.5}",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:2309,energy efficiency,Draw,Draw,2309,"b.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). pow1.plotOn(frame,ROOT.RooFit.Name(""pow1_curve""),ROOT.RooFit.LineColor(ROOT.kGreen)). pow2.plotOn(frame,ROOT.RooFit.Name(""pow2_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). pow3.plotOn(frame,ROOT.RooFit.Name(""pow3_curve""),ROOT.RooFit.LineColor(ROOT.kYellow)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.5,0.5,0.9,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""pow0_curve""),""x^{-1}"",""l""). leg.AddEntry(frame.getCurve(""pow1_curve""),""x^{0.5}"",""l""). leg.AddEntry(frame.getCurve(""pow2_curve""),""x^{2}"",""l""). leg.AddEntry(frame.getCurve(""pow3_curve""),""2x^{2}-0.6x^{2.5}"",""l""). leg.Draw(). . c.SaveAs(""pow.pdf"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:2676,energy efficiency,Draw,Draw,2676,"b.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). pow1.plotOn(frame,ROOT.RooFit.Name(""pow1_curve""),ROOT.RooFit.LineColor(ROOT.kGreen)). pow2.plotOn(frame,ROOT.RooFit.Name(""pow2_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). pow3.plotOn(frame,ROOT.RooFit.Name(""pow3_curve""),ROOT.RooFit.LineColor(ROOT.kYellow)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.5,0.5,0.9,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""pow0_curve""),""x^{-1}"",""l""). leg.AddEntry(frame.getCurve(""pow1_curve""),""x^{0.5}"",""l""). leg.AddEntry(frame.getCurve(""pow2_curve""),""x^{2}"",""l""). leg.AddEntry(frame.getCurve(""pow3_curve""),""2x^{2}-0.6x^{2.5}"",""l""). leg.Draw(). . c.SaveAs(""pow.pdf"").",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,integrability,integr,integral,99,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:163,integrability,integr,integrals,163,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,interoperability,integr,integral,99,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:163,interoperability,integr,integrals,163,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,modifiability,integr,integral,99,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:163,modifiability,integr,integrals,163,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:510,modifiability,paramet,parameters,510,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,reliability,integr,integral,99,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:163,reliability,integr,integrals,163,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:321,reliability,doe,does,321,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,security,integr,integral,99,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:163,security,integr,integrals,163,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,testability,integr,integral,99,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:163,testability,integr,integrals,163,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:271,usability,user,user,271,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:607,usability,person,person,607,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:644,usability,document,documentation,644,"Thanks for all the suggestions. I implemented all of them (hopefully) and also added an analytical integral for RooPower. For RooExpPoly, I don't think analytical integrals can be implemented easily, unless for a few special cases (only order-1 terms), in which case the user is better-off using RooExponential. RooPower does *not* do the same thing as RooPolynomial, the main difference being that it allows for non-integer and negative exponents, which can also be derived RooAbsReal Objects (functions, fit parameters) themselves, which RooPolynomial cannot do. Let's indeed discuss the duality issue in person. Here's some code to make the documentation plots you asked for. [exppoly.pdf](https://github.com/root-project/root/files/3348729/exppoly.pdf). [pow.pdf](https://github.com/root-project/root/files/3348730/pow.pdf). For RooExpPoly:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,-10,10]""). . poly0 = ws.factory(""RooExpPoly::poly0(x,{1})""). poly1 = ws.factory(""RooExpPoly::poly1(x,{-1},2)""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooExpPoly"")). c = ROOT.TCanvas(""canvas""). poly0.plotOn(frame,ROOT.RooFit.Name(""poly0_curve""),ROOT.RooFit.LineColor(ROOT.kRed)). poly1.plotOn(frame,ROOT.RooFit.Name(""poly1_curve""),ROOT.RooFit.LineColor(ROOT.kBlue)). frame.Draw(). frame.GetYaxis().SetTitle(""f(x)""). . leg = ROOT.TLegend(0.2,0.5,0.4,0.9). leg.SetFillStyle(0). leg.SetLineWidth(0). leg.AddEntry(frame.getCurve(""poly0_curve""),""exp(x)"",""l""). leg.AddEntry(frame.getCurve(""poly1_curve""),""exp(-x^{2})"",""l""). leg.Draw(). . c.SaveAs(""exppoly.pdf""). For RooPower:. import ROOT. . ws = ROOT.RooWorkspace(""ws""). ws.factory(""x[1.,0.3,10]""). . pow0 = ws.factory(""RooPower::pow0(x,{1.},{-1})""). pow1 = ws.factory(""RooPower::pow1(x,{1.},{0.5})""). pow2 = ws.factory(""RooPower::pow2(x,{1.},{2.})""). pow3 = ws.factory(""RooPower::pow3(x,{2.,-0.6},{2.,2.5})""). . frame = ws.var(""x"").frame(ROOT.RooFit.Title(""RooPower"")). c = ROOT.TCanvas(""canvas""). pow0.plotOn(frame,ROOT.RooFit.Name(""pow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:80,usability,document,documentation,80,"Hi @cburgard,. Oksana pointed me to this PR. I had asked you about plots in the documentation, so I added them. I also fixed the override warning from the last CI run. I pushed the two commits directly to your branch, so check please if we are ready to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,deployability,version,version,99,"In the (long) time since this PR was created, a lot of debugging has happened. I have pushed a new version that is relatively stable. Please re-review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,integrability,version,version,99,"In the (long) time since this PR was created, a lot of debugging has happened. I have pushed a new version that is relatively stable. Please re-review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:99,modifiability,version,version,99,"In the (long) time since this PR was created, a lot of debugging has happened. I have pushed a new version that is relatively stable. Please re-review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:14,performance,time,time,14,"In the (long) time since this PR was created, a lot of debugging has happened. I have pushed a new version that is relatively stable. Please re-review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:144,safety,review,review,144,"In the (long) time since this PR was created, a lot of debugging has happened. I have pushed a new version that is relatively stable. Please re-review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:144,testability,review,review,144,"In the (long) time since this PR was created, a lot of debugging has happened. I have pushed a new version that is relatively stable. Please re-review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4016:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/rtcxxmod with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:2,performance,Perform,Performance,2,**Performance results**. Ran all tests using ctest and compared the results of this PR and root master with -Druntime_cxxmodules=On and -Druntime_cxxmodules=Off. The results can be seen [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit?usp=sharing).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:33,safety,test,tests,33,**Performance results**. Ran all tests using ctest and compared the results of this PR and root master with -Druntime_cxxmodules=On and -Druntime_cxxmodules=Off. The results can be seen [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit?usp=sharing).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:33,testability,test,tests,33,**Performance results**. Ran all tests using ctest and compared the results of this PR and root master with -Druntime_cxxmodules=On and -Druntime_cxxmodules=Off. The results can be seen [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit?usp=sharing).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:2,usability,Perform,Performance,2,**Performance results**. Ran all tests using ctest and compared the results of this PR and root master with -Druntime_cxxmodules=On and -Druntime_cxxmodules=Off. The results can be seen [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit?usp=sharing).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:9,availability,failur,failures,9,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:9,deployability,fail,failures,9,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:78,deployability,build,builds,78,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:9,performance,failur,failures,9,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:9,reliability,fail,failures,9,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:4,safety,test,test,4,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:4,testability,test,test,4,"The test failures are not related to this PR, they are present in the nightly builds.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4017:0,availability,Failur,Failure,0,Failure on `ROOT-performance-centos7-multicore` has nothing to do with SQL - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4017
https://github.com/root-project/root/pull/4017:0,deployability,Fail,Failure,0,Failure on `ROOT-performance-centos7-multicore` has nothing to do with SQL - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4017
https://github.com/root-project/root/pull/4017:0,performance,Failur,Failure,0,Failure on `ROOT-performance-centos7-multicore` has nothing to do with SQL - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4017
https://github.com/root-project/root/pull/4017:17,performance,perform,performance-,17,Failure on `ROOT-performance-centos7-multicore` has nothing to do with SQL - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4017
https://github.com/root-project/root/pull/4017:0,reliability,Fail,Failure,0,Failure on `ROOT-performance-centos7-multicore` has nothing to do with SQL - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4017
https://github.com/root-project/root/pull/4017:17,usability,perform,performance-,17,Failure on `ROOT-performance-centos7-multicore` has nothing to do with SQL - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4017
https://github.com/root-project/root/pull/4019:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4019
https://github.com/root-project/root/pull/4019:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4019
https://github.com/root-project/root/pull/4019:91,deployability,updat,update,91,"I'm sorry, I don't know what happened exactly with the git history. Will close this PR and update it with a new one and the changes discussed in the comments by @bluehood and @stwunsch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4019
https://github.com/root-project/root/pull/4019:91,safety,updat,update,91,"I'm sorry, I don't know what happened exactly with the git history. Will close this PR and update it with a new one and the changes discussed in the comments by @bluehood and @stwunsch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4019
https://github.com/root-project/root/pull/4019:91,security,updat,update,91,"I'm sorry, I don't know what happened exactly with the git history. Will close this PR and update it with a new one and the changes discussed in the comments by @bluehood and @stwunsch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4019
https://github.com/root-project/root/pull/4019:73,usability,close,close,73,"I'm sorry, I don't know what happened exactly with the git history. Will close this PR and update it with a new one and the changes discussed in the comments by @bluehood and @stwunsch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4019
https://github.com/root-project/root/pull/4023:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4023
https://github.com/root-project/root/pull/4025:214,availability,toler,tolerance,214,"@ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:214,reliability,toleran,tolerance,214,"@ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:54,safety,test,test,54,"@ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:71,safety,reme,remember,71,"@ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:54,testability,test,test,54,"@ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:216,availability,toler,tolerance,216,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:304,deployability,contain,contains,304,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:288,integrability,messag,message,288,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:288,interoperability,messag,message,288,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:216,reliability,toleran,tolerance,216,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:56,safety,test,test,56,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:73,safety,reme,remember,73,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4025:56,testability,test,test,56,"> @ellert for me looks good, even though sadly we can't test it in CI! I remember that on aarch we had insignificant file size increase. Can I ask you please to add better explanation in commit (for the history) why tolerance was increased (e.g because of aach64 and ppc64le). The commit message already contains this information (click on the ... button top see more than the first line in the browser).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4025
https://github.com/root-project/root/pull/4026:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4026
https://github.com/root-project/root/pull/4026:67,deployability,infrastructur,infrastructure,67,@ellert Could you please fork also roottest? There is a bug in the infrastructure that will fail Windows builds if you don't have a fork of roottest as well as root... Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4026
https://github.com/root-project/root/pull/4026:92,deployability,fail,fail,92,@ellert Could you please fork also roottest? There is a bug in the infrastructure that will fail Windows builds if you don't have a fork of roottest as well as root... Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4026
https://github.com/root-project/root/pull/4026:105,deployability,build,builds,105,@ellert Could you please fork also roottest? There is a bug in the infrastructure that will fail Windows builds if you don't have a fork of roottest as well as root... Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4026
https://github.com/root-project/root/pull/4026:92,reliability,fail,fail,92,@ellert Could you please fork also roottest? There is a bug in the infrastructure that will fail Windows builds if you don't have a fork of roottest as well as root... Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4026
https://github.com/root-project/root/pull/4026:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4026
https://github.com/root-project/root/pull/4027:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4027
https://github.com/root-project/root/pull/4029:79,deployability,depend,depend,79,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:148,deployability,fail,fail,148,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:266,deployability,integr,integrity,266,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:341,deployability,fail,fail,341,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:79,integrability,depend,depend,79,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:266,integrability,integr,integrity,266,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:266,interoperability,integr,integrity,266,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:79,modifiability,depend,depend,79,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:266,modifiability,integr,integrity,266,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:214,performance,parallel,parallel,214,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:148,reliability,fail,fail,148,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:266,reliability,integr,integrity,266,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:341,reliability,fail,fail,341,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:40,safety,test,test,40,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:73,safety,test,tests,73,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:79,safety,depend,depend,79,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:188,safety,test,tests,188,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:199,safety,test,test,199,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:245,safety,test,test,245,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:303,safety,test,test,303,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:266,security,integr,integrity,266,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:40,testability,test,test,40,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:45,testability,coverag,coverage,45,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:73,testability,test,tests,73,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:79,testability,depend,depend,79,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:188,testability,test,tests,188,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:199,testability,test,test,199,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:245,testability,test,test,245,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:266,testability,integr,integrity,266,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:303,testability,test,test,303,"I don't think randomizing will increase test coverage. In any case, some tests depend on others, so running them in random order will cause them to fail. For example, in the TBufferMerger tests, one test writes in parallel to a file and a later test checks the data integrity of the file. If the second test is run before the first, it will fail, which is what happened above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:53,availability,failur,failure,53,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:186,availability,state,statement,186,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:53,deployability,fail,failure,53,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:134,deployability,depend,dependencies,134,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:134,integrability,depend,dependencies,134,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:186,integrability,state,statement,186,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:353,integrability,sub,substantially,353,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:134,modifiability,depend,dependencies,134,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:53,performance,failur,failure,53,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:53,reliability,fail,failure,53,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:317,reliability,doe,does,317,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:19,safety,test,test,19,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:66,safety,test,test,66,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:134,safety,depend,dependencies,134,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:159,safety,test,tests,159,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:339,safety,test,test,339,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:14,testability,unit,unit-test,14,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:66,testability,test,test,66,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:134,testability,depend,dependencies,134,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:159,testability,test,tests,159,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:339,testability,test,test,339,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:344,testability,coverag,coverage,344,"Shouldn't all unit-test be independent? If you see a failure in a test, shouldn't it be reproducible by itself? You could have hidden dependencies between the tests. That's at least the statement from the [gtest guys](https://groups.google.com/d/msg/googletestframework/A_Z_8Ctihmw/quG7RurEz_YJ). But I agree that it does not increase the test coverage substantially.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:4,deployability,depend,dependency,4,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:74,deployability,integr,integrity,74,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:172,deployability,depend,depend,172,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:203,deployability,fail,failed,203,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:348,deployability,depend,depend,348,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:397,deployability,depend,dependency,397,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:4,integrability,depend,dependency,4,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:74,integrability,integr,integrity,74,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:172,integrability,depend,depend,172,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:348,integrability,depend,depend,348,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:397,integrability,depend,dependency,397,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:74,interoperability,integr,integrity,74,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:4,modifiability,depend,dependency,4,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:74,modifiability,integr,integrity,74,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:172,modifiability,depend,depend,172,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:348,modifiability,depend,depend,348,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:397,modifiability,depend,dependency,397,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:74,reliability,integr,integrity,74,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:203,reliability,fail,failed,203,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:4,safety,depend,dependency,4,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:108,safety,test,test,108,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:172,safety,depend,depend,172,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:210,safety,test,tests,210,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:337,safety,test,tests,337,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:348,safety,depend,depend,348,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:397,safety,depend,dependency,397,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:74,security,integr,integrity,74,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:4,testability,depend,dependency,4,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:74,testability,integr,integrity,74,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:108,testability,test,test,108,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:172,testability,depend,depend,172,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:210,testability,test,tests,210,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:337,testability,test,tests,337,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:348,testability,depend,depend,348,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:397,testability,depend,dependency,397,"The dependency is not hidden in this case, it's wanted. How could I check integrity of a file in a separate test than the one that creates the file otherwise? One needs to depend on the other. The other failed tests are probably similar. I think it's fine to add the randomization on a case-by-case basis. I don't think that just having tests that depend on one another is bad per se, only if the dependency is not intentional.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:105,deployability,build,build,105,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:221,deployability,build,builds,221,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:99,safety,test,test,99,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:168,safety,test,test,168,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:183,safety,test,test,183,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:212,safety,test,test,212,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:301,safety,test,test,301,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:333,safety,test,tests,333,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:391,safety,test,test,391,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:99,testability,test,test,99,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:168,testability,test,test,168,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:183,testability,test,test,183,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:212,testability,test,test,212,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:301,testability,test,test,301,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:333,testability,test,tests,333,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:391,testability,test,test,391,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:306,usability,command,commands,306,"Adding some clarification:. In the old days, CTest did not have the notion of ""before running this test, build the following"". So Pere resorted to ""before running this test, run that test (which isn't actually a test but builds stuff but details)"". Given that we haven't migrated to the new CTest pre-test commands we cannot run the tests in random order. Once we do this PR will be a great test that we did our job correctly!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:106,integrability,sub,sub-tests,106,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:30,modifiability,concern,concerning,30,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:48,safety,test,test,48,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:59,safety,test,tests,59,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:110,safety,test,tests,110,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:30,testability,concern,concerning,30,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:48,testability,test,test,48,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:59,testability,test,tests,59,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4029:110,testability,test,tests,110,"The commit in this PR is only concerning Google test based tests, where you can pass an option to run the sub-tests that are part of the same binary in random order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4029
https://github.com/root-project/root/pull/4030:212,availability,error,error,212,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:132,integrability,interfac,interfaces,132,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:89,interoperability,specif,specifier,89,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:132,interoperability,interfac,interfaces,132,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:132,modifiability,interfac,interfaces,132,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:212,performance,error,error,212,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:123,safety,compl,complex,123,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:212,safety,error,error,212,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:234,safety,detect,detected,234,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:123,security,compl,complex,123,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:234,security,detect,detected,234,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:168,testability,simpl,simple,168,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:168,usability,simpl,simple,168,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:212,usability,error,error,212,"@alja Should I merge it? The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4030:51,interoperability,specif,specifier,51,"@linev Yes, please merge. I can later add override specifier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4030
https://github.com/root-project/root/pull/4034:21,testability,simpl,simplicity,21,I'll merge given the simplicity of the change. Thanks @pamputt !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4034
https://github.com/root-project/root/pull/4034:21,usability,simpl,simplicity,21,I'll merge given the simplicity of the change. Thanks @pamputt !,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4034
https://github.com/root-project/root/pull/4037:4,usability,feedback,feedback,4,Any feedback? @oshadura @bbockelm @pcanal @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4037:84,testability,simpl,simple,84,"@fylux thank you very much for your work! It is a very nice idea! I will start from simple comment: can you please remove ZSTD part (it is not a purpose of this PR as I understood), because you have it actually here https://github.com/root-project/root/pull/3947. Then code will become much more cleaner so we can actually see your changes related to other compression algorithms. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4037:84,usability,simpl,simple,84,"@fylux thank you very much for your work! It is a very nice idea! I will start from simple comment: can you please remove ZSTD part (it is not a purpose of this PR as I understood), because you have it actually here https://github.com/root-project/root/pull/3947. Then code will become much more cleaner so we can actually see your changes related to other compression algorithms. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4037:42,energy efficiency,current,current,42,Thanks for working on this! > What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? This allows the user to be confident they can read any file they have produce with ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4037:59,modifiability,maintain,maintaining,59,Thanks for working on this! > What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? This allows the user to be confident they can read any file they have produce with ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4037:59,safety,maintain,maintaining,59,Thanks for working on this! > What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? This allows the user to be confident they can read any file they have produce with ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4037:141,usability,user,user,141,Thanks for working on this! > What is the current value of maintaining the legacy algorithm (from 1990) of ROOT compression? This allows the user to be confident they can read any file they have produce with ROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4037:17,usability,close,close,17,"@fylux should we close this PR and then you will open a new one, dedicated to compression algorithm improvements (no ZSTD)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4037
https://github.com/root-project/root/pull/4038:54,integrability,messag,message,54,Could you please provide an explanation in the commit message why you need to disable them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4038
https://github.com/root-project/root/pull/4038:54,interoperability,messag,message,54,Could you please provide an explanation in the commit message why you need to disable them?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4038
https://github.com/root-project/root/pull/4038:81,deployability,updat,update,81,"@amadio Most of gui examples have to be disabled, they cannot be run in batch. I update comments in the commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4038
https://github.com/root-project/root/pull/4038:72,integrability,batch,batch,72,"@amadio Most of gui examples have to be disabled, they cannot be run in batch. I update comments in the commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4038
https://github.com/root-project/root/pull/4038:72,performance,batch,batch,72,"@amadio Most of gui examples have to be disabled, they cannot be run in batch. I update comments in the commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4038
https://github.com/root-project/root/pull/4038:81,safety,updat,update,81,"@amadio Most of gui examples have to be disabled, they cannot be run in batch. I update comments in the commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4038
https://github.com/root-project/root/pull/4038:81,security,updat,update,81,"@amadio Most of gui examples have to be disabled, they cannot be run in batch. I update comments in the commit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4038
https://github.com/root-project/root/pull/4039:88,integrability,sub,sub-pads,88,@Axel-Naumann I need to adjust RPad code to include position in same way as size. . Now sub-pads displayed correctly. Later one could change again - just to have reasonably working code. I will provide PR for 6.18 soon,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4039
https://github.com/root-project/root/pull/4039:22,usability,confirm,confirm,22,@Axel-Naumann Can you confirm my changes? Can I merge same changes into 6.18 branch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4039
https://github.com/root-project/root/pull/4039:131,deployability,manag,manage,131,I will need to bring the master to what we discussed: making *all* values optional (i.e. share whether it was set or not). I might manage next week - if not I'll be on travel for a month :-( So this should get in either way (and esp into v6.18) - thanks for doing all that work!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4039
https://github.com/root-project/root/pull/4039:131,energy efficiency,manag,manage,131,I will need to bring the master to what we discussed: making *all* values optional (i.e. share whether it was set or not). I might manage next week - if not I'll be on travel for a month :-( So this should get in either way (and esp into v6.18) - thanks for doing all that work!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4039
https://github.com/root-project/root/pull/4039:89,interoperability,share,share,89,I will need to bring the master to what we discussed: making *all* values optional (i.e. share whether it was set or not). I might manage next week - if not I'll be on travel for a month :-( So this should get in either way (and esp into v6.18) - thanks for doing all that work!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4039
https://github.com/root-project/root/pull/4039:131,safety,manag,manage,131,I will need to bring the master to what we discussed: making *all* values optional (i.e. share whether it was set or not). I might manage next week - if not I'll be on travel for a month :-( So this should get in either way (and esp into v6.18) - thanks for doing all that work!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4039
https://github.com/root-project/root/pull/4041:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=On -Dwebgui=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=On -Dwebgui=On -DCMAKE_CXX_STANDARD=14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:85,availability,error,error,85,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:193,availability,state,state,193,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:185,energy efficiency,Current,Current,185,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:91,integrability,messag,messages,91,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:193,integrability,state,state,193,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:91,interoperability,messag,messages,91,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:142,interoperability,platform,platform,142,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:223,interoperability,platform,platforms,223,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:85,performance,error,error,85,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:111,performance,perform,performance-,111,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:85,safety,error,error,85,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:203,safety,test,tested,203,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:203,testability,test,tested,203,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:85,usability,error,error,85,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4041:111,usability,perform,performance-,111,There are issues trying to compile ROOT7 code with only c++11-capable compiler - see error messages from `ROOT-performance-centos7-multicore` platform. . I just remove several commits. Current state was tested on all other platforms.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4041
https://github.com/root-project/root/pull/4043:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:30,safety,review,review,30,@etejedor The PR is ready for review!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:30,testability,review,review,30,@etejedor The PR is ready for review!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:129,integrability,messag,message,129,@etejedor Thanks for the review! I've fixed your comments and squashed them into the last commit (with a more descriptive commit message).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:129,interoperability,messag,message,129,@etejedor Thanks for the review! I've fixed your comments and squashed them into the last commit (with a more descriptive commit message).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:25,safety,review,review,25,@etejedor Thanks for the review! I've fixed your comments and squashed them into the last commit (with a more descriptive commit message).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4043:25,testability,review,review,25,@etejedor Thanks for the review! I've fixed your comments and squashed them into the last commit (with a more descriptive commit message).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4043
https://github.com/root-project/root/pull/4044:46,availability,sli,slightly,46,"Apologies, I think the modifications in #4134 slightly broke this PR. Can you please rebase?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4044
https://github.com/root-project/root/pull/4044:46,reliability,sli,slightly,46,"Apologies, I think the modifications in #4134 slightly broke this PR. Can you please rebase?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4044
https://github.com/root-project/root/pull/4044:23,security,modif,modifications,23,"Apologies, I think the modifications in #4134 slightly broke this PR. Can you please rebase?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4044
https://github.com/root-project/root/pull/4045:12,security,access,accessible,12,Code is not accessible by Jenkins - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4045
https://github.com/root-project/root/pull/4047:14,safety,test,tested,14,Code is never tested by Jenkins - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4047
https://github.com/root-project/root/pull/4047:14,testability,test,tested,14,Code is never tested by Jenkins - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4047
https://github.com/root-project/root/pull/4048:20,deployability,modul,modules,20,"Btw, `property` for modules does not exist. Afaik, this is the only lazy way to inject such a thing lazily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:80,integrability,inject,inject,80,"Btw, `property` for modules does not exist. Afaik, this is the only lazy way to inject such a thing lazily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:20,modifiability,modul,modules,20,"Btw, `property` for modules does not exist. Afaik, this is the only lazy way to inject such a thing lazily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:28,reliability,doe,does,28,"Btw, `property` for modules does not exist. Afaik, this is the only lazy way to inject such a thing lazily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:20,safety,modul,modules,20,"Btw, `property` for modules does not exist. Afaik, this is the only lazy way to inject such a thing lazily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:80,security,inject,inject,80,"Btw, `property` for modules does not exist. Afaik, this is the only lazy way to inject such a thing lazily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:44,deployability,updat,update,44,"Aaaaah wait, there is the ROOT facade! I'll update the PR :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:44,safety,updat,update,44,"Aaaaah wait, there is the ROOT facade! I'll update the PR :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:44,security,updat,update,44,"Aaaaah wait, there is the ROOT facade! I'll update the PR :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:25,deployability,version,version,25,"Fixed, there we go. Lazy version :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:25,integrability,version,version,25,"Fixed, there we go. Lazy version :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:25,modifiability,version,version,25,"Fixed, there we go. Lazy version :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:25,deployability,modul,module,25,Added tests for the ROOT module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:25,modifiability,modul,module,25,Added tests for the ROOT module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:6,safety,test,tests,6,Added tests for the ROOT module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:25,safety,modul,module,25,Added tests for the ROOT module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4048:6,testability,test,tests,6,Added tests for the ROOT module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4048
https://github.com/root-project/root/pull/4049:0,testability,Plan,Plan,0,Plan to make new PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4049
https://github.com/root-project/root/pull/4051:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora29/python3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4051
https://github.com/root-project/root/pull/4052:131,availability,error,errors,131,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:146,availability,failur,failures,146,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:10,deployability,Build,Build,10,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:16,deployability,fail,failed,16,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:95,deployability,build,build,95,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:146,deployability,fail,failures,146,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:46,interoperability,plug,plugins,46,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:131,performance,error,errors,131,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:146,performance,failur,failures,146,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:16,reliability,fail,failed,16,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:146,reliability,fail,failures,146,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:131,safety,error,errors,131,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:141,safety,test,test,141,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:141,testability,test,test,141,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:54,usability,workflow,workflow,54,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:67,usability,Workflow,WorkflowRun,67,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4052:131,usability,error,errors,131,"`10:38:17 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun`. Checking each build, they actually passed without errors or test failures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4052
https://github.com/root-project/root/pull/4057:25,safety,test,test,25,jenkins has no chance to test this JS code - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4057
https://github.com/root-project/root/pull/4057:25,testability,test,test,25,jenkins has no chance to test this JS code - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4057
https://github.com/root-project/root/pull/4058:36,usability,progress,progress,36,"Converted to draft because ""work in progress"" label will be discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4058
https://github.com/root-project/root/pull/4058:83,usability,help,help,83,"No need anymore, in rootbench we will use FIXTURES_CLEANUP https://cmake.org/cmake/help/latest/prop_test/FIXTURES_CLEANUP.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4058
https://github.com/root-project/root/pull/4060:25,integrability,pub,public,25,"Problem with changing of public interfaces - the changes themself. RZip.h was introduced 5 years ago, but R__Zip (and several other) C functins exists for many years. And some old ROOT-based apps may just import these symbols even without direct include of RZip.h. See how changes looked when RZip.h was introduced:. https://github.com/root-project/root/commit/54aaba7dd8a877168f80b0dacb08748ea1d8fe28#diff-0e44fcc38860ef8d08ab17825437332e. In my mind it may end up in big problems. . I do not see here any performance gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:32,integrability,interfac,interfaces,32,"Problem with changing of public interfaces - the changes themself. RZip.h was introduced 5 years ago, but R__Zip (and several other) C functins exists for many years. And some old ROOT-based apps may just import these symbols even without direct include of RZip.h. See how changes looked when RZip.h was introduced:. https://github.com/root-project/root/commit/54aaba7dd8a877168f80b0dacb08748ea1d8fe28#diff-0e44fcc38860ef8d08ab17825437332e. In my mind it may end up in big problems. . I do not see here any performance gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:32,interoperability,interfac,interfaces,32,"Problem with changing of public interfaces - the changes themself. RZip.h was introduced 5 years ago, but R__Zip (and several other) C functins exists for many years. And some old ROOT-based apps may just import these symbols even without direct include of RZip.h. See how changes looked when RZip.h was introduced:. https://github.com/root-project/root/commit/54aaba7dd8a877168f80b0dacb08748ea1d8fe28#diff-0e44fcc38860ef8d08ab17825437332e. In my mind it may end up in big problems. . I do not see here any performance gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:32,modifiability,interfac,interfaces,32,"Problem with changing of public interfaces - the changes themself. RZip.h was introduced 5 years ago, but R__Zip (and several other) C functins exists for many years. And some old ROOT-based apps may just import these symbols even without direct include of RZip.h. See how changes looked when RZip.h was introduced:. https://github.com/root-project/root/commit/54aaba7dd8a877168f80b0dacb08748ea1d8fe28#diff-0e44fcc38860ef8d08ab17825437332e. In my mind it may end up in big problems. . I do not see here any performance gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:507,performance,perform,performance,507,"Problem with changing of public interfaces - the changes themself. RZip.h was introduced 5 years ago, but R__Zip (and several other) C functins exists for many years. And some old ROOT-based apps may just import these symbols even without direct include of RZip.h. See how changes looked when RZip.h was introduced:. https://github.com/root-project/root/commit/54aaba7dd8a877168f80b0dacb08748ea1d8fe28#diff-0e44fcc38860ef8d08ab17825437332e. In my mind it may end up in big problems. . I do not see here any performance gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:507,usability,perform,performance,507,"Problem with changing of public interfaces - the changes themself. RZip.h was introduced 5 years ago, but R__Zip (and several other) C functins exists for many years. And some old ROOT-based apps may just import these symbols even without direct include of RZip.h. See how changes looked when RZip.h was introduced:. https://github.com/root-project/root/commit/54aaba7dd8a877168f80b0dacb08748ea1d8fe28#diff-0e44fcc38860ef8d08ab17825437332e. In my mind it may end up in big problems. . I do not see here any performance gain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:53,deployability,version,versions,53,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:53,integrability,version,versions,53,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:307,integrability,interfac,interfaces,307,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:307,interoperability,interfac,interfaces,307,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:17,modifiability,concern,concern,17,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:53,modifiability,version,versions,53,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:307,modifiability,interfac,interfaces,307,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:253,performance,perform,performance,253,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:17,testability,concern,concern,17,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:253,usability,perform,performance,253,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:299,usability,clear,clearer,299,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation? There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:29,integrability,interfac,interfaces,29,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:55,integrability,pub,public,55,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:170,integrability,pub,public,170,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:29,interoperability,interfac,interfaces,29,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:3,modifiability,concern,concern,3,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:29,modifiability,interfac,interfaces,29,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:154,safety,compl,completely,154,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:154,security,compl,completely,154,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:3,testability,concern,concern,3,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:127,usability,user,users,127,"My concern, that we breaking interfaces which are made public 5 years ago - through RZip.h. . If we don't care about potential users - just remove RZip.h completely from public space. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:331,deployability,API,API,331,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:360,deployability,API,API,360,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:419,deployability,API,API,419,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:479,deployability,API,API,479,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:533,deployability,API,API,533,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:592,deployability,API,API,592,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:51,integrability,interfac,interface,51,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:331,integrability,API,API,331,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:360,integrability,API,API,360,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:419,integrability,API,API,419,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:479,integrability,API,API,479,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:533,integrability,API,API,533,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:592,integrability,API,API,592,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:51,interoperability,interfac,interface,51,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:234,interoperability,compatib,compatibility,234,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:331,interoperability,API,API,331,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:360,interoperability,API,API,360,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:364,interoperability,compatib,compatible,364,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:419,interoperability,API,API,419,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:479,interoperability,API,API,479,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:533,interoperability,API,API,533,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:592,interoperability,API,API,592,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:51,modifiability,interfac,interface,51,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:335,safety,compl,completely,335,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:335,security,compl,completely,335,"Honestly -- indeed, this should be a ROOT-internal interface. There's so many ""magic"" pieces here that I'm suspicious it's actually useful to others. That said, I found the comment about backward compat of *ABI* strange. The backward compatibility of _API_ is indeed more appealing (assuming we don't want to make this an internal API completely). To keep the API compatible, we can always provide both the old and new API (where the old implementation is just a shim to the new API). Heck, it might make since to put the cleaned-up API in a `ROOT::Internal` namespace and then leave the old API for backward compat.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:476,deployability,API,API,476,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:525,deployability,version,versions,525,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:452,integrability,wrap,wrappers,452,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:476,integrability,API,API,476,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:525,integrability,version,versions,525,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:42,interoperability,format,formatted,42,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:452,interoperability,wrapper,wrappers,452,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:476,interoperability,API,API,476,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:525,modifiability,version,versions,525,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:464,usability,support,support,464,"The use of RZip.h - one could create well-formatted "".gz"" file, using ROOT functions. This is provided in TBufferJSON and in THttpServer classes - there are few lines of code like:. https://github.com/root-project/root/blob/master/io/io/src/TBufferJSON.cxx#L764-L818. Here `R__crc32` and `R__memcompress` functions are used. And they should be provided as before. I agree, that all others very special and ROOT internal. . As you proposed, we can keep wrappers to support old API, and declare these functions deprecated. Two versions later they can be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:77,deployability,API,APIs,77,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:255,deployability,API,API,255,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:276,deployability,API,APIs,276,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:77,integrability,API,APIs,77,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:255,integrability,API,API,255,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:276,integrability,API,APIs,276,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:77,interoperability,API,APIs,77,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:255,interoperability,API,API,255,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:276,interoperability,API,APIs,276,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:307,interoperability,compatib,compatibility,307,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:152,modifiability,pac,packages,152,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:321,modifiability,layer,layer,321,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:32,reliability,doe,does,32,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:114,usability,indicat,indicate,114,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:340,usability,user,users,340,"Ok, sounds good to me. @fylux - does this make sense? Basically:. 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:85,deployability,API,APIs,85,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:263,deployability,API,API,263,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:290,deployability,API,APIs,290,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:416,deployability,API,API,416,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:469,deployability,manag,managed,469,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:589,deployability,updat,update,589,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:631,deployability,API,API,631,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:747,deployability,API,APIs,747,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:469,energy efficiency,manag,managed,469,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:85,integrability,API,APIs,85,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:263,integrability,API,API,263,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:290,integrability,API,APIs,290,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:416,integrability,API,API,416,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:631,integrability,API,API,631,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:747,integrability,API,APIs,747,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:85,interoperability,API,APIs,85,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:263,interoperability,API,API,263,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:290,interoperability,API,APIs,290,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:321,interoperability,compatib,compatibility,321,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:416,interoperability,API,API,416,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:441,interoperability,compatib,compatibility,441,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:631,interoperability,API,API,631,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:699,interoperability,compatib,compatibility,699,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:747,interoperability,API,APIs,747,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:160,modifiability,pac,packages,160,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:335,modifiability,layer,layer,335,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:34,reliability,doe,does,34,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:576,reliability,pra,practical,576,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:469,safety,manag,managed,469,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:589,safety,updat,update,589,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:589,security,updat,update,589,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:122,usability,indicat,indicate,122,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:354,usability,user,users,354,"> Ok, sounds good to me. @fylux - does this make sense? Basically:. > . > 1. Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > . > 2. Keep the old APIs (with the C linkage) as a compatibility layer for external users. I assume that now, everything inside ROOT uses the new API, since I do not keep compatibility and I finally managed it to compile. Of course this required to change many files like TKey, TBuffer, etc. Isn't it more practical to update those parts of root to use the new API (like I have already done with other files), instead of keeping compatibility? And if still we want to keep two APIs, how would I implement it? Duplicating code?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:12,deployability,API,APIs,12,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:190,deployability,API,API,190,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:210,deployability,API,APIs,210,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:341,deployability,API,API,341,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:12,integrability,API,APIs,12,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:190,integrability,API,API,190,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:210,integrability,API,APIs,210,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:341,integrability,API,API,341,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:12,interoperability,API,APIs,12,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:190,interoperability,API,API,190,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:210,interoperability,API,APIs,210,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:241,interoperability,compatib,compatibility,241,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:341,interoperability,API,API,341,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:87,modifiability,pac,packages,87,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:255,modifiability,layer,layer,255,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:49,usability,indicat,indicate,49,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:274,usability,user,users,274,". > Put new APIs in a ROOT-internal namespace to indicate they are not meant for other packages to use. Make the linkage C++ while we're at it. Make sure everything inside ROOT uses the new API. > Keep the old APIs (with the C linkage) as a compatibility layer for external users..... (where the old implementation is just a shim to the new API). Yes, this makes sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:35,deployability,API,APIs,35,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:205,deployability,updat,update,205,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:247,deployability,API,API,247,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:349,deployability,updat,updated,349,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:555,deployability,updat,update,555,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:35,integrability,API,APIs,35,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:148,integrability,interfac,interface,148,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:247,integrability,API,API,247,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:382,integrability,interfac,interfaces,382,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:502,integrability,interfac,interface,502,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:607,integrability,interfac,interface,607,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:35,interoperability,API,APIs,35,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:148,interoperability,interfac,interface,148,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:247,interoperability,API,API,247,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:274,interoperability,compatib,compatibility,274,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:382,interoperability,interfac,interfaces,382,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:502,interoperability,interfac,interface,502,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:607,interoperability,interfac,interface,607,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:148,modifiability,interfac,interface,148,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:382,modifiability,interfac,interfaces,382,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:502,modifiability,interfac,interface,502,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:607,modifiability,interfac,interface,607,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:205,safety,updat,update,205,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:349,safety,updat,updated,349,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:555,safety,updat,update,555,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:205,security,updat,update,205,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:349,security,updat,updated,349,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:555,security,updat,update,555,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4060:452,usability,user,user,452,"> And if still we want to keep two APIs, how would I implement it? Duplicating code? Yes but without duplicating code ... instead by having the old interface's function turn around and call the new one. > update those parts of root to use the new API ... instead of keeping compatibility? The two are not mutually exclusive. The ROOT code should be updated but we must keep the old interfaces around as to not 'arbitrarily and without warning breaking user code. I.e. if they have happily used the old interface there is no strong reason to force them to update their code. The most we can do about the old interface is to deprecate it (but I don't know if we have a good mechanism to announce the deprecation)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4060
https://github.com/root-project/root/pull/4063:42,deployability,log,logical,42,Travis complains about some not-processed logical branches. This is ok. One warning should be fixed by #4067 . Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4063
https://github.com/root-project/root/pull/4063:7,safety,compl,complains,7,Travis complains about some not-processed logical branches. This is ok. One warning should be fixed by #4067 . Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4063
https://github.com/root-project/root/pull/4063:42,safety,log,logical,42,Travis complains about some not-processed logical branches. This is ok. One warning should be fixed by #4067 . Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4063
https://github.com/root-project/root/pull/4063:7,security,compl,complains,7,Travis complains about some not-processed logical branches. This is ok. One warning should be fixed by #4067 . Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4063
https://github.com/root-project/root/pull/4063:42,security,log,logical,42,Travis complains about some not-processed logical branches. This is ok. One warning should be fixed by #4067 . Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4063
https://github.com/root-project/root/pull/4063:42,testability,log,logical,42,Travis complains about some not-processed logical branches. This is ok. One warning should be fixed by #4067 . Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4063
https://github.com/root-project/root/pull/4066:72,deployability,log,log,72,@amadio basically I fixed a typo...added a little comment to the commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4066:72,safety,log,log,72,@amadio basically I fixed a typo...added a little comment to the commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4066:72,security,log,log,72,@amadio basically I fixed a typo...added a little comment to the commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4066:72,testability,log,log,72,@amadio basically I fixed a typo...added a little comment to the commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4066:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4066:46,deployability,patch,patches,46,I have cherry-picked 989d9158b6 into v6-18-00-patches as 62bde834ec.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4066:46,safety,patch,patches,46,I have cherry-picked 989d9158b6 into v6-18-00-patches as 62bde834ec.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4066:46,security,patch,patches,46,I have cherry-picked 989d9158b6 into v6-18-00-patches as 62bde834ec.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4066
https://github.com/root-project/root/pull/4069:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_CXX_STANDARD=14 -Droot7=ON -Dwebgui=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4069
https://github.com/root-project/root/pull/4069:0,availability,Error,Errors,0,"Errors coming from platforms, where `c++14` not supported. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4069
https://github.com/root-project/root/pull/4069:19,interoperability,platform,platforms,19,"Errors coming from platforms, where `c++14` not supported. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4069
https://github.com/root-project/root/pull/4069:0,performance,Error,Errors,0,"Errors coming from platforms, where `c++14` not supported. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4069
https://github.com/root-project/root/pull/4069:0,safety,Error,Errors,0,"Errors coming from platforms, where `c++14` not supported. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4069
https://github.com/root-project/root/pull/4069:0,usability,Error,Errors,0,"Errors coming from platforms, where `c++14` not supported. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4069
https://github.com/root-project/root/pull/4069:48,usability,support,supported,48,"Errors coming from platforms, where `c++14` not supported. Merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4069
https://github.com/root-project/root/pull/4070:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4070
https://github.com/root-project/root/pull/4070:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4070
https://github.com/root-project/root/pull/4070:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4070
https://github.com/root-project/root/pull/4071:305,interoperability,standard,standard,305,"Hi @stwunsch ,. In the last [commit](https://github.com/root-project/root/pull/4071/commits/b44ed0c22c82af51bf7d822a29d5c33b9fbf54f7) I have extended the character limit in one line to 120 as in ROOT coding style guide. Please let me know if you find it better this way, otherwise I can just revert it to standard PEP8 and the other changes discussed will still hold",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4071
https://github.com/root-project/root/pull/4071:141,modifiability,exten,extended,141,"Hi @stwunsch ,. In the last [commit](https://github.com/root-project/root/pull/4071/commits/b44ed0c22c82af51bf7d822a29d5c33b9fbf54f7) I have extended the character limit in one line to 120 as in ROOT coding style guide. Please let me know if you find it better this way, otherwise I can just revert it to standard PEP8 and the other changes discussed will still hold",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4071
https://github.com/root-project/root/pull/4071:213,usability,guid,guide,213,"Hi @stwunsch ,. In the last [commit](https://github.com/root-project/root/pull/4071/commits/b44ed0c22c82af51bf7d822a29d5c33b9fbf54f7) I have extended the character limit in one line to 120 as in ROOT coding style guide. Please let me know if you find it better this way, otherwise I can just revert it to standard PEP8 and the other changes discussed will still hold",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4071
https://github.com/root-project/root/pull/4071:16,reliability,doe,does,16,"> Nice! :) Btw, does the final plot change due to the fixed `DeltaR` definition? Yes indeed! The `2el2mu` histogram changes a bit, it has some entries less when using `DeltaR`, though it is not that visible in the plot. The other plots don't change. [higgs_2el2mu_cpp_deltar_yes.pdf](https://github.com/root-project/root/files/3392824/higgs_2el2mu_cpp_deltar_yes.pdf). [higgs_2el2mu_deltar_no.pdf](https://github.com/root-project/root/files/3392825/higgs_2el2mu_deltar_no.pdf).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4071
https://github.com/root-project/root/pull/4072:40,energy efficiency,current,current,40,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:384,energy efficiency,draw,drawn,384,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:469,energy efficiency,Draw,DrawCopy,469,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:66,interoperability,convers,conversion,66,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:167,interoperability,bind,bindings,167,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:213,interoperability,convers,conversion,213,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:167,modifiability,bind,bindings,167,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:224,reliability,doe,does,224,"Just to add on what @maxgalli said, the current PyROOT allows the conversion from Python `None` to C++ null pointer:. https://github.com/root-project/root/blob/master/bindings/pyroot/src/Converters.cxx#L676. Such conversion does not exist in the new Cppyy. Anyway, the tutorial should not pass `None` (or null ptr) as the first argument of `AddEntry`, but the function object that is drawn. In the C++ equivalent of the tutorial, this is done by passing the result of `DrawCopy` to `AddEntry`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:222,energy efficiency,Draw,Draw,222,"Just one last thing, can you edit the commit message to be more explicit about what you did? You can mention that the None -> null pointer conversion is no longer implemented in Cppyy, so that we can't pass the result of `Draw` to `AddEntry`. Anyway, `AddEntry` should receive the function object and not None, which is what is implemented now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:45,integrability,messag,message,45,"Just one last thing, can you edit the commit message to be more explicit about what you did? You can mention that the None -> null pointer conversion is no longer implemented in Cppyy, so that we can't pass the result of `Draw` to `AddEntry`. Anyway, `AddEntry` should receive the function object and not None, which is what is implemented now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:45,interoperability,messag,message,45,"Just one last thing, can you edit the commit message to be more explicit about what you did? You can mention that the None -> null pointer conversion is no longer implemented in Cppyy, so that we can't pass the result of `Draw` to `AddEntry`. Anyway, `AddEntry` should receive the function object and not None, which is what is implemented now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4072:139,interoperability,convers,conversion,139,"Just one last thing, can you edit the commit message to be more explicit about what you did? You can mention that the None -> null pointer conversion is no longer implemented in Cppyy, so that we can't pass the result of `Draw` to `AddEntry`. Anyway, `AddEntry` should receive the function object and not None, which is what is implemented now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4072
https://github.com/root-project/root/pull/4073:18,deployability,updat,update,18,thanks. A similar update might be useful at the end of core/thread/src/TRWMutexImp.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4073
https://github.com/root-project/root/pull/4073:55,energy efficiency,core,core,55,thanks. A similar update might be useful at the end of core/thread/src/TRWMutexImp.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4073
https://github.com/root-project/root/pull/4073:18,safety,updat,update,18,thanks. A similar update might be useful at the end of core/thread/src/TRWMutexImp.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4073
https://github.com/root-project/root/pull/4073:18,security,updat,update,18,thanks. A similar update might be useful at the end of core/thread/src/TRWMutexImp.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4073
https://github.com/root-project/root/pull/4076:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_CXX_STANDARD=14 -Droot7=ON -Dwebgui=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4076
https://github.com/root-project/root/pull/4076:11,deployability,build,build,11,@phsft-bot build just on windows10/default with flags -DCMAKE_CXX_STANDARD=14 -Droot7=ON -Dwebgui=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4076
https://github.com/root-project/root/pull/4076:38,deployability,build,builds,38,"Something complete wrong with windows builds, changes are trivial, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4076
https://github.com/root-project/root/pull/4076:10,safety,compl,complete,10,"Something complete wrong with windows builds, changes are trivial, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4076
https://github.com/root-project/root/pull/4076:10,security,compl,complete,10,"Something complete wrong with windows builds, changes are trivial, merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4076
https://github.com/root-project/root/pull/4077:65,interoperability,specif,specific,65,"Thanks @maxgalli , can you separate this into two commits and be specific about which warnings each change is solving? That is, `""_POSIX_C_SOURCE""/""_XOPEN_SOURCE"" redefined` and `-Wcast-function-type`, respectively.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4077
https://github.com/root-project/root/pull/4077:30,deployability,updat,update,30,Please refer to #4078 for the update,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4077
https://github.com/root-project/root/pull/4077:30,safety,updat,update,30,Please refer to #4078 for the update,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4077
https://github.com/root-project/root/pull/4077:30,security,updat,update,30,Please refer to #4078 for the update,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4077
https://github.com/root-project/root/pull/4079:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_CXX_STANDARD=14 -Droot7=ON -Dwebgui=ON.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4079:11,deployability,build,build,11,@phsft-bot build with flags -DCMAKE_CXX_STANDARD=14 -Droot7=ON -Dwebgui=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4079:0,availability,Error,Errors,0,"Errors on platform, where c++14 does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4079:10,interoperability,platform,platform,10,"Errors on platform, where c++14 does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4079:0,performance,Error,Errors,0,"Errors on platform, where c++14 does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4079:32,reliability,doe,does,32,"Errors on platform, where c++14 does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4079:0,safety,Error,Errors,0,"Errors on platform, where c++14 does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4079:0,usability,Error,Errors,0,"Errors on platform, where c++14 does not work",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4079
https://github.com/root-project/root/pull/4083:77,safety,test,test,77,"I think, it is good idea. We can introduce extra bit to TDirectory class and test it in several places - like when filling TFile header or when creating TKey object. Not good idea is to test such bit in TDatime class - it is definitely wrong place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4083
https://github.com/root-project/root/pull/4083:186,safety,test,test,186,"I think, it is good idea. We can introduce extra bit to TDirectory class and test it in several places - like when filling TFile header or when creating TKey object. Not good idea is to test such bit in TDatime class - it is definitely wrong place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4083
https://github.com/root-project/root/pull/4083:77,testability,test,test,77,"I think, it is good idea. We can introduce extra bit to TDirectory class and test it in several places - like when filling TFile header or when creating TKey object. Not good idea is to test such bit in TDatime class - it is definitely wrong place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4083
https://github.com/root-project/root/pull/4083:186,testability,test,test,186,"I think, it is good idea. We can introduce extra bit to TDirectory class and test it in several places - like when filling TFile header or when creating TKey object. Not good idea is to test such bit in TDatime class - it is definitely wrong place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4083
https://github.com/root-project/root/pull/4083:44,deployability,continu,continue,44,This is a good idea. Closing this as we can continue the conversation https://github.com/root-project/root/pull/4253.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4083
https://github.com/root-project/root/pull/4083:57,interoperability,convers,conversation,57,This is a good idea. Closing this as we can continue the conversation https://github.com/root-project/root/pull/4253.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4083
https://github.com/root-project/root/pull/4088:97,deployability,build,building,97,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:110,deployability,modul,modules,110,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:294,energy efficiency,core,core,294,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:110,modifiability,modul,modules,110,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:420,performance,performance test,performance tests,420,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:110,safety,modul,modules,110,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:432,safety,test,tests,432,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:432,testability,test,tests,432,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:420,usability,perform,performance,420,In the branch we are using https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2 . for building the modules IB. https://github.com/cms-sw/cmsdist/blob/IB/CMSSW_11_0_X/cxxmodule/root.spec#L6. this change is already there. . https://github.com/cms-sw/root/blob/cmscxx/master/610a87c0a2/core/metacling/src/TCling.cxx#L1342. We can try running putting it in and out again but for this we have agree on some set of performance tests. . Do you discussed anything like that with Shahzad or you have any suggestion ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:505,deployability,integr,integration,505,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:588,deployability,build,build,588,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:505,integrability,integr,integration,505,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:505,interoperability,integr,integration,505,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:505,modifiability,integr,integration,505,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:526,performance,perform,performance,526,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:505,reliability,integr,integration,505,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:24,safety,test,testing,24,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:493,safety,test,tested,493,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:622,safety,test,tested,622,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:505,security,integr,integration,505,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:24,testability,test,testing,24,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:493,testability,test,tested,493,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:505,testability,integr,integration,505,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:622,testability,test,tested,622,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:526,usability,perform,performance,526,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:603,usability,tool,tools,603,"Also any suggestion for testing is probably better to go as PR against this base branch:. https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2. which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable). https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1. A PR against this branch could be tested (for integration, not for performance) right away. . This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:10,usability,custom,custom,10,there are custom commits on that branch . https://github.com/cms-sw/root/commits/cmscxx/master/610a87c0a2. which I'd guess up to here : https://github.com/cms-sw/root/commit/610a87c0a2d2339cbeea08dd8fc0daf29650ee18. are whats on master and after - fixes from Yuka and Oksana. . Should I get whats on master and put those other commits on top ? .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:86,deployability,modul,modules,86,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:32,energy efficiency,measur,measure,32,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:86,modifiability,modul,modules,86,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:47,performance,perform,performance,47,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:134,performance,time,time,134,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:86,safety,modul,modules,86,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:47,usability,perform,performance,47,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:67,performance,perform,performance,67,"@mrodozov, yes we will need to rebase it. . @oshadura, yes, I want performance numbers. What’s broken ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4088:67,usability,perform,performance,67,"@mrodozov, yes we will need to rebase it. . @oshadura, yes, I want performance numbers. What’s broken ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4088
https://github.com/root-project/root/pull/4092:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4092
https://github.com/root-project/root/pull/4092:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4092
https://github.com/root-project/root/pull/4093:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4093
https://github.com/root-project/root/pull/4093:16,deployability,build,build,16,Verified on the build node that it fixes the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4093
https://github.com/root-project/root/pull/4093:0,testability,Verif,Verified,0,Verified on the build node that it fixes the issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4093
https://github.com/root-project/root/pull/4093:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4093
https://github.com/root-project/root/pull/4093:49,deployability,build,build,49,"Finally, checking for any other issues in the PR build. Last crashed for no (?) reason.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4093
https://github.com/root-project/root/pull/4094:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=On -Dwebgui=On -DCMAKE_CXX_STANDARD=14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4094
https://github.com/root-project/root/pull/4094:0,deployability,Fail,Failed,0,Failed (as expected) on platform where c++14 not provided. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4094
https://github.com/root-project/root/pull/4094:24,interoperability,platform,platform,24,Failed (as expected) on platform where c++14 not provided. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4094
https://github.com/root-project/root/pull/4094:0,reliability,Fail,Failed,0,Failed (as expected) on platform where c++14 not provided. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4094
https://github.com/root-project/root/pull/4095:61,deployability,depend,dependencies,61,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:142,deployability,depend,dependency,142,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:204,deployability,depend,dependency,204,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:336,deployability,depend,dependencies,336,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:378,energy efficiency,current,current,378,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:61,integrability,depend,dependencies,61,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:142,integrability,depend,dependency,142,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:204,integrability,depend,dependency,204,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:336,integrability,depend,dependencies,336,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:61,modifiability,depend,dependencies,61,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:142,modifiability,depend,dependency,142,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:204,modifiability,depend,dependency,204,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:336,modifiability,depend,dependencies,336,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:61,safety,depend,dependencies,61,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:142,safety,depend,dependency,142,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:204,safety,depend,dependency,204,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:336,safety,depend,dependencies,336,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:61,testability,depend,dependencies,61,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:142,testability,depend,dependency,142,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:204,testability,depend,dependency,204,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:336,testability,depend,dependencies,336,"After moving glew to builtins, I realized that adding proper dependencies in root/graf3d/ directory (a new target GLEW) introduces a circular dependency inside root/graf3d/ between FTGL and RGL (circular dependency was reported by CMake). Initially using TGLIncludes.h was not correct, because since all headers were in the same place, dependencies were never tracked. Now with current approach TGLIncludes.h is not needed anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:79,safety,avoid,avoid,79,"Well, it was never needed as such ... it was just to make includes simpler and avoid ifdefs in every TGL file :) I'm just saying you had to change every file that used it and this is really not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:67,testability,simpl,simpler,67,"Well, it was never needed as such ... it was just to make includes simpler and avoid ifdefs in every TGL file :) I'm just saying you had to change every file that used it and this is really not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:67,usability,simpl,simpler,67,"Well, it was never needed as such ... it was just to make includes simpler and avoid ifdefs in every TGL file :) I'm just saying you had to change every file that used it and this is really not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:161,deployability,upgrad,upgrade,161,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:177,deployability,version,version,177,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:221,deployability,depend,dependency,221,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:177,integrability,version,version,177,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:221,integrability,depend,dependency,221,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:161,modifiability,upgrad,upgrade,161,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:177,modifiability,version,version,177,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:221,modifiability,depend,dependency,221,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:221,safety,depend,dependency,221,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:221,testability,depend,dependency,221,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:135,usability,close,close,135,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:192,usability,help,helps,192,"@osschar I would like to know your opinion about this PR? If you want we can have a chat over Skype...One of benefits, is that we will close Jira issue about an upgrade of glew version and it helps to remove the circular dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:150,usability,close,close,150,"it's the same thing i said earlier ... you have a cut-n-paste of. ```. #ifdef WIN32. #include ""Windows4Root.h"". #endif. #include <GL/glew.h>. ```. in close to hundred files ... and you removed usage of TGLIncludes.h that had this (or similar) before. If you put this back into TGLIncludes, all graf3d/gl files will remain unchanged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:254,availability,Error,Error,254,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:710,availability,Error,Error,710,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1110,availability,error,error,1110,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1273,availability,error,error,1273,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:104,deployability,depend,depends,104,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:181,deployability,depend,depends,181,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:230,deployability,depend,dependency,230,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:278,deployability,depend,dependency,278,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:295,deployability,contain,contains,295,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:388,deployability,depend,depends,388,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:443,deployability,depend,depends,443,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:531,deployability,depend,dependencies,531,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:605,deployability,fail,failed,605,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:613,deployability,Build,Build,613,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:877,deployability,build,building,877,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:912,deployability,modul,modularity,912,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1191,deployability,build,build,1191,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1225,deployability,build,build,1225,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1231,deployability,build,build,1231,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1355,deployability,build,build,1355,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1389,deployability,build,build,1389,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1395,deployability,build,build,1395,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:104,integrability,depend,depends,104,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:181,integrability,depend,depends,181,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:230,integrability,depend,dependency,230,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:278,integrability,depend,dependency,278,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:337,integrability,compon,component,337,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:388,integrability,depend,depends,388,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:443,integrability,depend,depends,443,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:531,integrability,depend,dependencies,531,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:912,integrability,modular,modularity,912,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:337,interoperability,compon,component,337,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:104,modifiability,depend,depends,104,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:181,modifiability,depend,depends,181,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:230,modifiability,depend,dependency,230,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:278,modifiability,depend,dependency,278,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:337,modifiability,compon,component,337,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:388,modifiability,depend,depends,388,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:443,modifiability,depend,depends,443,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:531,modifiability,depend,dependencies,531,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:912,modifiability,modul,modularity,912,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:254,performance,Error,Error,254,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:710,performance,Error,Error,710,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1110,performance,error,error,1110,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1273,performance,error,error,1273,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:605,reliability,fail,failed,605,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:104,safety,depend,depends,104,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:181,safety,depend,depends,181,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:230,safety,depend,dependency,230,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:254,safety,Error,Error,254,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:278,safety,depend,dependency,278,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:388,safety,depend,depends,388,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:443,safety,depend,depends,443,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:531,safety,depend,dependencies,531,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:710,safety,Error,Error,710,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:912,safety,modul,modularity,912,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1078,safety,test,test,1078,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1110,safety,error,error,1110,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1273,safety,error,error,1273,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:104,testability,depend,depends,104,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:181,testability,depend,depends,181,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:230,testability,depend,dependency,230,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:278,testability,depend,dependency,278,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:388,testability,depend,depends,388,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:443,testability,depend,depends,443,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:531,testability,depend,dependencies,531,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:912,testability,modula,modularity,912,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1078,testability,test,test,1078,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:254,usability,Error,Error,254,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:710,usability,Error,Error,710,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1110,usability,error,error,1110,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1273,usability,error,error,1273,"@osschar the problem that it will not work... Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. ```. CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. ""FTGL"" of type SHARED_LIBRARY. depends on ""RGL"" (weak). ""RGL"" of type SHARED_LIBRARY. depends on ""FTGL"" (weak). At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. CMake Generate step failed. Build files cannot be regenerated correctly. make: *** [Makefile:9096: cmake_check_build_system] Error 1. ```. Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. -------------------------------------------------------------------------------------. Here is a test PR I opened to show you an error for your proposal: https://github.com/root-project/root/pull/4786. ```. C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:108,availability,redund,redundant,108,"What I can try is to remove . ```. #ifdef WIN32. #include ""Windows4Root.h"". #endif. ```. Maybe this code is redundant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:108,deployability,redundan,redundant,108,"What I can try is to remove . ```. #ifdef WIN32. #include ""Windows4Root.h"". #endif. ```. Maybe this code is redundant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:108,reliability,redundan,redundant,108,"What I can try is to remove . ```. #ifdef WIN32. #include ""Windows4Root.h"". #endif. ```. Maybe this code is redundant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:108,safety,redund,redundant,108,"What I can try is to remove . ```. #ifdef WIN32. #include ""Windows4Root.h"". #endif. ```. Maybe this code is redundant?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,availability,redund,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? @Axel-Naumann @osschar . I tried and actually it used/needed widely over graf3d, so I will leave it like this! Let me know if you have any ideas how to improve it, otherwise I think it is ready to go. Please note this PR resolves as well https://sft.its.cern.ch/jira/browse/ROOT-10302 issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,deployability,redundan,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? @Axel-Naumann @osschar . I tried and actually it used/needed widely over graf3d, so I will leave it like this! Let me know if you have any ideas how to improve it, otherwise I think it is ready to go. Please note this PR resolves as well https://sft.its.cern.ch/jira/browse/ROOT-10302 issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,reliability,redundan,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? @Axel-Naumann @osschar . I tried and actually it used/needed widely over graf3d, so I will leave it like this! Let me know if you have any ideas how to improve it, otherwise I think it is ready to go. Please note this PR resolves as well https://sft.its.cern.ch/jira/browse/ROOT-10302 issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,safety,redund,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? @Axel-Naumann @osschar . I tried and actually it used/needed widely over graf3d, so I will leave it like this! Let me know if you have any ideas how to improve it, otherwise I think it is ready to go. Please note this PR resolves as well https://sft.its.cern.ch/jira/browse/ROOT-10302 issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,availability,Error,Error,270,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:740,availability,Error,Error,740,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1067,availability,error,error,1067,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1197,availability,error,error,1197,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,deployability,depend,depends,112,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,deployability,depend,depends,189,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,deployability,depend,dependency,238,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,deployability,depend,dependency,294,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:311,deployability,contain,contains,311,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:408,deployability,depend,depends,408,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:467,deployability,depend,depends,467,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:557,deployability,depend,dependencies,557,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:633,deployability,fail,failed,633,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:641,deployability,Build,Build,641,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:915,deployability,build,building,915,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:950,deployability,modul,modularity,950,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1115,deployability,build,build,1115,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1149,deployability,build,build,1149,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1155,deployability,build,build,1155,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1279,deployability,build,build,1279,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1313,deployability,build,build,1313,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1319,deployability,build,build,1319,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,integrability,depend,depends,112,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,integrability,depend,depends,189,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,integrability,depend,dependency,238,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,integrability,depend,dependency,294,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:353,integrability,compon,component,353,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:408,integrability,depend,depends,408,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:467,integrability,depend,depends,467,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:557,integrability,depend,dependencies,557,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:950,integrability,modular,modularity,950,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:353,interoperability,compon,component,353,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,modifiability,depend,depends,112,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,modifiability,depend,depends,189,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,modifiability,depend,dependency,238,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,modifiability,depend,dependency,294,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:353,modifiability,compon,component,353,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:408,modifiability,depend,depends,408,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:467,modifiability,depend,depends,467,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:557,modifiability,depend,dependencies,557,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:950,modifiability,modul,modularity,950,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,performance,Error,Error,270,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:740,performance,Error,Error,740,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1067,performance,error,error,1067,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1197,performance,error,error,1197,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:633,reliability,fail,failed,633,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,safety,depend,depends,112,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,safety,depend,depends,189,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,safety,depend,dependency,238,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,safety,Error,Error,270,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,safety,depend,dependency,294,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:408,safety,depend,depends,408,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:467,safety,depend,depends,467,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:557,safety,depend,dependencies,557,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:740,safety,Error,Error,740,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:950,safety,modul,modularity,950,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1035,safety,test,test,1035,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1067,safety,error,error,1067,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1197,safety,error,error,1197,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,testability,depend,depends,112,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,testability,depend,depends,189,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,testability,depend,dependency,238,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,testability,depend,dependency,294,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:408,testability,depend,depends,408,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:467,testability,depend,depends,467,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:557,testability,depend,dependencies,557,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:950,testability,modula,modularity,950,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1035,testability,test,test,1035,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,usability,Error,Error,270,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:740,usability,Error,Error,740,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1067,usability,error,error,1067,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1197,usability,error,error,1197,"> @osschar the problem that it will not work... > . > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > . > ```. > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > ""FTGL"" of type SHARED_LIBRARY. > depends on ""RGL"" (weak). > ""RGL"" of type SHARED_LIBRARY. > depends on ""FTGL"" (weak). > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > CMake Generate step failed. Build files cannot be regenerated correctly. > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > ```. > . > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > . > Here is a test PR I opened to show you an error for your proposal: #4786. > . > ```. > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > ```. Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,availability,redund,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? I'd have guessed it is needed (as we now know :) ) ... the windows part was maintained by Timur so I don't know what's real issue behind and if there was any change for windows 10. I do know however that there is pretty big difference in WGL and GLX implementation for RGL rendering contexts and render surfaces. Probably something for Cocoa as well, another thing that was done by Timur :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,deployability,redundan,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? I'd have guessed it is needed (as we now know :) ) ... the windows part was maintained by Timur so I don't know what's real issue behind and if there was any change for windows 10. I do know however that there is pretty big difference in WGL and GLX implementation for RGL rendering contexts and render surfaces. Probably something for Cocoa as well, another thing that was done by Timur :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:216,modifiability,maintain,maintained,216,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? I'd have guessed it is needed (as we now know :) ) ... the windows part was maintained by Timur so I don't know what's real issue behind and if there was any change for windows 10. I do know however that there is pretty big difference in WGL and GLX implementation for RGL rendering contexts and render surfaces. Probably something for Cocoa as well, another thing that was done by Timur :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,reliability,redundan,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? I'd have guessed it is needed (as we now know :) ) ... the windows part was maintained by Timur so I don't know what's real issue behind and if there was any change for windows 10. I do know however that there is pretty big difference in WGL and GLX implementation for RGL rendering contexts and render surfaces. Probably something for Cocoa as well, another thing that was done by Timur :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:129,safety,redund,redundant,129,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? I'd have guessed it is needed (as we now know :) ) ... the windows part was maintained by Timur so I don't know what's real issue behind and if there was any change for windows 10. I do know however that there is pretty big difference in WGL and GLX implementation for RGL rendering contexts and render surfaces. Probably something for Cocoa as well, another thing that was done by Timur :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:216,safety,maintain,maintained,216,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? I'd have guessed it is needed (as we now know :) ) ... the windows part was maintained by Timur so I don't know what's real issue behind and if there was any change for windows 10. I do know however that there is pretty big difference in WGL and GLX implementation for RGL rendering contexts and render surfaces. Probably something for Cocoa as well, another thing that was done by Timur :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:423,testability,context,contexts,423,"> What I can try is to remove. > . > ```. > #ifdef WIN32. > #include ""Windows4Root.h"". > #endif. > ```. > . > Maybe this code is redundant? I'd have guessed it is needed (as we now know :) ) ... the windows part was maintained by Timur so I don't know what's real issue behind and if there was any change for windows 10. I do know however that there is pretty big difference in WGL and GLX implementation for RGL rendering contexts and render surfaces. Probably something for Cocoa as well, another thing that was done by Timur :(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,availability,Error,Error,270,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:754,availability,Error,Error,754,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1091,availability,error,error,1091,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1221,availability,error,error,1221,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,deployability,depend,depends,112,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,deployability,depend,depends,189,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,deployability,depend,dependency,238,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,deployability,depend,dependency,294,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:311,deployability,contain,contains,311,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:412,deployability,depend,depends,412,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:475,deployability,depend,depends,475,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:567,deployability,depend,dependencies,567,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:645,deployability,fail,failed,645,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:653,deployability,Build,Build,653,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:941,deployability,build,building,941,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:976,deployability,modul,modularity,976,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1139,deployability,build,build,1139,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1173,deployability,build,build,1173,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1179,deployability,build,build,1179,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1303,deployability,build,build,1303,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1337,deployability,build,build,1337,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1343,deployability,build,build,1343,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1501,deployability,depend,dependency,1501,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,integrability,depend,depends,112,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,integrability,depend,depends,189,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,integrability,depend,dependency,238,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,integrability,depend,dependency,294,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:353,integrability,compon,component,353,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:412,integrability,depend,depends,412,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:475,integrability,depend,depends,475,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:567,integrability,depend,dependencies,567,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:976,integrability,modular,modularity,976,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1501,integrability,depend,dependency,1501,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:353,interoperability,compon,component,353,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,modifiability,depend,depends,112,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,modifiability,depend,depends,189,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,modifiability,depend,dependency,238,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,modifiability,depend,dependency,294,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:353,modifiability,compon,component,353,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:412,modifiability,depend,depends,412,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:475,modifiability,depend,depends,475,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:567,modifiability,depend,dependencies,567,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:976,modifiability,modul,modularity,976,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1501,modifiability,depend,dependency,1501,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,performance,Error,Error,270,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:754,performance,Error,Error,754,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1091,performance,error,error,1091,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1221,performance,error,error,1221,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:645,reliability,fail,failed,645,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,safety,depend,depends,112,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,safety,depend,depends,189,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,safety,depend,dependency,238,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,safety,Error,Error,270,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,safety,depend,dependency,294,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:412,safety,depend,depends,412,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:475,safety,depend,depends,475,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:567,safety,depend,dependencies,567,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:754,safety,Error,Error,754,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:976,safety,modul,modularity,976,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1059,safety,test,test,1059,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1091,safety,error,error,1091,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1221,safety,error,error,1221,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1501,safety,depend,dependency,1501,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:112,testability,depend,depends,112,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:189,testability,depend,depends,189,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:238,testability,depend,dependency,238,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:294,testability,depend,dependency,294,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:412,testability,depend,depends,412,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:475,testability,depend,depends,475,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:567,testability,depend,dependencies,567,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:976,testability,modula,modularity,976,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1059,testability,test,test,1059,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1501,testability,depend,dependency,1501,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:270,usability,Error,Error,270,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:754,usability,Error,Error,754,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1091,usability,error,error,1091,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:1221,usability,error,error,1221,"> > @osschar the problem that it will not work... > > Having TGLIncludes.h (with #include <GL/glew.h>) make RGL depends on GLEW, and then as a consequence, I need to put graf3d\ftgl (FTGL) depends on RGL. Having this is creating circular dependency:. > > ```. > > CMake Error: The inter-target dependency graph contains the following strongly connected component (cycle):. > > ""FTGL"" of type SHARED_LIBRARY. > > depends on ""RGL"" (weak). > > ""RGL"" of type SHARED_LIBRARY. > > depends on ""FTGL"" (weak). > > At least one of these targets is not a STATIC_LIBRARY. Cyclic dependencies are allowed only among static libraries. > > CMake Generate step failed. Build files cannot be regenerated correctly. > > make: *** [Makefile:9096: cmake_check_build_system] Error 1. > > ```. > > . > > . > > Why it was not visible before because TGLIncludes.h were copied in ${CMAKE_BINARY_DIR}/include/ where it was picked up by whatever ROOT library you were building before. To achieve better modularity this could be fixed, in a way, I am proposing in this PR. > > Here is a test PR I opened to show you an error for your proposal: #4786. > > ```. > > C:\build\workspace\root-pullrequests-build\build\include\TGLIncludes.h(21,10): fatal error C1083: Cannot open include file: 'GL/glew.h': No such file or directory [C:\build\workspace\root-pullrequests-build\build\graf3d\ftgl\FTGL.vcxproj]. > > ```. > . > Oh, but why don't you just make the change to direct GL/glew.h inclusion in FTGL then? Because it is indirect dependency :( If you check files that I changed, there is no direct includes of glew.h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:42,reliability,doe,doesn,42,"@linev can you please validate with files doesn't need (I removed from TGCocoa.mm) this:. `#ifdef WIN32. #include ""Windows4Root.h"". #endif`. Can we try find some agreement and move forward with this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:22,safety,valid,validate,22,"@linev can you please validate with files doesn't need (I removed from TGCocoa.mm) this:. `#ifdef WIN32. #include ""Windows4Root.h"". #endif`. Can we try find some agreement and move forward with this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:22,security,validat,validate,22,"@linev can you please validate with files doesn't need (I removed from TGCocoa.mm) this:. `#ifdef WIN32. #include ""Windows4Root.h"". #endif`. Can we try find some agreement and move forward with this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:0,deployability,Log,Logically,0,Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:0,safety,Log,Logically,0,Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:0,security,Log,Logically,0,Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:0,testability,Log,Logically,0,Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:2,deployability,Log,Logically,2,"> Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert. Indeed, cocoa and Windows are two different (and unrelated) platforms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:183,interoperability,platform,platforms,183,"> Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert. Indeed, cocoa and Windows are two different (and unrelated) platforms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:2,safety,Log,Logically,2,"> Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert. Indeed, cocoa and Windows are two different (and unrelated) platforms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:2,security,Log,Logically,2,"> Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert. Indeed, cocoa and Windows are two different (and unrelated) platforms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4095:2,testability,Log,Logically,2,"> Logically one do not require windows includes in cocoa. But probably @bellenot can give more comments as Windows expert. Indeed, cocoa and Windows are two different (and unrelated) platforms...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4095
https://github.com/root-project/root/pull/4096:15,availability,error,error,15,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:103,deployability,resourc,resources,103,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:103,energy efficiency,resourc,resources,103,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:21,integrability,messag,message,21,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:21,interoperability,messag,message,21,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:15,performance,error,error,15,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:103,performance,resourc,resources,103,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:15,safety,error,error,15,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:103,safety,resourc,resources,103,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:2,security,modif,modified,2,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:103,testability,resourc,resources,103,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4096:15,usability,error,error,15,"I modified the error message in the last commit after pushing, so will merge this by hand to not waste resources on another Jenkins run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4096
https://github.com/root-project/root/pull/4097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4097
https://github.com/root-project/root/pull/4097:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4097
https://github.com/root-project/root/pull/4097:24,availability,down,down,24,It seems lcgpackages is down...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4097
https://github.com/root-project/root/pull/4097:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4097
https://github.com/root-project/root/pull/4098:6,reliability,Doe,Does,6,"LGTM! Does this work for Desislava, could you help her test this for her case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:55,safety,test,test,55,"LGTM! Does this work for Desislava, could you help her test this for her case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:55,testability,test,test,55,"LGTM! Does this work for Desislava, could you help her test this for her case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:46,usability,help,help,46,"LGTM! Does this work for Desislava, could you help her test this for her case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:13,safety,test,test,13,Can we get a test somewhere around TClingTests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:13,testability,test,test,13,Can we get a test somewhere around TClingTests?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:27,deployability,integr,integrated,27,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:27,integrability,integr,integrated,27,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:27,interoperability,integr,integrated,27,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:27,modifiability,integr,integrated,27,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:27,reliability,integr,integrated,27,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:42,safety,test,tested,42,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:27,security,integr,integrated,27,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:27,testability,integr,integrated,27,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4098:42,testability,test,tested,42,"@Axel-Naumann yes, she has integrated and tested the changes in her local ROOT. She is now looking at how to deal with several overloads of the same method (I pointed her to `TClass::GetListOfMethodOverloads`). @vgvassilev sure: https://github.com/root-project/roottest/pull/354",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4098
https://github.com/root-project/root/pull/4100:29,deployability,Build,Build,29,Jenkins shows. ```. 14:56:37 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```. but the build actually passed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4100
https://github.com/root-project/root/pull/4100:35,deployability,fail,failed,35,Jenkins shows. ```. 14:56:37 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```. but the build actually passed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4100
https://github.com/root-project/root/pull/4100:112,deployability,build,build,112,Jenkins shows. ```. 14:56:37 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```. but the build actually passed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4100
https://github.com/root-project/root/pull/4100:65,interoperability,plug,plugins,65,Jenkins shows. ```. 14:56:37 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```. but the build actually passed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4100
https://github.com/root-project/root/pull/4100:35,reliability,fail,failed,35,Jenkins shows. ```. 14:56:37 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```. but the build actually passed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4100
https://github.com/root-project/root/pull/4100:73,usability,workflow,workflow,73,Jenkins shows. ```. 14:56:37 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```. but the build actually passed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4100
https://github.com/root-project/root/pull/4100:86,usability,Workflow,WorkflowRun,86,Jenkins shows. ```. 14:56:37 Build failed because: org.jenkinsci.plugins.workflow.job.WorkflowRun. ```. but the build actually passed...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4100
https://github.com/root-project/root/pull/4103:214,safety,test,test,214,"What about const char* for arguments? The usage will be like this:. eveMng = REX::REveManager::Create();. eveMng->AddLocation(""mydir/"", ""/home/alja/root-dev/EveWebApp/ui5"");. eveMng->SetDefaultHtmlPage(""file:mydir/test.html"");",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4103
https://github.com/root-project/root/pull/4103:214,testability,test,test,214,"What about const char* for arguments? The usage will be like this:. eveMng = REX::REveManager::Create();. eveMng->AddLocation(""mydir/"", ""/home/alja/root-dev/EveWebApp/ui5"");. eveMng->SetDefaultHtmlPage(""file:mydir/test.html"");",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4103
https://github.com/root-project/root/pull/4103:91,modifiability,variab,variable,91,"@alja I asked `const std::string &`. If you use `std::string &`, you have to declare extra variable before calling such method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4103
https://github.com/root-project/root/pull/4104:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4104
https://github.com/root-project/root/pull/4104:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4104
https://github.com/root-project/root/pull/4106:14,deployability,build,build,14,"Seems Windows build is stuck:. ```. 08:58:24 Cannot contact lcgapp-win10-65: hudson.remoting.RequestAbortedException: java.nio.channels.ClosedChannelException. ```. All other builds passed, so I will merge this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4106
https://github.com/root-project/root/pull/4106:175,deployability,build,builds,175,"Seems Windows build is stuck:. ```. 08:58:24 Cannot contact lcgapp-win10-65: hudson.remoting.RequestAbortedException: java.nio.channels.ClosedChannelException. ```. All other builds passed, so I will merge this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4106
https://github.com/root-project/root/pull/4106:136,usability,Close,ClosedChannelException,136,"Seems Windows build is stuck:. ```. 08:58:24 Cannot contact lcgapp-win10-65: hudson.remoting.RequestAbortedException: java.nio.channels.ClosedChannelException. ```. All other builds passed, so I will merge this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4106
https://github.com/root-project/root/pull/4108:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:11,energy efficiency,model,model,11,Would this model work when we are in multidict mode? ROOT has this mode for GenVector and Smatrix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:11,security,model,model,11,Would this model work when we are in multidict mode? ROOT has this mode for GenVector and Smatrix.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:13,energy efficiency,model,model,13,"> Would this model work when we are in multidict mode? ROOT has this mode for GenVector and Smatrix. Yes, it does work with multidict.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:109,reliability,doe,does,109,"> Would this model work when we are in multidict mode? ROOT has this mode for GenVector and Smatrix. Yes, it does work with multidict.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:13,security,model,model,13,"> Would this model work when we are in multidict mode? ROOT has this mode for GenVector and Smatrix. Yes, it does work with multidict.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:28,deployability,version,version,28,"This is still not the final version, but should be ready for review now. Only the second to last commit is not in its final form.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:28,integrability,version,version,28,"This is still not the final version, but should be ready for review now. Only the second to last commit is not in its final form.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:28,modifiability,version,version,28,"This is still not the final version, but should be ready for review now. Only the second to last commit is not in its final form.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:61,safety,review,review,61,"This is still not the final version, but should be ready for review now. Only the second to last commit is not in its final form.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:61,testability,review,review,61,"This is still not the final version, but should be ready for review now. Only the second to last commit is not in its final form.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:168,usability,clear,clearer,168,Great! We should probably squash the N calls (when in multidict mode) into one single call. I am not sure if that should be part of this PR but I think it makes things clearer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:41,usability,support,support,41,"Making `ROOT_STANDARD_LIBRARY_PACKAGE()` support multidict will be a different PR, but I am thinking about it. For example, all split libraries are not added as deps in `ROOT_LIBRARY_TARGETS` because that's only changed in `ROOT_STANDARD_LIBRARY_PACKAGE()`, but should probably be changed in `ROOT_LINKER_LIBRARY()` instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:60,safety,test,tests,60,"Alright, looking in Jenkins it seems this will now pass all tests. I will reorganize the commits again and push tonight or tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:60,testability,test,tests,60,"Alright, looking in Jenkins it seems this will now pass all tests. I will reorganize the commits again and push tonight or tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4108:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4108
https://github.com/root-project/root/pull/4109:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4109
https://github.com/root-project/root/pull/4117:30,deployability,build,build,30,Tried by @maxgalli in nightly build machine and test passes. Let's merge and observe the nightlies again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4117
https://github.com/root-project/root/pull/4117:77,deployability,observ,observe,77,Tried by @maxgalli in nightly build machine and test passes. Let's merge and observe the nightlies again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4117
https://github.com/root-project/root/pull/4117:48,safety,test,test,48,Tried by @maxgalli in nightly build machine and test passes. Let's merge and observe the nightlies again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4117
https://github.com/root-project/root/pull/4117:48,testability,test,test,48,Tried by @maxgalli in nightly build machine and test passes. Let's merge and observe the nightlies again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4117
https://github.com/root-project/root/pull/4117:77,testability,observ,observe,77,Tried by @maxgalli in nightly build machine and test passes. Let's merge and observe the nightlies again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4117
https://github.com/root-project/root/pull/4120:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4120
https://github.com/root-project/root/pull/4121:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4121
https://github.com/root-project/root/pull/4126:25,testability,context,context,25,My motivation was in the context of moving cmssw to rootcling. I saw that —deep has no effect and we were doing quite well without it and decided to deprecate it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4126
https://github.com/root-project/root/pull/4126:73,energy efficiency,core,core,73,"If you mean [this line](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L5654) I do not think I can. I do not know how exactly the arg parsing works, however, it seems that this will break the calls to `genreflex --deep` and I know that cmssw was using it until recently and I suspect others use it too. We can drop this line once the deprecation period ends.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4126
https://github.com/root-project/root/pull/4126:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4126
https://github.com/root-project/root/pull/4127:114,modifiability,pac,packaging,114,Was requested by @osschar to make this option by default OFF. . There is problem to include `libfcgi.so` into CMS packaging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:157,deployability,build,building,157,@amadio I provide requested changes. . Question - why one needs `FASTCGI_INCLUDE_DIRS` and `FASTCGI_LIBRARIES` as uncached variables? Should I use them when building THttpServer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:123,modifiability,variab,variables,123,@amadio I provide requested changes. . Question - why one needs `FASTCGI_INCLUDE_DIRS` and `FASTCGI_LIBRARIES` as uncached variables? Should I use them when building THttpServer?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:276,availability,robust,robust,276,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:83,deployability,build,build,83,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:100,deployability,modul,modules,100,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:207,deployability,depend,dependency,207,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:413,deployability,build,build,413,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:487,deployability,depend,dependent,487,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:207,integrability,depend,dependency,207,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:397,integrability,configur,configure-based,397,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:487,integrability,depend,dependent,487,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:66,modifiability,variab,variables,66,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:100,modifiability,modul,modules,100,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:207,modifiability,depend,dependency,207,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:397,modifiability,configur,configure-based,397,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:487,modifiability,depend,dependent,487,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:276,reliability,robust,robust,276,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:100,safety,modul,modules,100,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:207,safety,depend,dependency,207,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:276,safety,robust,robust,276,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:487,safety,depend,dependent,487,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:397,security,configur,configure-based,397,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:207,testability,depend,dependency,207,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:487,testability,depend,dependent,487,"@linev Thanks for the changes. Yes, usually one uses the uncached variables in the build, and CMake modules provide them because maybe you will need more than one include dir, or to add an include dir for a dependency, etc. Not that it was broken before, but this way is more robust to changes in fcgi=ON/OFF. As for config/Makefile.in, we should ask Axel. In ROOT it's not used anymore after the configure-based build system was removed. We could just remove the file, but I think that dependent projects still use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:58,deployability,build,build,58,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:136,deployability,depend,dependent,136,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:329,deployability,build,build,329,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:42,integrability,configur,configure-based,42,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:136,integrability,depend,dependent,136,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:335,integrability,compon,components,335,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:335,interoperability,compon,components,335,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:42,modifiability,configur,configure-based,42,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:136,modifiability,depend,dependent,136,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:254,modifiability,variab,variables,254,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:335,modifiability,compon,components,335,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:136,safety,depend,dependent,136,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:42,security,configur,configure-based,42,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:136,testability,depend,dependent,136,"> In ROOT it's not used anymore after the configure-based build system was removed. . > We could just remove the file, but I think that dependent projects still use it. Most probably, file used by external projects. But one can remove many ROOT-internal variables - like fastcgi include paths. Probably one can keep just list of build components. > I think that the fixup commits could be squashed on merge. Yes, you can do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:0,deployability,Fail,Failing,0,Failing tests has nothing to do with fcgi compilation,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:0,reliability,Fail,Failing,0,Failing tests has nothing to do with fcgi compilation,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:8,safety,test,tests,8,Failing tests has nothing to do with fcgi compilation,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4127:8,testability,test,tests,8,Failing tests has nothing to do with fcgi compilation,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4127
https://github.com/root-project/root/pull/4128:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:10,availability,failur,failures,10,"Well, the failures are not related to the PR itself as it seems. Let's try later when the problems are fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:10,deployability,fail,failures,10,"Well, the failures are not related to the PR itself as it seems. Let's try later when the problems are fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:10,performance,failur,failures,10,"Well, the failures are not related to the PR itself as it seems. Let's try later when the problems are fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:10,reliability,fail,failures,10,"Well, the failures are not related to the PR itself as it seems. Let's try later when the problems are fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:32,safety,review,reviewing,32,@couet Feel free to merge after reviewing the changes!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:32,testability,review,reviewing,32,@couet Feel free to merge after reviewing the changes!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4128:84,deployability,build,builds,84,"Since @linev was so nice to have a second look on the PR, I think I'll merge if the builds are fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4128
https://github.com/root-project/root/pull/4129:47,deployability,modul,modularized,47,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:129,deployability,modul,module,129,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:302,deployability,contain,contains,302,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:491,deployability,Upgrad,Upgrading,491,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:47,integrability,modular,modularized,47,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:47,modifiability,modul,modularized,47,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:129,modifiability,modul,module,129,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:491,modifiability,Upgrad,Upgrading,491,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:161,performance,content,content,161,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:213,performance,content,content,213,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:320,performance,content,content,320,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:47,safety,modul,modularized,47,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:129,safety,modul,module,129,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:480,safety,reme,remember,480,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:656,safety,avoid,avoid,656,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4129:47,testability,modula,modularized,47,"@pcanal, the #include of system headers before modularized ROOT headers triggers deficiencies in the clang-5.0 implementation of module ownership. That is, when content of a system header comes first it makes its content visible (textually or not) and later when the ROOT header is included which also contains the same content of the system header, clang cannot figure out they are the same headers and breaks the redecl chains of some `using ::abs` in (math.h or cmath, I don't remember). Upgrading our llvm fork should make this particular issue go away. Either way this change is an improvement because we should #include less generic headers first to avoid making them non-standalone as transitive includes might hide actual missing includes of the header itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4129
https://github.com/root-project/root/pull/4131:0,availability,Failur,Failures,0,Failures has nothing to do with changes in qt5web plugin - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4131
https://github.com/root-project/root/pull/4131:0,deployability,Fail,Failures,0,Failures has nothing to do with changes in qt5web plugin - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4131
https://github.com/root-project/root/pull/4131:50,interoperability,plug,plugin,50,Failures has nothing to do with changes in qt5web plugin - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4131
https://github.com/root-project/root/pull/4131:0,performance,Failur,Failures,0,Failures has nothing to do with changes in qt5web plugin - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4131
https://github.com/root-project/root/pull/4131:0,reliability,Fail,Failures,0,Failures has nothing to do with changes in qt5web plugin - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4131
https://github.com/root-project/root/pull/4132:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:35,deployability,updat,update,35,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:54,deployability,INSTAL,INSTALL,54,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:277,deployability,build,building-root,277,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:298,deployability,updat,updated,298,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:226,integrability,messag,message,226,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:226,interoperability,messag,message,226,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:35,safety,updat,update,35,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:298,safety,updat,updated,298,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:35,security,updat,update,35,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:298,security,updat,updated,298,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:27,testability,plan,plan,27,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4132:306,usability,document,documentation,306,"Thanks, @Axel. Just FYI, I plan to update the `README/INSTALL` file due to [ROOT-9488](https://sft.its.cern.ch/jira/browse/ROOT-9488) and [ROOT-9333](https://sft.its.cern.ch/jira/browse/ROOT-9333), that's why I'm pointing the message there. Then we can point https://root.cern/building-root to the updated documentation (or just repeat the same information in the website).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4132
https://github.com/root-project/root/pull/4136:58,energy efficiency,CPU,CPU,58,"Wow fantastic! Would you have perf numbers (wall/real and CPU time), from a plain old Linux box?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:58,performance,CPU,CPU,58,"Wow fantastic! Would you have perf numbers (wall/real and CPU time), from a plain old Linux box?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:62,performance,time,time,62,"Wow fantastic! Would you have perf numbers (wall/real and CPU time), from a plain old Linux box?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:979,energy efficiency,CPU,CPU,979,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:1100,energy efficiency,CPU,CPU,1100,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:926,performance,time,time,926,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:979,performance,CPU,CPU,979,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:1047,performance,time,time,1047,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:1100,performance,CPU,CPU,1100,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:46,safety,test,test,46,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:69,safety,test,test,69,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:470,safety,test,test,470,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:46,testability,test,test,46,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:69,testability,test,test,69,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:470,testability,test,test,470,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:430,usability,close,close,430,"Hi Axel! Thanks for the reply. I prepared two test cases:. The first test is using a write system call <write.c>. $ cat write.c. #include <sys/types.h>. #include <sys/stat.h>. #include <fcntl.h>. #include <stdlib.h>. #include <unistd.h>. int. main(int argc, char **argv). {. int fd = open(""/dev/random"", O_WRONLY);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. write(fd, (void *)foo, 1);. }. free(foo);. close(fd);. return 0;. }. And the other test is using a msync system call <msync.c>. $ cat msync.c. #include <unistd.h>. #include <sys/mman.h>. #include <stdlib.h>. int. main(int argc, char **argv). {. size_t page_size = sysconf(_SC_PAGESIZE);. int *foo = malloc(sizeof(int));. for (int i = 0; i < 1 << 20; i++). {. void *base = (void *)((((const size_t)foo) / page_size) * page_size);. msync(base, page_size, 0);. }. free(foo);. return 0;. }. The results are follows:. $ gcc msync.c -o msync. $ time ./msync. 0.11user 0.13system 0:00.24elapsed 100%CPU (0avgtext+0avgdata 1248maxresident)k. $ gcc write.c -o write. $ time ./write. 0.10user 0.43system 0:00.53elapsed 100%CPU (0avgtext+0avgdata 1296maxresident)k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:39,deployability,build,build,39,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:45,deployability,log,log,45,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:159,deployability,log,log,159,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:45,safety,log,log,45,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:111,safety,test,test,111,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:159,safety,log,log,159,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:45,security,log,log,45,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:159,security,log,log,159,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:45,testability,log,log,45,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:111,testability,test,test,111,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:159,testability,log,log,159,"I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:41,deployability,build,build,41,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:47,deployability,log,log,47,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:161,deployability,log,log,161,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:216,performance,time,timed,216,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:283,performance,time,timeout,283,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:47,safety,log,log,47,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:113,safety,test,test,113,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:161,safety,log,log,161,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:283,safety,timeout,timeout,283,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:47,security,log,log,47,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:161,security,log,log,161,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:47,testability,log,log,47,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:113,testability,test,test,113,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:161,testability,log,log,161,"> I am sorry, I think I can not read the build log from the Windows and unfortunately I do not have a Windows to test it by myself :( Is it possible to read the log somehow in order to fix this commit on Windows? It timed out. Please fork also roottest, that should at least fix the timeout",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:11,deployability,build,build,11,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:25,performance,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4136:25,usability,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4136
https://github.com/root-project/root/pull/4138:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4138
https://github.com/root-project/root/pull/4140:222,deployability,configurat,configuration,222,"@bellenot Grate! You are back to RBrowser! Probably, we should avoid use of `const char *`, especially as return values from the methods. This can be problematic in case of dynamic content - when icon names read from some configuration file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:222,integrability,configur,configuration,222,"@bellenot Grate! You are back to RBrowser! Probably, we should avoid use of `const char *`, especially as return values from the methods. This can be problematic in case of dynamic content - when icon names read from some configuration file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:222,modifiability,configur,configuration,222,"@bellenot Grate! You are back to RBrowser! Probably, we should avoid use of `const char *`, especially as return values from the methods. This can be problematic in case of dynamic content - when icon names read from some configuration file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:181,performance,content,content,181,"@bellenot Grate! You are back to RBrowser! Probably, we should avoid use of `const char *`, especially as return values from the methods. This can be problematic in case of dynamic content - when icon names read from some configuration file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:63,safety,avoid,avoid,63,"@bellenot Grate! You are back to RBrowser! Probably, we should avoid use of `const char *`, especially as return values from the methods. This can be problematic in case of dynamic content - when icon names read from some configuration file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:222,security,configur,configuration,222,"@bellenot Grate! You are back to RBrowser! Probably, we should avoid use of `const char *`, especially as return values from the methods. This can be problematic in case of dynamic content - when icon names read from some configuration file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:183,deployability,configurat,configuration,183,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:183,integrability,configur,configuration,183,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:183,modifiability,configur,configuration,183,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:142,performance,content,content,142,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:22,safety,avoid,avoid,22,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:223,safety,review,review,223,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:183,security,configur,configuration,183,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4140:223,testability,review,review,223,"> Probably, we should avoid use of `const char *`, especially as return values from the methods. > This can be problematic in case of dynamic content - when icon names read from some configuration file. Yes, probably. I'll review this later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4140
https://github.com/root-project/root/pull/4141:117,integrability,transform,transformation,117,"Very nice PR. Thank you very much for your contribution! Could you also please provide a simple test, to be sure the transformation is doing the right thing ? . Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:117,interoperability,transform,transformation,117,"Very nice PR. Thank you very much for your contribution! Could you also please provide a simple test, to be sure the transformation is doing the right thing ? . Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:96,safety,test,test,96,"Very nice PR. Thank you very much for your contribution! Could you also please provide a simple test, to be sure the transformation is doing the right thing ? . Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:89,testability,simpl,simple,89,"Very nice PR. Thank you very much for your contribution! Could you also please provide a simple test, to be sure the transformation is doing the right thing ? . Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:96,testability,test,test,96,"Very nice PR. Thank you very much for your contribution! Could you also please provide a simple test, to be sure the transformation is doing the right thing ? . Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:89,usability,simpl,simple,89,"Very nice PR. Thank you very much for your contribution! Could you also please provide a simple test, to be sure the transformation is doing the right thing ? . Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:540,deployability,Updat,Updated,540,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:797,deployability,log,log,797,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:807,deployability,log,log,807,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:866,deployability,log,log,866,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:927,deployability,log,log,927,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:938,deployability,log,log,938,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:998,deployability,log,log,998,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2151,deployability,log,log,2151,"------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Than",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:196,energy efficiency,Draw,DrawProgressBar,196,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:497,energy efficiency,model,model,497,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1514,energy efficiency,load,loaded,1514,"0:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1627,energy efficiency,load,loads,1627,"root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:82,integrability,transform,transformation,82,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:212,integrability,Transform,Transformations,212,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:519,integrability,Batch,BatchSize,519,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1040,integrability,transform,transformation,1040,"assificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1597,integrability,transform,transformations,1597,"/github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -----------------------------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2128,integrability,transform,transformation,2128,"n Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any question",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2215,integrability,transform,transformations,2215,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2397,integrability,transform,transformation,2397,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:82,interoperability,transform,transformation,82,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:212,interoperability,Transform,Transformations,212,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1040,interoperability,transform,transformation,1040,"assificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1597,interoperability,transform,transformations,1597,"/github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -----------------------------------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2128,interoperability,transform,transformation,2128,"n Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any question",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2215,interoperability,transform,transformations,2215,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2397,interoperability,transform,transformation,2397,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1113,modifiability,Variab,Variable,1113,". ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly mat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1470,modifiability,Scal,Scaling,1470,"rm=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1689,modifiability,Variab,Variable,1689,"anges the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:519,performance,Batch,BatchSize,519,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1514,performance,load,loaded,1514,"0:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1627,performance,load,loads,1627,"root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:540,safety,Updat,Updated,540,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:797,safety,log,log,797,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:807,safety,log,log,807,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:866,safety,log,log,866,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:927,safety,log,log,927,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:938,safety,log,log,938,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:998,safety,log,log,998,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1549,safety,Test,Test,1549,"ipt attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -----------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1653,safety,test,testing,1653,"cationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2151,safety,log,log,2151,"------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Than",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2210,safety,test,test,2210,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2328,safety,test,test,2328,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2433,safety,Test,Testing,2433,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2667,safety,test,test,2667,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:14,security,Modif,Modifying,14,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:497,security,model,model,497,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:540,security,Updat,Updated,540,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:797,security,log,log,797,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:807,security,log,log,807,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:866,security,log,log,866,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:927,security,log,log,927,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:938,security,log,log,938,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:998,security,log,log,998,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2151,security,log,log,2151,"------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Than",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2643,security,Sign,Signal,2643,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:797,testability,log,log,797,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:807,testability,log,log,807,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:866,testability,log,log,866,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:927,testability,log,log,927,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:938,testability,log,log,938,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:998,testability,log,log,998,"Hi Imoneta, . Modifying tutorials/tmva/keras/ClassificationKeras.py to add an 'S' transformation. Line 28-29 becomes:. ```. factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G,S:AnalysisType=Classification'). ```. Line 63-66 becomes:. ```. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. '!H:!V:Fisher:VarTransform=D,G,S'). factory.BookMethod(dataloader, TMVA.Types.kPyKeras, 'PyKeras',. 'H:!V:VarTransform=D,G,S:FilenameModel=model.h5:NumEpochs=20:BatchSize=32'). ```. Updated script attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : ---------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1549,testability,Test,Test,1549,"ipt attached: . [ClassificationKerasScale.zip](https://github.com/root-project/root/files/3568795/ClassificationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -----------------------------------------",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:1653,testability,test,testing,1653,"cationKerasScale.zip). Before the changes the output from running. `cd $ROOTSYS/tutorials/tmva/keras`. `python ClassificationKeras.py &> DG.log`. [DG.log](https://github.com/root-project/root/files/3568685/DG.log). and after:. `python ClassificationKerasScale.py &> DGS.log`. [DGS.log](https://github.com/root-project/root/files/3568676/DGS.log). We can see that the training sample transformation is limited to be between -1 and 1:. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2151,testability,log,log,2151,"------------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Than",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2210,testability,test,test,2210,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2328,testability,test,test,2328,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2433,testability,Test,Testing,2433,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2667,testability,test,test,2667,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2441,usability,efficien,efficiency,2441,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2473,usability,efficien,efficiency,2473,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:2650,usability,efficien,efficiency,2650,"-------------------------------------------------. > : var1: 0.0015578 0.17520 [ -0.54435 1.0000 ]. > : var2: 0.0013889 0.17448 [ -0.54435 1.0000 ]. > : var3: 0.0013901 0.17452 [ -0.54435 1.0000 ]. > : var4: 0.0012939 0.17410 [ -0.54435 1.0000 ]. > : -----------------------------------------------------------. Scaling is working... is it being saved and loaded again ok? We can check the 'Test' phase in the same script since TMVA saves transformations to file, then loads them to re-apply to testing data. > TFHandler_PyKeras : Variable Mean RMS [ Min Max ]. > : -----------------------------------------------------------. > : var1: 0.0041504 0.17586 [ -0.52983 1.0000 ]. > : var2: 0.0048056 0.17568 [ -0.52290 1.0000 ]. > : var3: 0.0039114 0.17501 [ -1.0000 0.70855 ]. > : var4:-0.00083735 0.17310 [ -1.0000 1.0000 ]. > : -----------------------------------------------------------. The limits are no longer exactly -0.54435 to 1.0, but they linearly match the D,G transformation (see DG.log file). If we had a larger data sample the training and test transformations would have more similar ranges. We can also see at the end of the training that the training and test data classification accuracy match each other, also showing the transformation is working:. > . > : Testing efficiency compared to training efficiency (overtraining check). > : -------------------------------------------------------------------------------------------------------------------. > : DataSet MVA Signal efficiency: from test sample (from training sample) . > : Name: Method: @B=0.01 @B=0.10 @B=0.30 . > : -------------------------------------------------------------------------------------------------------------------. > : dataset PyKeras : 0.263 (0.228) 0.680 (0.673) 0.904 (0.908). > : dataset Fisher : 0.229 (0.192) 0.645 (0.640) 0.893 (0.896). > : -------------------------------------------------------------------------------------------------------------------. > . Any questions please ask. Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:13,deployability,build,build,13,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:59,deployability,build,build,59,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:65,deployability,fail,failed,65,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:159,deployability,version,version,159,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:42,energy efficiency,power,power,42,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:151,energy efficiency,current,current,151,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:159,integrability,version,version,159,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:159,modifiability,version,version,159,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:65,reliability,fail,failed,65,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:130,testability,simpl,simply,130,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:130,usability,simpl,simply,130,> @phsft-bot build. Ahha I dont have that power. I saw the build failed and that this branch was waay behind the master branch so simply merged in the current version of the protject-root/master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4141:30,usability,help,help,30,Is there anything I can do to help expediate this pull request?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4141
https://github.com/root-project/root/pull/4146:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=On -DCMAKE_CXX_STANDARD=On -Dwebgui=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4146
https://github.com/root-project/root/pull/4146:11,deployability,build,build,11,@phsft-bot build with flags -Droot7=On -DCMAKE_CXX_STANDARD=14 -Dwebgui=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4146
https://github.com/root-project/root/pull/4146:0,deployability,Build,Build,0,"Build fails only on platform, where c++14 not supported - merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4146
https://github.com/root-project/root/pull/4146:6,deployability,fail,fails,6,"Build fails only on platform, where c++14 not supported - merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4146
https://github.com/root-project/root/pull/4146:20,interoperability,platform,platform,20,"Build fails only on platform, where c++14 not supported - merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4146
https://github.com/root-project/root/pull/4146:6,reliability,fail,fails,6,"Build fails only on platform, where c++14 not supported - merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4146
https://github.com/root-project/root/pull/4146:46,usability,support,supported,46,"Build fails only on platform, where c++14 not supported - merging",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4146
https://github.com/root-project/root/pull/4151:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:48,deployability,build,build,48,"I just add ""trivial"" commit to re-start jenkins build. From my side - code is ready",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:49,safety,test,tests,49,Ok. It looks ok for me also. Let see what if the tests will pass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:49,testability,test,tests,49,Ok. It looks ok for me also. Let see what if the tests will pass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:67,deployability,build,build,67,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:73,deployability,fail,fails,73,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:116,deployability,build,builds,116,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:158,deployability,build,build,158,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:173,deployability,build,builds,173,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:165,integrability,messag,message,165,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:165,interoperability,messag,message,165,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:73,reliability,fail,fails,73,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:21,safety,test,test,21,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:21,testability,test,test,21,"> let see what if te test will pass. Yes. . Typically when Jenkins build fails, I have to add new commit to let run builds again - otherwise after `phsft-bot build` message builds aborted very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:46,safety,risk,risky,46,May be we wait Monday to merge ? always a bit risky to merge just before the week end .....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4151:46,security,risk,risky,46,May be we wait Monday to merge ? always a bit risky to merge just before the week end .....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4151
https://github.com/root-project/root/pull/4152:151,availability,fault,fault,151,"@pcanal . Philippe, should I merge it? It is bugfix for the case when arbitrary objects were set to TCutG. In such case double deletion will cause seg fault",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4152
https://github.com/root-project/root/pull/4152:151,energy efficiency,fault,fault,151,"@pcanal . Philippe, should I merge it? It is bugfix for the case when arbitrary objects were set to TCutG. In such case double deletion will cause seg fault",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4152
https://github.com/root-project/root/pull/4152:151,performance,fault,fault,151,"@pcanal . Philippe, should I merge it? It is bugfix for the case when arbitrary objects were set to TCutG. In such case double deletion will cause seg fault",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4152
https://github.com/root-project/root/pull/4152:151,reliability,fault,fault,151,"@pcanal . Philippe, should I merge it? It is bugfix for the case when arbitrary objects were set to TCutG. In such case double deletion will cause seg fault",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4152
https://github.com/root-project/root/pull/4152:151,safety,fault,fault,151,"@pcanal . Philippe, should I merge it? It is bugfix for the case when arbitrary objects were set to TCutG. In such case double deletion will cause seg fault",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4152
https://github.com/root-project/root/pull/4153:75,deployability,build,builds,75,@stwunsch merging now so that @amadio can benchmark this using the nightly builds (and because the InvariantMass test passes and I see `InvariantMass` go from 24% to 8% of the runtime with these changes). Please let me know if I should change anything!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4153
https://github.com/root-project/root/pull/4153:113,safety,test,test,113,@stwunsch merging now so that @amadio can benchmark this using the nightly builds (and because the InvariantMass test passes and I see `InvariantMass` go from 24% to 8% of the runtime with these changes). Please let me know if I should change anything!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4153
https://github.com/root-project/root/pull/4153:113,testability,test,test,113,@stwunsch merging now so that @amadio can benchmark this using the nightly builds (and because the InvariantMass test passes and I see `InvariantMass` go from 24% to 8% of the runtime with these changes). Please let me know if I should change anything!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4153
https://github.com/root-project/root/pull/4159:18,availability,failur,failure,18,"Jenkins reports a failure, but all the builds actually passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:18,deployability,fail,failure,18,"Jenkins reports a failure, but all the builds actually passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:39,deployability,build,builds,39,"Jenkins reports a failure, but all the builds actually passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:18,performance,failur,failure,18,"Jenkins reports a failure, but all the builds actually passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:18,reliability,fail,failure,18,"Jenkins reports a failure, but all the builds actually passed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:91,deployability,patch,patch,91,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:199,deployability,patch,patch,199,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:291,deployability,patch,patch,291,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:435,deployability,patch,patch,435,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:353,modifiability,variab,variable,353,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:113,performance,time,time,113,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:240,performance,time,time,240,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:91,safety,patch,patch,91,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:126,safety,test,tested,126,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:199,safety,patch,patch,199,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:248,safety,test,test,248,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:291,safety,patch,patch,291,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:435,safety,patch,patch,435,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:91,security,patch,patch,91,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:199,security,patch,patch,199,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:291,security,patch,patch,291,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:304,security,ident,identical,304,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:435,security,patch,patch,435,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:126,testability,test,tested,126,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4159:248,testability,test,test,248,"Hi @amadio. Thank you for the noticing and fixing this issue! I am sorry about it, I did a patch from #4136 some time ago and tested it. But looks like, somehow, I did not notice this issue. I did a patch for this today, but did not have a time to test it and make pull request, sorry. This patch almost identical to yours but I decided to make another variable to hold PAGE_MASK value which is ~(page_size - 1). I leave the code of a patch just in case. https://github.com/dalegr/root/commit/febb06ca97f2e1d3d275321aa67092beb953de48",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4159
https://github.com/root-project/root/pull/4160:626,availability,error,error,626,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2506,availability,error,error,2506," note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:142,deployability,build,build,142,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:148,deployability,log,log,148,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:207,deployability,log,log,207,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:241,deployability,Build,Building,241,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:340,deployability,build,build,340,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:364,deployability,build,build,364,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:517,deployability,build,build,517,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:541,deployability,build,build,541,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:772,deployability,manag,manager,772,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:848,deployability,build,build,848,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:872,deployability,build,build,872,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:955,deployability,build,build,955,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:979,deployability,instal,install,979,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1251,deployability,build,build,1251,"object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1275,deployability,instal,install,1275,"DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/ins",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1420,deployability,build,build,1420,"l/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1444,deployability,instal,install,1444,"ction ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1747,deployability,build,build,1747,"GDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1771,deployability,instal,install,1771,"ager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1914,deployability,build,build,1914,"DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1938,deployability,instal,install,1938,"ns.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2252,deployability,build,build,2252,"d/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for arg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2276,deployability,instal,install,2276,"ll/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2397,deployability,build,build,2397," to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: can",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2421,deployability,build,build,2421,"d/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2653,deployability,manag,manager,2653,"Node* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/insta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2729,deployability,build,build,2729,"~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2753,deployability,build,build,2753,"kins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2836,deployability,build,build,2836,"te: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2860,deployability,instal,install,2860,"or argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3132,deployability,build,build,3132,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3156,deployability,instal,install,3156,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3301,deployability,build,build,3301,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3325,deployability,instal,install,3325,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3628,deployability,build,build,3628,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3652,deployability,instal,install,3652,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3795,deployability,build,build,3795,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3819,deployability,instal,install,3819,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:772,energy efficiency,manag,manager,772,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2653,energy efficiency,manag,manager,2653,"Node* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/insta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:19,interoperability,incompatib,incompatible,19,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:301,interoperability,plug,plugins,301,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1356,interoperability,convers,conversion,1356,"ce/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1852,interoperability,convers,conversion,1852,"kins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3237,interoperability,convers,conversion,3237,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3733,interoperability,convers,conversion,3733,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:626,performance,error,error,626,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2506,performance,error,error,2506," note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:148,safety,log,log,148,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:207,safety,log,log,207,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:309,safety,Detect,DetectorHelperTest,309,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:485,safety,Detect,Detector,485,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:626,safety,error,error,626,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:772,safety,manag,manager,772,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1201,safety,test,test,1201,"the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1697,safety,test,test,1697,"nager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2506,safety,error,error,2506," note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2653,safety,manag,manager,2653,"Node* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/insta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3082,safety,test,test,3082,"*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3578,safety,test,test,3578,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:148,security,log,log,148,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:207,security,log,log,207,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:309,security,Detect,DetectorHelperTest,309,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:485,security,Detect,Detector,485,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:148,testability,log,log,148,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:207,testability,log,log,207,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1201,testability,test,test,1201,"the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:1697,testability,test,test,1697,"nager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3082,testability,test,test,3082,"*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:3578,testability,test,test,3578,"anager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:626,usability,error,error,626,"This is a backward incompatible change that [breaks DD4Hep](http://cdash.cern.ch/upload/2c049c68eb2e49d8ad4eeda23b283bae0d5ffd75/DD4hep-01-10-build.log). Please revert or provide a fix. Relevant part of the log is pasted below:. ```. [ 40%] Building CXX object DDCore/CMakeFiles/DDCorePlugins.dir/src/plugins/DetectorHelperTest.cpp.o. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp: In function ‘long int gdml_extract(dd4hep::Detector&, int, char**)’:. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:178:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*, const TString)’. extract.WriteGDMLfile(&description.manager(), vol.ptr(), uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:2506,usability,error,error,2506," note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘TGeoNode*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, TList*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, TGeoNode* top_node, TList* materialsLst, const char* filename, TString option). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:156:9: note: candidate expects 5 arguments, 3 provided. /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:221:87: error: no matching function for call to ‘TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoVolume*&, const TString)’. extract.WriteGDMLfile(&description.manager(), a._volume, uri.GetRelativePart()). ^. In file included from /mnt/build/jenkins/workspace/build/projects/DD4hep-01-10/src/DD4hep/01-10/DDCore/src/gdml/GdmlPlugins.cpp:27:. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, const char*, TString)’. void WriteGDMLfile(TGeoManager * geomanager, const char* filename = ""test.gdml"", TString option = """"). ^~~~~~~~~~~~~. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:75:9: note: no known conversion for argument 2 from ‘TGeoVolume*’ to ‘const char*’. /build/jenkins/workspace/install/ROOT/HEAD/x86_64-slc6-gcc8-dbg/include/TGDMLWrite.h:77:9: note: candidate: ‘void TGDMLWrite::WriteGDMLfile(TGeoManager*, TGeoNode*, const char*, TString)’. void WriteGDMLfile(T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4160:132,performance,time,time,132,I know that it breaks DD4hep. The corresponding change will come there as well. The only thing we could do here is to keep for some time both call sequences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4160
https://github.com/root-project/root/pull/4167:31,usability,behavi,behaviour,31,"Thanks for the info. Since the behaviour is very counter intuitive, I would consider this a bug. I will soon have a fix. Progress on this is tracked here:. https://sft.its.cern.ch/jira/browse/ROOT-10259",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:57,usability,intuit,intuitive,57,"Thanks for the info. Since the behaviour is very counter intuitive, I would consider this a bug. I will soon have a fix. Progress on this is tracked here:. https://sft.its.cern.ch/jira/browse/ROOT-10259",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:121,usability,Progress,Progress,121,"Thanks for the info. Since the behaviour is very counter intuitive, I would consider this a bug. I will soon have a fix. Progress on this is tracked here:. https://sft.its.cern.ch/jira/browse/ROOT-10259",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:28,availability,ERROR,ERROR,28,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:323,availability,state,statement,323,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:323,integrability,state,statement,323,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:28,performance,ERROR,ERROR,28,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:340,performance,time,time,340,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:28,safety,ERROR,ERROR,28,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:28,usability,ERROR,ERROR,28,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:127,usability,document,documentation,127,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:157,usability,clear,clear,157,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:166,usability,user,users,166,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:256,usability,command,command,256,"@hageboeck the DataHandling ERROR you proposed is indeed the correct solution for this, but I would encourage the inclusion of documentation as well to make clear to users that there is no way to properly assign `wgtError` without calling the `StoreError` command arg in the constructor without relying on noticing a print statement at run time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:328,deployability,updat,update,328,"The fix and the new documentation are merged now. Would you check if the current documentation is sufficient? (Either in root master or tomorrow, when the documentation has been regenerated here:. https://root.cern.ch/doc/master/classRooDataSet.html#a5f9df28f72d49715073669890da8bf1f. ). If something is not sufficient, you can update this pull request with the missing information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:73,energy efficiency,current,current,73,"The fix and the new documentation are merged now. Would you check if the current documentation is sufficient? (Either in root master or tomorrow, when the documentation has been regenerated here:. https://root.cern.ch/doc/master/classRooDataSet.html#a5f9df28f72d49715073669890da8bf1f. ). If something is not sufficient, you can update this pull request with the missing information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:328,safety,updat,update,328,"The fix and the new documentation are merged now. Would you check if the current documentation is sufficient? (Either in root master or tomorrow, when the documentation has been regenerated here:. https://root.cern.ch/doc/master/classRooDataSet.html#a5f9df28f72d49715073669890da8bf1f. ). If something is not sufficient, you can update this pull request with the missing information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:328,security,updat,update,328,"The fix and the new documentation are merged now. Would you check if the current documentation is sufficient? (Either in root master or tomorrow, when the documentation has been regenerated here:. https://root.cern.ch/doc/master/classRooDataSet.html#a5f9df28f72d49715073669890da8bf1f. ). If something is not sufficient, you can update this pull request with the missing information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:20,usability,document,documentation,20,"The fix and the new documentation are merged now. Would you check if the current documentation is sufficient? (Either in root master or tomorrow, when the documentation has been regenerated here:. https://root.cern.ch/doc/master/classRooDataSet.html#a5f9df28f72d49715073669890da8bf1f. ). If something is not sufficient, you can update this pull request with the missing information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:81,usability,document,documentation,81,"The fix and the new documentation are merged now. Would you check if the current documentation is sufficient? (Either in root master or tomorrow, when the documentation has been regenerated here:. https://root.cern.ch/doc/master/classRooDataSet.html#a5f9df28f72d49715073669890da8bf1f. ). If something is not sufficient, you can update this pull request with the missing information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:155,usability,document,documentation,155,"The fix and the new documentation are merged now. Would you check if the current documentation is sufficient? (Either in root master or tomorrow, when the documentation has been regenerated here:. https://root.cern.ch/doc/master/classRooDataSet.html#a5f9df28f72d49715073669890da8bf1f. ). If something is not sufficient, you can update this pull request with the missing information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:12,deployability,updat,updated,12,The fix and updated documentation look good. Thanks much for attending to this so promptly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:12,safety,updat,updated,12,The fix and updated documentation look good. Thanks much for attending to this so promptly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:12,security,updat,updated,12,The fix and updated documentation look good. Thanks much for attending to this so promptly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4167:20,usability,document,documentation,20,The fix and updated documentation look good. Thanks much for attending to this so promptly.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4167
https://github.com/root-project/root/pull/4169:8,deployability,build,build,8,Jenkins build on windows fails without clear reason - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4169
https://github.com/root-project/root/pull/4169:25,deployability,fail,fails,25,Jenkins build on windows fails without clear reason - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4169
https://github.com/root-project/root/pull/4169:25,reliability,fail,fails,25,Jenkins build on windows fails without clear reason - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4169
https://github.com/root-project/root/pull/4169:39,usability,clear,clear,39,Jenkins build on windows fails without clear reason - merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4169
https://github.com/root-project/root/pull/4169:18,integrability,sub,submit,18,"@agheata Should I submit fix into v6-18, v6-16 branches?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4169
https://github.com/root-project/root/pull/4171:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:492,availability,state,state,492,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:535,deployability,roll,roll,535,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:1087,energy efficiency,Current,Currently,1087,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:1161,energy efficiency,draw,drawback,1161,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:492,integrability,state,state,492,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:827,integrability,encapsulat,encapsulate,827,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:882,interoperability,compatib,compatible,882,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:827,modifiability,encapsul,encapsulate,827,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:1489,modifiability,refact,refactoring,1489,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:1489,performance,refactor,refactoring,1489,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:755,safety,compl,complex,755,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:371,security,access,access,371,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:755,security,compl,complex,755,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:689,testability,simpl,simpler,689,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:689,usability,simpl,simpler,689,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray! > . > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:11,deployability,build,build,11,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:25,performance,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:25,usability,perform,performance-,25,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4171:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4171
https://github.com/root-project/root/pull/4174:5,deployability,patch,patch,5,This patch might not be needed anymore (or should take a different shape) now that we have #5552,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4174
https://github.com/root-project/root/pull/4174:5,safety,patch,patch,5,This patch might not be needed anymore (or should take a different shape) now that we have #5552,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4174
https://github.com/root-project/root/pull/4174:5,security,patch,patch,5,This patch might not be needed anymore (or should take a different shape) now that we have #5552,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4174
https://github.com/root-project/root/pull/4181:11,deployability,build,build,11,@phsft-bot build with flags -Dbuiltin_all=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4181
https://github.com/root-project/root/pull/4181:3,deployability,build,build,3,"No build actually failed, only Jenkins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4181
https://github.com/root-project/root/pull/4181:18,deployability,fail,failed,18,"No build actually failed, only Jenkins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4181
https://github.com/root-project/root/pull/4181:18,reliability,fail,failed,18,"No build actually failed, only Jenkins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4181
https://github.com/root-project/root/pull/4182:68,deployability,patch,patch,68,@pcanal Can you merge it now - together with correspondent roottest patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4182
https://github.com/root-project/root/pull/4182:68,safety,patch,patch,68,@pcanal Can you merge it now - together with correspondent roottest patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4182
https://github.com/root-project/root/pull/4182:68,security,patch,patch,68,@pcanal Can you merge it now - together with correspondent roottest patch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4182
https://github.com/root-project/root/pull/4185:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4185
https://github.com/root-project/root/pull/4187:11,deployability,build,build,11,@phsft-bot build just on windows10/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4187
https://github.com/root-project/root/pull/4187:27,deployability,releas,release,27,"LGTM thanks. Can we have a release notes entry, mentioning that the splash screen can be seen with `-a` aka ""about""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4187
https://github.com/root-project/root/pull/4187:56,deployability,releas,release,56,"@Axel-Naumann Sure, I will merge locally and add to the release notes directly to avoid running Jenkins again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4187
https://github.com/root-project/root/pull/4187:82,safety,avoid,avoid,82,"@Axel-Naumann Sure, I will merge locally and add to the release notes directly to avoid running Jenkins again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4187
https://github.com/root-project/root/pull/4194:0,availability,failur,failure,0,failure on macos is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4194
https://github.com/root-project/root/pull/4194:0,deployability,fail,failure,0,failure on macos is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4194
https://github.com/root-project/root/pull/4194:0,performance,failur,failure,0,failure on macos is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4194
https://github.com/root-project/root/pull/4194:0,reliability,fail,failure,0,failure on macos is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4194
https://github.com/root-project/root/pull/4197:11,deployability,build,build,11,@phsft-bot build with `-Dpyroot_experimental=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4197
https://github.com/root-project/root/pull/4198:4,availability,failur,failure,4,The failure is not due to this pr. This test fails for all pr I’ve looked at.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4198
https://github.com/root-project/root/pull/4198:4,deployability,fail,failure,4,The failure is not due to this pr. This test fails for all pr I’ve looked at.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4198
