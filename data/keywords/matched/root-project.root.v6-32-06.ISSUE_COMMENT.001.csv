id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/137:38,deployability,patch,patch,38,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:248,deployability,patch,patch,248,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:126,interoperability,format,formatted,126,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:507,modifiability,paramet,parameter,507,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:670,modifiability,paramet,parameter,670,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:488,reliability,toleran,tolerance,488,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:714,reliability,toleran,tolerance,714,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:937,reliability,toleran,tolerance,937,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:38,safety,patch,patch,38,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:248,safety,patch,patch,248,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:611,safety,except,exceptional,611,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:38,security,patch,patch,38,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:248,security,patch,patch,248,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:527,security,control,controls,527,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:227,testability,understand,understand,227,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:527,testability,control,controls,527,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:475,usability,minim,minimization,475,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:732,usability,minim,minimisation,732,"Hi, . I am sorry I cannot include the patch as it is in RooFit because it has the following problems: . - the comments are re-formatted to the old THTML style. They should be mantained to the Doxygen style. Look at the diff to understand it. - The patch is also not correct in case of RooMinuit for the SetEps option. This is due to a naming problem already existing in RooMinimizer. The value you want to change I guess is not the eps (the floating point precision) but the minimization tolerance. The EPS parameter in Minuit controls the precision the function is computed and it should be kept, apart n some exceptional case to the normal double precision value. The parameter you want to change is instead the tolerance for the minimisation, which by default is set to 1 in RooFit. . So I would change the option to SetTolerance or SetTol and implement it correctly in RooMinuit. In RooMinimizer unfortunately the method setting the tolerance is called SetEps. Probably this method should be changed. Please let me know if you can make these changes, . Thank you . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:15,interoperability,format,format,15,Enabling clang-format feedback.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:22,usability,feedback,feedback,22,Enabling clang-format feedback.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/137:27,usability,close,close,27,Since there are no reply I close now this PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/137
https://github.com/root-project/root/pull/138:9,deployability,patch,patch,9,"This new patch has been added in the ROOT master. . Thank you for the contribution. Best, . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/138
https://github.com/root-project/root/pull/138:9,safety,patch,patch,9,"This new patch has been added in the ROOT master. . Thank you for the contribution. Best, . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/138
https://github.com/root-project/root/pull/138:9,security,patch,patch,9,"This new patch has been added in the ROOT master. . Thank you for the contribution. Best, . Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/138
https://github.com/root-project/root/pull/141:41,deployability,patch,patches,41,"This was a pull request against v6-06-00-patches, not master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/141
https://github.com/root-project/root/pull/141:41,safety,patch,patches,41,"This was a pull request against v6-06-00-patches, not master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/141
https://github.com/root-project/root/pull/141:41,security,patch,patches,41,"This was a pull request against v6-06-00-patches, not master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/141
https://github.com/root-project/root/pull/141:14,usability,learn,learning,14,Opps. I still learning to to deal with PR of the mirror to be applied to the master. Thanks. I think it should be ok now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/141
https://github.com/root-project/root/pull/142:0,deployability,Integr,Integrated,0,Integrated. Thanks Mattias!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/142
https://github.com/root-project/root/pull/142:0,integrability,Integr,Integrated,0,Integrated. Thanks Mattias!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/142
https://github.com/root-project/root/pull/142:0,interoperability,Integr,Integrated,0,Integrated. Thanks Mattias!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/142
https://github.com/root-project/root/pull/142:0,modifiability,Integr,Integrated,0,Integrated. Thanks Mattias!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/142
https://github.com/root-project/root/pull/142:0,reliability,Integr,Integrated,0,Integrated. Thanks Mattias!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/142
https://github.com/root-project/root/pull/142:0,security,Integr,Integrated,0,Integrated. Thanks Mattias!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/142
https://github.com/root-project/root/pull/142:0,testability,Integr,Integrated,0,Integrated. Thanks Mattias!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/142
https://github.com/root-project/root/pull/143:25,deployability,patch,patches,25,Thank you Omar for these patches. They are now committed in the ROOT master. Cheers. Lorenzo.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/143
https://github.com/root-project/root/pull/143:25,safety,patch,patches,25,Thank you Omar for these patches. They are now committed in the ROOT master. Cheers. Lorenzo.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/143
https://github.com/root-project/root/pull/143:25,security,patch,patches,25,Thank you Omar for these patches. They are now committed in the ROOT master. Cheers. Lorenzo.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/143
https://github.com/root-project/root/pull/146:39,safety,review,review,39,@pcanal - This is another one ready to review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:39,testability,review,review,39,@pcanal - This is another one ready to review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:28,integrability,buffer,buffer,28,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:311,integrability,protocol,protocol,311,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:311,interoperability,protocol,protocol,311,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:130,modifiability,exten,extent,130,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:221,modifiability,layer,layer,221,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:61,performance,network,network,61,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:69,performance,latenc,latency,69,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:204,performance,cach,caching,204,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:61,security,network,network,61,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:69,usability,latenc,latency,69,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:141,usability,document,documentation,141,"> Rather, the focus of this buffer is to hide the effects of network latency. This is _also_ the focus of the TTreeCache, we must extent the documentation to explain in which use case this is yet-another-caching/prefetch layer is beneficial (compare to the other ones include the TTreeCache, the one the remote protocol might provide (xrootd) or even the XNet.ReadCacheSize or the one behind TFile::OpenFromCache).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:156,integrability,event,events,156,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:202,integrability,event,events,202,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:227,integrability,event,events,227,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:293,integrability,event,events,293,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:315,integrability,event,events,315,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:341,integrability,event,event,341,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:425,integrability,event,events,425,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:409,performance,latenc,latency,409,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:488,safety,test,tests,488,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:483,testability,unit,unit,483,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:488,testability,test,tests,488,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:409,usability,latenc,latency,409,"Hi Philippe,. I think this technique is useful in the following cases (both assuming the file is larger than the TTC):. 1. We have a job reading the file's events out-of-order (i.e., randomly selecting events) and reading many events. This occurs when we have two open files and have to match events in file A with events in file B (and B's event order is very different than A). 2. Cases where there is high latency and the events are read more than once. (Forgot to mention - have unit tests ready to be posted once this is merged.). Brian.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:31,usability,guid,guide,31,@vgvassilev - is there a short guide on writing gtests within ROOT? I just barely got caught up with doing `roottest` stuff...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:92,safety,test,test,92,"@bbockelm, it looks like your question was snowed under by our bot. You could look at io/io/test/. It is just adding a file. A test I recently added could be found [here](https://github.com/root-project/root/pull/688/commits/8b5b63e2bc6d118486e4dcdc6e3cdbc974adde76)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:127,safety,test,test,127,"@bbockelm, it looks like your question was snowed under by our bot. You could look at io/io/test/. It is just adding a file. A test I recently added could be found [here](https://github.com/root-project/root/pull/688/commits/8b5b63e2bc6d118486e4dcdc6e3cdbc974adde76)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:92,testability,test,test,92,"@bbockelm, it looks like your question was snowed under by our bot. You could look at io/io/test/. It is just adding a file. A test I recently added could be found [here](https://github.com/root-project/root/pull/688/commits/8b5b63e2bc6d118486e4dcdc6e3cdbc974adde76)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:127,testability,test,test,127,"@bbockelm, it looks like your question was snowed under by our bot. You could look at io/io/test/. It is just adding a file. A test I recently added could be found [here](https://github.com/root-project/root/pull/688/commits/8b5b63e2bc6d118486e4dcdc6e3cdbc974adde76)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:49,performance,cach,caching,49,How does this relates and/or superseed the local caching from TFilePrefetch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:4,reliability,doe,does,4,How does this relates and/or superseed the local caching from TFilePrefetch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:159,integrability,buffer,buffer,159,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:222,integrability,event,eventually,222,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:520,integrability,buffer,buffering,520,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:20,performance,cach,caching,20,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:70,performance,cach,cache,70,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:101,performance,disk,disk,101,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:188,performance,memor,memory,188,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:211,performance,cach,cache,211,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:330,performance,latenc,latency,330,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:400,performance,cach,cache,400,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:389,reliability,doe,does,389,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:470,testability,simpl,simpler,470,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:188,usability,memor,memory,188,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:330,usability,latenc,latency,330,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:470,usability,simpl,simpler,470,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:12,integrability,buffer,buffer,12,"> This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This sounds like functionally it overlaps with the TTreeCache. How it is different? How are they playing along?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:75,integrability,event,eventually,75,"> This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This sounds like functionally it overlaps with the TTreeCache. How it is different? How are they playing along?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:41,performance,memor,memory,41,"> This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This sounds like functionally it overlaps with the TTreeCache. How it is different? How are they playing along?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:64,performance,cach,cache,64,"> This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This sounds like functionally it overlaps with the TTreeCache. How it is different? How are they playing along?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:41,usability,memor,memory,41,"> This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This sounds like functionally it overlaps with the TTreeCache. How it is different? How are they playing along?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:490,energy efficiency,predict,predictable,490,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:299,integrability,event,event,299,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:422,integrability,event,event,422,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:70,performance,perform,perform,70,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:398,performance,perform,perform,398,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:62,reliability,doe,doesn,62,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:490,safety,predict,predictable,490,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:428,security,access,access,428,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:466,security,access,access,466,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:70,usability,perform,perform,70,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:398,usability,perform,perform,398,"This captures a wider set of use cases than `TTreeCache`, but doesn't perform as well as `TTreeCache` for the cases TTC is designed for. - TTC works best when most of the IO is walking sequentially through the tree, reading from non-local storage, with approximately the same branches read for each event. `TFileCacheRead` will handle this case OK - but not as well as TTC. - `TFileCacheRead` will perform better when the event access is non-sequential, when branch access patterns are not predictable, or when non-TTree data is used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:44,availability,error,error,44,"@bbockelm Hi, Brian. This should be an easy error to fix :). Or is this ongoing work? I will tag it as donotmerge if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:44,performance,error,error,44,"@bbockelm Hi, Brian. This should be an easy error to fix :). Or is this ongoing work? I will tag it as donotmerge if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:44,safety,error,error,44,"@bbockelm Hi, Brian. This should be an easy error to fix :). Or is this ongoing work? I will tag it as donotmerge if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:44,usability,error,error,44,"@bbockelm Hi, Brian. This should be an easy error to fix :). Or is this ongoing work? I will tag it as donotmerge if so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:30,usability,close,close,30,"Hi @bbockelm , do you want to close this one or is it ongoing work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:31,availability,error,error,31,"tfilebufferread.cxx(11): fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory. FYI, there is no unistd.h on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:31,performance,error,error,31,"tfilebufferread.cxx(11): fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory. FYI, there is no unistd.h on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:31,safety,error,error,31,"tfilebufferread.cxx(11): fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory. FYI, there is no unistd.h on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/146:31,usability,error,error,31,"tfilebufferread.cxx(11): fatal error C1083: Cannot open include file: 'unistd.h': No such file or directory. FYI, there is no unistd.h on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/146
https://github.com/root-project/root/pull/147:0,deployability,Integr,Integrated,0,Integrated. Thanks Paul.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/147
https://github.com/root-project/root/pull/147:0,integrability,Integr,Integrated,0,Integrated. Thanks Paul.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/147
https://github.com/root-project/root/pull/147:0,interoperability,Integr,Integrated,0,Integrated. Thanks Paul.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/147
https://github.com/root-project/root/pull/147:0,modifiability,Integr,Integrated,0,Integrated. Thanks Paul.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/147
https://github.com/root-project/root/pull/147:0,reliability,Integr,Integrated,0,Integrated. Thanks Paul.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/147
https://github.com/root-project/root/pull/147:0,security,Integr,Integrated,0,Integrated. Thanks Paul.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/147
https://github.com/root-project/root/pull/147:0,testability,Integr,Integrated,0,Integrated. Thanks Paul.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/147
https://github.com/root-project/root/pull/149:107,availability,operat,operation,107,"Hi Larry,. nice new feature: thanks for providing it! Before merging, I'd have some comments:. - Could the operation of cutting take place only if a non-empty selection string is provided? - Can the variable smalltree not be reused? Cheers,. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:199,modifiability,variab,variable,199,"Hi Larry,. nice new feature: thanks for providing it! Before merging, I'd have some comments:. - Could the operation of cutting take place only if a non-empty selection string is provided? - Can the variable smalltree not be reused? Cheers,. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:225,modifiability,reu,reused,225,"Hi Larry,. nice new feature: thanks for providing it! Before merging, I'd have some comments:. - Could the operation of cutting take place only if a non-empty selection string is provided? - Can the variable smalltree not be reused? Cheers,. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:300,integrability,event,event,300,"Hi Larry,. this has been merged. Thanks. I am glad you liked and improved the command line tools! Another feature which could be very useful for analysis and we did not have the time to properly implement is the ability to ""skim"" a tree selecting only some branches - if you want a complement to the event selection. Would you be interested in proposing something in this direction? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:178,performance,time,time,178,"Hi Larry,. this has been merged. Thanks. I am glad you liked and improved the command line tools! Another feature which could be very useful for analysis and we did not have the time to properly implement is the ability to ""skim"" a tree selecting only some branches - if you want a complement to the event selection. Would you be interested in proposing something in this direction? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:282,safety,compl,complement,282,"Hi Larry,. this has been merged. Thanks. I am glad you liked and improved the command line tools! Another feature which could be very useful for analysis and we did not have the time to properly implement is the ability to ""skim"" a tree selecting only some branches - if you want a complement to the event selection. Would you be interested in proposing something in this direction? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:282,security,compl,complement,282,"Hi Larry,. this has been merged. Thanks. I am glad you liked and improved the command line tools! Another feature which could be very useful for analysis and we did not have the time to properly implement is the ability to ""skim"" a tree selecting only some branches - if you want a complement to the event selection. Would you be interested in proposing something in this direction? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:78,usability,command,command,78,"Hi Larry,. this has been merged. Thanks. I am glad you liked and improved the command line tools! Another feature which could be very useful for analysis and we did not have the time to properly implement is the ability to ""skim"" a tree selecting only some branches - if you want a complement to the event selection. Would you be interested in proposing something in this direction? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:91,usability,tool,tools,91,"Hi Larry,. this has been merged. Thanks. I am glad you liked and improved the command line tools! Another feature which could be very useful for analysis and we did not have the time to properly implement is the ability to ""skim"" a tree selecting only some branches - if you want a complement to the event selection. Would you be interested in proposing something in this direction? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:246,integrability,sub,submit,246,"Thanks so much for the merge! I agree that this could be really nice feature to have at the command line. It would certainly be straight-forward. When I get another chunk of free time I may look into doing that, sure. If I get around to it, I'll submit another PR. . Cheers,. -Larry.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:179,performance,time,time,179,"Thanks so much for the merge! I agree that this could be really nice feature to have at the command line. It would certainly be straight-forward. When I get another chunk of free time I may look into doing that, sure. If I get around to it, I'll submit another PR. . Cheers,. -Larry.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/149:92,usability,command,command,92,"Thanks so much for the merge! I agree that this could be really nice feature to have at the command line. It would certainly be straight-forward. When I get another chunk of free time I may look into doing that, sure. If I get around to it, I'll submit another PR. . Cheers,. -Larry.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/149
https://github.com/root-project/root/pull/150:52,deployability,observ,observations,52,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:104,deployability,integr,integrated,104,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:104,integrability,integr,integrated,104,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:124,integrability,event,eventsSelector,124,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:104,interoperability,integr,integrated,104,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:104,modifiability,integr,integrated,104,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:104,reliability,integr,integrated,104,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:104,security,integr,integrated,104,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:52,testability,observ,observations,52,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:104,testability,integr,integrated,104,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:139,usability,tool,tool,139,"Hi Larry,. wow, great. Before merging, I'd have two observations to discuss:. o I wonder if this can be integrated with the eventsSelector tool. o I wonder if one could list the branches, both included and excluded, as a semicolon separated list, e.g. ""muons;muons_calib;ak6_jets;ak6_calib_jets"" so to be able to pick just the information needed for a quick (or not so quick) analysis. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:157,energy efficiency,core,core,157,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:527,energy efficiency,current,currently,527,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:363,reliability,doe,doesn,363,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:826,reliability,Doe,Does,826,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:593,safety,input,input,593,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:65,usability,command,command,65,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:320,usability,command,command,320,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:593,usability,input,input,593,"Hey Danilo,. Sure thing. So. - If you mean the rooteventselector command, then I have added it to that since it's implemented using the machinery. So at its core, you can now drop entries and branches with one call to rooteventselector. Or if you only care about removing branches you can use the dedicated rootslimtree command. (I just thought rooteventselector doesn't actually sound like it should remove branches.) Or have I misunderstood your comment? - And so the include and exclude arguments can be used separately and currently take a comma separated list of branch names (or, rather input to SetBranchStatus, so it can e.g. include wildcards). You can use them together, and exclude runs first. So say you have a ""whitelist"" of branches you want to keep, you can run with. ```. -e ""*"" -i ""branch1,branch2,etc"". ```. Does that address your comments? Thanks! -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:22,safety,test,testing,22,"Actually a friend was testing this and found a bug where when trying to remove branches, all entries are removed. Fixing.... Sorry for the noise. . -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:22,testability,test,testing,22,"Actually a friend was testing this and found a bug where when trying to remove branches, all entries are removed. Fixing.... Sorry for the noise. . -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:16,deployability,updat,updates,16,"Hi Danilo,. Any updates on this? -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:16,safety,updat,updates,16,"Hi Danilo,. Any updates on this? -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/150:16,security,updat,updates,16,"Hi Danilo,. Any updates on this? -L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/150
https://github.com/root-project/root/pull/151:196,interoperability,incompatib,incompatibility,196,"Hi,. I see you suppressed all the code related to ""fResolution"". I agree it might be not used but doing that you changed the calling sequence of some constructors. That will trigger some backward incompatibility. Is it really important for you to clean up it that way ? ... Let us know. Olivier.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:428,deployability,updat,update,428,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:439,deployability,patch,patch,439,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:63,interoperability,compatib,compatibility,63,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:428,safety,updat,update,428,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:439,safety,patch,patch,439,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:428,security,updat,update,428,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:439,security,patch,patch,439,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:238,usability,document,documentation,238,"I see. I did not realize this might cause issues with backward compatibility. I did this because of the confusion `TSpectrum(Int_t maxpositions, Double_t resolution=1)` and `SetResolution(Double_t resolution=1)` causes. When you read the documentation, you get the impression that you can set the resolution, which is not true. The only way to figure out this is useless it to search for `fResolution` in the source code. I can update the patch and leave the function declarations as they are, but make a note in the comments, remove the `fResolution` member, and empty the body of the `SetResolution` function. Let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:34,testability,simpl,simply,34,One other possibility would be to simply add a comment saying that fResolution is not used right now and could be used/implemented later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:34,usability,simpl,simply,34,One other possibility would be to simply add a comment saying that fResolution is not used right now and could be used/implemented later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:23,deployability,updat,update,23,OK. I will do that and update the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:34,deployability,patch,patch,34,OK. I will do that and update the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:23,safety,updat,update,23,OK. I will do that and update the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:34,safety,patch,patch,34,OK. I will do that and update the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:23,security,updat,update,23,OK. I will do that and update the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:34,security,patch,patch,34,OK. I will do that and update the patch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:2,deployability,updat,updated,2,I updated the pull request per your comments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:2,safety,updat,updated,2,I updated the pull request per your comments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:2,security,updat,updated,2,I updated the pull request per your comments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:8,deployability,Updat,Update,8,Thanks. Update done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:8,safety,Updat,Update,8,Thanks. Update done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:8,security,Updat,Update,8,Thanks. Update done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:271,availability,avail,available,271,Quick question about the examples in the `TSpectrum` documentation. Most of them reference the `spectra/TSpectrum.root` file ([example](https://github.com/root-mirror/root/blob/1eb2c675f464dbd8c85eaef110961f5fb86bf964/hist/spectrum/src/TSpectrum.cxx#L434)). Is this file available somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:271,reliability,availab,available,271,Quick question about the examples in the `TSpectrum` documentation. Most of them reference the `spectra/TSpectrum.root` file ([example](https://github.com/root-mirror/root/blob/1eb2c675f464dbd8c85eaef110961f5fb86bf964/hist/spectrum/src/TSpectrum.cxx#L434)). Is this file available somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:271,safety,avail,available,271,Quick question about the examples in the `TSpectrum` documentation. Most of them reference the `spectra/TSpectrum.root` file ([example](https://github.com/root-mirror/root/blob/1eb2c675f464dbd8c85eaef110961f5fb86bf964/hist/spectrum/src/TSpectrum.cxx#L434)). Is this file available somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:271,security,availab,available,271,Quick question about the examples in the `TSpectrum` documentation. Most of them reference the `spectra/TSpectrum.root` file ([example](https://github.com/root-mirror/root/blob/1eb2c675f464dbd8c85eaef110961f5fb86bf964/hist/spectrum/src/TSpectrum.cxx#L434)). Is this file available somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/151:53,usability,document,documentation,53,Quick question about the examples in the `TSpectrum` documentation. Most of them reference the `spectra/TSpectrum.root` file ([example](https://github.com/root-mirror/root/blob/1eb2c675f464dbd8c85eaef110961f5fb86bf964/hist/spectrum/src/TSpectrum.cxx#L434)). Is this file available somewhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/151
https://github.com/root-project/root/pull/152:90,usability,close,close,90,@zzxuanyuan could you please address @Axel-Naumann comments or let us know if you want to close this?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/152
https://github.com/root-project/root/pull/152:37,usability,close,close,37,"@bbockelm @etejedor ,. Do we want to close this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/152
https://github.com/root-project/root/pull/152:21,usability,close,close,21,Yes - I think we can close it for now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/152
https://github.com/root-project/root/pull/153:96,deployability,modul,modulo,96,Thank-you very much Mattias. This is great work. I have committed the changes to master branch (modulo few conflicts I had to revolve). I'll close the PR but if you have further changes don't hesitate to add another one. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/153
https://github.com/root-project/root/pull/153:107,interoperability,conflict,conflicts,107,Thank-you very much Mattias. This is great work. I have committed the changes to master branch (modulo few conflicts I had to revolve). I'll close the PR but if you have further changes don't hesitate to add another one. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/153
https://github.com/root-project/root/pull/153:96,modifiability,modul,modulo,96,Thank-you very much Mattias. This is great work. I have committed the changes to master branch (modulo few conflicts I had to revolve). I'll close the PR but if you have further changes don't hesitate to add another one. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/153
https://github.com/root-project/root/pull/153:96,safety,modul,modulo,96,Thank-you very much Mattias. This is great work. I have committed the changes to master branch (modulo few conflicts I had to revolve). I'll close the PR but if you have further changes don't hesitate to add another one. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/153
https://github.com/root-project/root/pull/153:141,usability,close,close,141,Thank-you very much Mattias. This is great work. I have committed the changes to master branch (modulo few conflicts I had to revolve). I'll close the PR but if you have further changes don't hesitate to add another one. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/153
https://github.com/root-project/root/pull/153:139,interoperability,conflict,conflicts,139,Many thanks for merging the proposed changes. It feels good to be able to contribute. There were a few lines lost in the resolution of the conflicts. I created a new PR for those.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/153
https://github.com/root-project/root/pull/155:313,deployability,fail,fail,313,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:90,interoperability,conflict,conflict,90,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:156,interoperability,conflict,conflict,156,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:222,reliability,doe,doesn,222,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:272,reliability,doe,does,272,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:313,reliability,fail,fail,313,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:322,safety,test,tests,322,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:322,testability,test,tests,322,"The root-mirror/root@8f1e7502d9abea88d76a754933000cb1bb39b49e commit by @dpiparo caused a conflict with this pull request. I am not sure how to address the conflict, since as far as I can see the commit to the root master doesn't fix the issue. As far as I can see all it does is add some debug output, but still fail the tests. Or did I miss something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:538,availability,failur,failure,538,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:538,deployability,fail,failure,538,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:618,deployability,fail,fail,618,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:668,deployability,updat,update,668,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:737,deployability,build,builds,737,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:896,deployability,fail,failing,896,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:947,deployability,fail,failing,947,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:114,interoperability,platform,platform,114,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:138,interoperability,architectur,architecture,138,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:201,interoperability,platform,platforms,201,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:564,interoperability,platform,platforms,564,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:583,interoperability,architectur,architecture,583,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:955,interoperability,platform,platform,955,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:538,performance,failur,failure,538,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:538,reliability,fail,failure,538,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:618,reliability,fail,fail,618,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:896,reliability,fail,failing,896,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:947,reliability,fail,failing,947,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:89,safety,test,tests,89,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:496,safety,test,test,496,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:501,safety,test,testSpecFunc,501,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:613,safety,test,test,613,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:640,safety,test,test,640,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:645,safety,test,testSpecFunc,645,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:668,safety,updat,update,668,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:777,safety,test,test,777,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:858,safety,test,test,858,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:979,safety,test,test,979,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1220,safety,test,test,1220,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1251,safety,test,test,1251,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1283,safety,test,test,1283,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1323,safety,test,test,1323,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1362,safety,test,test,1362,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:668,security,updat,update,668,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:89,testability,test,tests,89,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:496,testability,test,test,496,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:501,testability,test,testSpecFunc,501,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:613,testability,test,test,613,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:640,testability,test,test,640,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:645,testability,test,testSpecFunc,645,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:777,testability,test,test,777,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:858,testability,test,test,858,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:979,testability,test,test,979,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1220,testability,test,test,1220,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1251,testability,test,test,1251,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1283,testability,test,test,1283,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1323,testability,test,test,1323,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1362,testability,test,test,1362,"Hi,. thanks for this huge PR: you really put forward quite some solid work about several tests - thanks. For what platform (os, compiler, architecture) were you exactly fixing them? We run them on the platforms listed here: http://cdash.cern.ch/index.php?project=ROOT. My comments, file by file, starting from the ones which might need some discussion before being incorporated in the master. The ones labelled with OK, all but 5, listed at at the end, are for me ready to go in. - math/mathmore/test/testSpecFunc.cxx: we do not see this failure on 64 and 32 bits platforms. On what architecture/compiler did the test fail? - math/mathmore/test/testSpecFunc.cxx: Nice update for coding conventions. My changes were aiming to fix 32 bits builds. Is this the case for you too? - test/stressGraphics.ref: I think this is something to be commented by @couet . - test/stressMathCore.cxx: This was not failing for us. The question asked above about the failing platform still holds. - test/stressTMVA.cxx: I am not sure I get the advantage of trying 2 paths and then falling back on the file on the web: was this a problem for you? Putting @lmoneta in the loop. Files ready to go:. - THistPainter.cxx: OK. - CMakeLists: OK. - test/stressGraphics.cxx: OK. - test/stressHistogram.cxx: OK. - test/stressRooFit.cxx: OK. - tmva/pymva/test/Classification.C: OK. - tmva/rmva/test/Classification.C: OK. - tutorials/hist/th2polyUSA.C: OK. - tutorials/mlp/mlpHiggs.C: OK. - tutorials/quadp/portfolio.C: OK. - tutorials/tmva/TMVAClassification.C: OK. - tutorials/tmva/TMVAClassificationApplication.C: OK. - tutorials/tmva/TMVARegression.C: OK. - tutorials/tmva/TMVARegressionApplication.C: OK.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1542,availability,operat,operations,1542,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1586,availability,operat,operations,1586,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1740,availability,operat,operations,1740,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1782,availability,operat,operations,1782,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2253,availability,sli,slightly,2253,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:286,deployability,FAIL,FAILED,286,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:323,deployability,Fail,Failed,323,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:358,deployability,Fail,Failed,358,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:405,deployability,Fail,Failed,405,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:440,deployability,Fail,Failed,440,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:507,deployability,FAIL,FAILED,507,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:672,deployability,Fail,Failed,672,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:745,deployability,Fail,Failed,745,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:805,deployability,fail,failed,805,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:933,deployability,FAIL,FAILED,933,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:970,deployability,Fail,Failed,970,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1005,deployability,Fail,Failed,1005,"r the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1052,deployability,Fail,Failed,1052," exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1087,deployability,Fail,Failed,1087,"s, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1122,deployability,Fail,Failed,1122,"ome tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1189,deployability,FAIL,FAILED,1189,"ide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1355,deployability,Fail,Failed,1355,"Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1444,deployability,Fail,Failed,1444,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1717,deployability,FAIL,FAILED,1717,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1914,deployability,FAIL,FAILED,1914,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1950,deployability,fail,failed,1950,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2272,deployability,log,logic,2272,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:679,integrability,sub,subtests,679,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:752,integrability,sub,subtests,752,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1362,integrability,sub,subtests,1362," 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1451,integrability,sub,subtests,1451,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:286,reliability,FAIL,FAILED,286,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:323,reliability,Fail,Failed,323,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:358,reliability,Fail,Failed,358,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:405,reliability,Fail,Failed,405,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:440,reliability,Fail,Failed,440,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:507,reliability,FAIL,FAILED,507,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:672,reliability,Fail,Failed,672,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:745,reliability,Fail,Failed,745,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:805,reliability,fail,failed,805,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:933,reliability,FAIL,FAILED,933,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:970,reliability,Fail,Failed,970,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1005,reliability,Fail,Failed,1005,"r the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1052,reliability,Fail,Failed,1052," exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1087,reliability,Fail,Failed,1087,"s, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1122,reliability,Fail,Failed,1122,"ome tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1189,reliability,FAIL,FAILED,1189,"ide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1355,reliability,Fail,Failed,1355,"Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1444,reliability,Fail,Failed,1444,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1717,reliability,FAIL,FAILED,1717,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1914,reliability,FAIL,FAILED,1914,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1950,reliability,fail,failed,1950,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2253,reliability,sli,slightly,2253,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:129,safety,test,tests,129,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:280,safety,test,tests,280,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:309,safety,test,testSpecFunc,309,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:337,safety,test,test-stressgraphics,337,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:372,safety,test,test-stressgraphics-interpreted,372,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:420,safety,test,test-TFormulaTests,420,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:470,safety,test,testSpecFunc,470,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:651,safety,test,test-stressgraphics,651,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:712,safety,test,test-stressgraphics-interpreted,712,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:785,safety,test,test-TFormulaTests,785,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:812,safety,test,tests,812,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:927,safety,test,tests,927,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:956,safety,test,testSpecFunc,956,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:984,safety,test,test-stressgraphics,984,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1019,safety,test,test-stressgraphics-interpreted,1019,"made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1066,safety,test,test-stressmathcore,1066," of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1102,safety,test,test-TFormulaTests,1102,"i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1152,safety,test,testSpecFunc,1152,"lied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1334,safety,test,test-stressgraphics,1334,"ressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1411,safety,test,test-stressgraphics-interpreted,1411,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1500,safety,test,test-stressmathcore,1500,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1930,safety,test,test-TFormulaTests,1930,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1957,safety,test,tests,1957,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1995,safety,test,test,1995,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2034,safety,test,tests,2034,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2112,safety,input,input,2112,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2122,safety,test,test,2122,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2272,safety,log,logic,2272,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2272,security,log,logic,2272,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:129,testability,test,tests,129,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:280,testability,test,tests,280,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:309,testability,test,testSpecFunc,309,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:337,testability,test,test-stressgraphics,337,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:372,testability,test,test-stressgraphics-interpreted,372,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:420,testability,test,test-TFormulaTests,420,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:470,testability,test,testSpecFunc,470,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:651,testability,test,test-stressgraphics,651,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:712,testability,test,test-stressgraphics-interpreted,712,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:785,testability,test,test-TFormulaTests,785,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:812,testability,test,tests,812,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:927,testability,test,tests,927,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:956,testability,test,testSpecFunc,956,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:984,testability,test,test-stressgraphics,984,"Sorry for the delay. I should have made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1019,testability,test,test-stressgraphics-interpreted,1019,"made notes as to why exactly I added each of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1066,testability,test,test-stressmathcore,1066," of the changes, but I didn't - so i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1102,testability,test,test-TFormulaTests,1102,"i had to run some tests without the changes applied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1152,testability,test,testSpecFunc,1152,"lied. Here we go:. For Fedora rawhide i686:. - gcc-c++-6.1.1-2.fc25.i686.rpm. - glibc-2.23.90-23.fc25.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1334,testability,test,test-stressgraphics,1334,"ressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1411,testability,test,test-stressgraphics-interpreted,1411,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1500,testability,test,test-stressmathcore,1500,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1930,testability,test,test-TFormulaTests,1930,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1957,testability,test,tests,1957,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1995,testability,test,test,1995,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2034,testability,test,tests,2034,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2122,testability,test,test,2122,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2272,testability,log,logic,2272,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:2112,usability,input,input,2112,"st-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED. Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests - 5 9 13 15 37 39 41. - test-stressgraphics-interpreted. Failed subtests - 5 9 13 15 37 39 41. - test-TFormulaTests. failed tests are : 18 19 23 28. For Fedora 23 i686. - gcc-c++-5.3.1-6.fc23.i686. - glibc-2.22-17.fc23.i686. The following tests FAILED:. 45 - mathmore-testSpecFunc (Failed). 82 - test-stressgraphics (Failed). 83 - test-stressgraphics-interpreted (Failed). 94 - test-stressmathcore (Failed). 115 - test-TFormulaTests (Failed). Details:. - mathmore-testSpecFunc. ```. laguerre(4, 1.) : FAILED . Discrepancy in laguerre(4, 1.) () :. -0.625000000000000555 != -0.625 discr = 1 (Allowed discrepancy is 4.44089209850062616e-16). ```. - test-stressgraphics. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressgraphics-interpreted. Failed subtests: 5 8 9 10 11 12 13 14 15 16 37 39 41. - test-stressmathcore. ```. PtEtaPhiMVector operations . Discrepancy in PtEtaPhiMVector operations() :. 62919.121533774116 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . PxPyPzMVector operations . Discrepancy in PxPyPzMVector operations() :. 62919.1215337740286 != 62919.1608736201233 discr = 2 (Allowed discrepancy is 2.22044604925031308e-07). ............ FAILED . ```. - test-TFormulaTests. failed tests are : 18 19 23 27 28. Regarding test/stressTMVA.cxx: there are several tests that use the tmva_class_example.root and tmva_reg_example.root files as input:. - test/stressTMVA.cxx. - tutorials/tmva/TMVAClassificationApplication.C. - tutorials/tmva/TMVAClassification.C. Before they all used slightly different logic for what locations to try and in what order, which didn't make sense to me. I therefore harmonized the usage so that they all do the same thing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:58,performance,CACH,CACHEREAD,58,"I see you access http://root.cern.ch/files/usa.root using CACHEREAD in all places where it is used (tutorial, stressgraphics, THistpainter) ... fine with me ... but I do not understand why you changed stressgraphics.ref .... ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:10,security,access,access,10,"I see you access http://root.cern.ch/files/usa.root using CACHEREAD in all places where it is used (tutorial, stressgraphics, THistpainter) ... fine with me ... but I do not understand why you changed stressgraphics.ref .... ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:174,testability,understand,understand,174,"I see you access http://root.cern.ch/files/usa.root using CACHEREAD in all places where it is used (tutorial, stressgraphics, THistpainter) ... fine with me ... but I do not understand why you changed stressgraphics.ref .... ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:157,availability,failur,failures,157,"This is the output form Fedora 23 i686. The output differs between different releases and different architectures, but I think this is the one with the most failures. [stressgraphics.txt](https://github.com/root-mirror/root/files/329482/stressgraphics.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:77,deployability,releas,releases,77,"This is the output form Fedora 23 i686. The output differs between different releases and different architectures, but I think this is the one with the most failures. [stressgraphics.txt](https://github.com/root-mirror/root/files/329482/stressgraphics.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:157,deployability,fail,failures,157,"This is the output form Fedora 23 i686. The output differs between different releases and different architectures, but I think this is the one with the most failures. [stressgraphics.txt](https://github.com/root-mirror/root/files/329482/stressgraphics.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:100,interoperability,architectur,architectures,100,"This is the output form Fedora 23 i686. The output differs between different releases and different architectures, but I think this is the one with the most failures. [stressgraphics.txt](https://github.com/root-mirror/root/files/329482/stressgraphics.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:157,performance,failur,failures,157,"This is the output form Fedora 23 i686. The output differs between different releases and different architectures, but I think this is the one with the most failures. [stressgraphics.txt](https://github.com/root-mirror/root/files/329482/stressgraphics.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:157,reliability,fail,failures,157,"This is the output form Fedora 23 i686. The output differs between different releases and different architectures, but I think this is the one with the most failures. [stressgraphics.txt](https://github.com/root-mirror/root/files/329482/stressgraphics.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:51,deployability,contain,contains,51,BTW: I have noticed that the stressGraphics output contains now the following line because of your changes:. Info in TFile::OpenFromCache: using local cache copy of http://root.cern.ch/files/usa.root [./files/usa.root]. This will make roottest fail....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:244,deployability,fail,fail,244,BTW: I have noticed that the stressGraphics output contains now the following line because of your changes:. Info in TFile::OpenFromCache: using local cache copy of http://root.cern.ch/files/usa.root [./files/usa.root]. This will make roottest fail....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:151,performance,cach,cache,151,BTW: I have noticed that the stressGraphics output contains now the following line because of your changes:. Info in TFile::OpenFromCache: using local cache copy of http://root.cern.ch/files/usa.root [./files/usa.root]. This will make roottest fail....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:244,reliability,fail,fail,244,BTW: I have noticed that the stressGraphics output contains now the following line because of your changes:. Info in TFile::OpenFromCache: using local cache copy of http://root.cern.ch/files/usa.root [./files/usa.root]. This will make roottest fail....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:70,deployability,fail,fail,70,I am not familiar with roottest. This output line does not make ctest fail. Why are they different?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:50,reliability,doe,does,50,I am not familiar with roottest. This output line does not make ctest fail. Why are they different?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:70,reliability,fail,fail,70,I am not familiar with roottest. This output line does not make ctest fail. Why are they different?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:189,availability,failur,failure,189,As far as I know roottest compares the output of of stressGraphics to a reference. Having this extra printout will make it different from the reference. My guess is that we will get a test failure..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:189,deployability,fail,failure,189,As far as I know roottest compares the output of of stressGraphics to a reference. Having this extra printout will make it different from the reference. My guess is that we will get a test failure..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:189,performance,failur,failure,189,As far as I know roottest compares the output of of stressGraphics to a reference. Having this extra printout will make it different from the reference. My guess is that we will get a test failure..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:189,reliability,fail,failure,189,As far as I know roottest compares the output of of stressGraphics to a reference. Having this extra printout will make it different from the reference. My guess is that we will get a test failure..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:184,safety,test,test,184,As far as I know roottest compares the output of of stressGraphics to a reference. Having this extra printout will make it different from the reference. My guess is that we will get a test failure..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:184,testability,test,test,184,As far as I know roottest compares the output of of stressGraphics to a reference. Having this extra printout will make it different from the reference. My guess is that we will get a test failure..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:75,availability,Error,Error,75,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:68,deployability,FAIL,FAILED,68,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:75,performance,Error,Error,75,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:68,reliability,FAIL,FAILED,68,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:0,safety,test,test-stressgraphics,0,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:75,safety,Error,Error,75,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:0,testability,test,test-stressgraphics,0,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:75,usability,Error,Error,75,"test-stressgraphics is not comparing the output. It is looking for ""FAILED|Error in"" in the output. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:54,availability,failur,failures,54,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:183,availability,failur,failures,183,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:326,availability,failur,failure,326,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:384,availability,failur,failures,384,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:54,deployability,fail,failures,54,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:183,deployability,fail,failures,183,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:326,deployability,fail,failure,326,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:384,deployability,fail,failures,384,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:54,performance,failur,failures,54,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:183,performance,failur,failures,183,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:326,performance,failur,failure,326,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:384,performance,failur,failures,384,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:54,reliability,fail,failures,54,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:183,reliability,fail,failures,183,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:326,reliability,fail,failure,326,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:384,reliability,fail,failures,384,"As I wrote before the Fedora 23 i686 was not the only failures in stress graphics, only the one with the most of them. I tried rerunning usung the new reference from master and had 4 failures in epel 7:. [stressgraphics-epel7.txt](https://github.com/root-mirror/root/files/330670/stressgraphics-epel7.txt). There was also one failure in Fedora 24, but it was the same as one of the 4 failures above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:136,interoperability,conflict,conflict,136,@ellert I am working on the merge. Several things have already been done as part of the master so there was (as expected) several merge conflict. I pick resolutions that can be seen at: https://github.com/pcanal/root/tree/ellert-test-fixes . Can you please verify that they are complete/correct for you? Thanks. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:229,safety,test,test-fixes,229,@ellert I am working on the merge. Several things have already been done as part of the master so there was (as expected) several merge conflict. I pick resolutions that can be seen at: https://github.com/pcanal/root/tree/ellert-test-fixes . Can you please verify that they are complete/correct for you? Thanks. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:278,safety,compl,complete,278,@ellert I am working on the merge. Several things have already been done as part of the master so there was (as expected) several merge conflict. I pick resolutions that can be seen at: https://github.com/pcanal/root/tree/ellert-test-fixes . Can you please verify that they are complete/correct for you? Thanks. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:278,security,compl,complete,278,@ellert I am working on the merge. Several things have already been done as part of the master so there was (as expected) several merge conflict. I pick resolutions that can be seen at: https://github.com/pcanal/root/tree/ellert-test-fixes . Can you please verify that they are complete/correct for you? Thanks. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:229,testability,test,test-fixes,229,@ellert I am working on the merge. Several things have already been done as part of the master so there was (as expected) several merge conflict. I pick resolutions that can be seen at: https://github.com/pcanal/root/tree/ellert-test-fixes . Can you please verify that they are complete/correct for you? Thanks. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:257,testability,verif,verify,257,@ellert I am working on the merge. Several things have already been done as part of the master so there was (as expected) several merge conflict. I pick resolutions that can be seen at: https://github.com/pcanal/root/tree/ellert-test-fixes . Can you please verify that they are complete/correct for you? Thanks. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:267,availability,failur,failures,267,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:465,availability,operat,operator,465,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:692,availability,consist,consistency,692,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:267,deployability,fail,failures,267,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:566,deployability,version,version,566,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1208,deployability,fail,fail,1208,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:566,integrability,version,version,566,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1221,interoperability,architectur,architectures,1221,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:566,modifiability,version,version,566,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:267,performance,failur,failures,267,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:267,reliability,fail,failures,267,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:453,reliability,doe,does,453,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:526,reliability,doe,does,526,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1208,reliability,fail,fail,1208,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:63,safety,test,test-fixes,63,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:139,safety,test,test,139,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:262,safety,test,test,262,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:746,safety,test,tests,746,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1197,safety,test,tests,1197,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:63,testability,test,test-fixes,63,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:139,testability,test,test,139,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:262,testability,test,test,262,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:746,testability,test,tests,746,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:1197,testability,test,tests,1197,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:692,usability,consist,consistency,692,"If I merge the master (without the last two commits) into this test-fixes branch and then check the differences with your branch, only the test/TFormulaParsingTests.h file differs. I think the change made in master to that file attempted to fix some of the same test failures I attempted to fix, but not all of them. An fpEqual function was introduced to do comparisons between numbers, but unless the 3rd optional argument is given, that function only does normal operator== between the numbers. And only in one of the calls does it actually set this option. In my version I used a similar approach, but I used TMath::AreEqualAbs instead of writing a new function. I chose this function for consistency since it was already used by a few of the tests in the file. I added calls to TMath::AreEqualAbs to 6 places in the file, not only 1 - though one of the six is the same as the one place where the third option to fpEqual is used. Whether to use the existing TMath::AreEqualAbs or write a new similar function is of course a matter of taste, but since at present in master the third argument to fpEqual is only used at one single place the implementation in master is incomplete and some of the tests will fail in some architectures.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:83,availability,operat,operations,83,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:127,availability,operat,operations,127,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:171,availability,operat,operations,171,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:4,deployability,log,log,4,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:15,deployability,fail,failing,15,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:305,deployability,FAIL,FAILED,305,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:15,reliability,fail,failing,15,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:305,reliability,FAIL,FAILED,305,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:4,safety,log,log,4,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:38,safety,test,test,38,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:4,security,log,log,4,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:4,testability,log,log,4,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:38,testability,test,test,38,The log of the failing stressMathCore test on Fedora 26 i686 says:. ```. XYZVector operations 		.............. RhoEtaPhiVector operations . Discrepancy in RhoEtaPhiVector operations() :. 122283.610163202422 != 122283.610163183446 discr = 1 (Allowed discrepancy is 1.33226762955018785e-13). 		............ FAILED . ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:39,deployability,contain,contains,39,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:375,interoperability,conflict,conflicts,375,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:257,performance,time,time,257,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:393,performance,time,times,393,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:95,safety,test,test,95,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:219,safety,test,test,219,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:426,safety,review,review,426,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:628,safety,review,review,628,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:95,testability,test,test,95,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:219,testability,test,test,219,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:426,testability,review,review,426,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:628,testability,review,review,628,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/155:727,usability,close,close,727,"This pull request is now quite old. It contains various fixes all related to the runnng to the test suite. Some of the changes originally proposed here were cherry picked and merged, while others remain unresolved. New test related problems were added over time, and since the pull request is so old it has been necessary to merge the master branch in order to resolve merge conflicts several times. All this makes it hard to review the proposed changes. For this reason I have split the proposed changes in this pull request into several new ones, each of which addresses one singe issue. This will hopefully make it easier to review. The new pull requests replacing this one are: #400, #401, #402, #403, #404 and #405. I now close this one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/155
https://github.com/root-project/root/pull/159:26,deployability,modul,module,26,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:166,deployability,modul,module,166,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:26,modifiability,modul,module,26,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:166,modifiability,modul,module,166,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:26,safety,modul,module,26,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:166,safety,modul,module,166,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:605,usability,HINT,HINTS,605,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:775,usability,HINT,HINTS,775,"Can you try the following module that makes use further of PATH_SUFFIXES. Thanks. ```. # - Find PostgreSQL. # Find the PostgreSQL includes and client library. # This module defines. # POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h. # POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL. # POSTGRESQL_FOUND, If false, do not try to use PostgreSQL. # Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>. #. # Redistribution and use is allowed according to the terms of the BSD license. # For details see the accompanying COPYING-CMAKE-SCRIPTS file. find_path(POSTGRESQL_INCLUDE_DIR libpq-fe.h. HINTS ${POSTGRESQL_DIR}/include $ENV{POSTGRESQL_DIR}/include. PATH_SUFFIXES pgsql pgsql/server postgresql postgresql/server. ). find_library(POSTGRESQL_LIBRARY NAMES pq. HINTS ${POSTGRESQL_DIR}/lib $ENV{POSTGRESQL_DIR}/lib. PATH_SUFFIXES pgsql posgresql. ). if(POSTGRESQL_LIBRARY). set(POSTGRESQL_LIBRARIES ${POSTGRESQL_LIBRARY}). endif(). include(FindPackageHandleStandardArgs). find_package_handle_standard_args(PostgreSQL DEFAULT_MSG. POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). mark_as_advanced(POSTGRESQL_INCLUDE_DIR POSTGRESQL_LIBRARY). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:40,deployability,modul,module,40,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:262,deployability,patch,patch,262,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:146,energy efficiency,current,current,146,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:40,modifiability,modul,module,40,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:40,safety,modul,module,40,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:262,safety,patch,patch,262,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:262,security,patch,patch,262,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/159:27,usability,confirm,confirm,27,"Dear Pere, . indeed, I can confirm this module works as expected (after deleting the `CMakeCache.txt` of course) - and it's much shorter than the current `FindPostgreSQL.cmake` in-tree, which is always a plus. . So that seems like a much better solution than my patch, thanks! :+1: . Cheers, . Oliver.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/159
https://github.com/root-project/root/pull/161:41,integrability,filter,filter,41,"Hi Mattias, I am trying to take your new filter.cxx but on mac I get:. filter.cxx:233:34: warning: field width should have type 'int', but argument has type 'size_t' (aka 'unsigned long') [-Wformat]. if (spos) printf(""%-*s%s"", spos, ""///"",. ~~~^ ~~~~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:71,integrability,filter,filter,71,"Hi Mattias, I am trying to take your new filter.cxx but on mac I get:. filter.cxx:233:34: warning: field width should have type 'int', but argument has type 'size_t' (aka 'unsigned long') [-Wformat]. if (spos) printf(""%-*s%s"", spos, ""///"",. ~~~^ ~~~~.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:62,deployability,version,version,62,The Doxyfile changes you suggest here are done against an old version. In the new one already ignores ClassDef and ClassImp.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:62,integrability,version,version,62,The Doxyfile changes you suggest here are done against an old version. In the new one already ignores ClassDef and ClassImp.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:62,modifiability,version,version,62,The Doxyfile changes you suggest here are done against an old version. In the new one already ignores ClassDef and ClassImp.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:545,availability,error,errors,545,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:358,deployability,version,version,358,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:559,deployability,log,logs,559,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:576,deployability,version,versions,576,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:1074,deployability,version,version,1074,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:358,integrability,version,version,358,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:576,integrability,version,versions,576,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:1074,integrability,version,version,1074,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:358,modifiability,version,version,358,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:576,modifiability,version,versions,576,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:1074,modifiability,version,version,1074,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:545,performance,error,errors,545,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:376,reliability,doe,doesn,376,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:1092,reliability,doe,does,1092,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:545,safety,error,errors,545,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:559,safety,log,logs,559,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:559,security,log,logs,559,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:559,testability,log,logs,559,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:545,usability,error,errors,545,"The Doxyfile in master uses:. ```. EXCLUDE_SYMBOLS = *ClassDef* *ClassImp*. MACRO_EXPANSION = NO. EXPAND_ONLY_PREDEF = NO. PREDEFINED = . ```. The Doxyfile in the PR uses. ```. EXCLUDE_SYMBOLS =. MACRO_EXPANSION = YES. EXPAND_ONLY_PREDEF = YES. PREDEFINED = ClassDef(x,y)=// ClassImp(x)=// ClassImpQ(x)=// templateClassImp(x)=// NamespaceImp(x)=//. ```. The version in master doesn't really address the problem. At best it can be viewed as a cosmetic change that papers over a tiny fraction of the issues. If I grep for some common warnings and errors in the logs for the two versions I get:. ```. $ grep ""Found ';' while"" bad.txt | wc -l. 89. $ grep ""Illegal member name found"" bad.txt | wc -l. 138. $ grep ""no matching file member found for"" bad.txt | wc -l. 92. $ grep ""was not declared or defined"" bad.txt | wc -l. 185. $ grep ""Found ';' while"" good.txt | wc -l. 1. $ grep ""Illegal member name found"" good.txt | wc -l. 0. $ grep ""no matching file member found for"" good.txt | wc -l. 43. $ grep ""was not declared or defined"" good.txt | wc -l. 41. ```. As can be seen the version in master does not work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:46,deployability,log,logic,46,In filter.cxx I see that you have suppress le logic (ts) after the comment:. // Inline the directives to show the picture and/or the code. It was suppose to cover the case of both cases of comments:. /*. ... */. and . ////. I see comments related to that in your PR ... but seems to me both cases still need to be covered... right ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:3,integrability,filter,filter,3,In filter.cxx I see that you have suppress le logic (ts) after the comment:. // Inline the directives to show the picture and/or the code. It was suppose to cover the case of both cases of comments:. /*. ... */. and . ////. I see comments related to that in your PR ... but seems to me both cases still need to be covered... right ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:46,safety,log,logic,46,In filter.cxx I see that you have suppress le logic (ts) after the comment:. // Inline the directives to show the picture and/or the code. It was suppose to cover the case of both cases of comments:. /*. ... */. and . ////. I see comments related to that in your PR ... but seems to me both cases still need to be covered... right ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:46,security,log,logic,46,In filter.cxx I see that you have suppress le logic (ts) after the comment:. // Inline the directives to show the picture and/or the code. It was suppose to cover the case of both cases of comments:. /*. ... */. and . ////. I see comments related to that in your PR ... but seems to me both cases still need to be covered... right ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:46,testability,log,logic,46,In filter.cxx I see that you have suppress le logic (ts) after the comment:. // Inline the directives to show the picture and/or the code. It was suppose to cover the case of both cases of comments:. /*. ... */. and . ////. I see comments related to that in your PR ... but seems to me both cases still need to be covered... right ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:123,availability,consist,consistently,123,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:48,deployability,log,logic,48,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:481,deployability,contain,contain,481,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:325,integrability,sub,substr,325,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:383,integrability,sub,substr,383,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:48,safety,log,logic,48,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:48,security,log,logic,48,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:469,security,modif,modified,469,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:48,testability,log,logic,48,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:123,usability,consist,consistently,123,"With the new code there is no need to have that logic in two places. The one place where it still is now covers both cases consistently:. ```. size_t l = gLineString.length();. size_t b = 0;. do {. size_t e = gLineString.find('\n', b);. if (e != string::npos) e++;. if (spos) printf(""%-*s%s"", (int) spos, ""///"",. gLineString.substr(b, e - b).c_str());. else printf(""%s"", gLineString.substr(b, e - b).c_str());. b = e;. } while (b < l);. ```. I.e. if the gLineString is modified to contain a linebreak, then when it is printed out it is spiit at the linebreak and the ""///"" comment marker is added when needed. There is no need to add the comment marker to the gLineString itself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:87,safety,test,tests,87,Ah yes I understand now. Actually it seems to work fine :-). I will do one or two more tests and will commit it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:9,testability,understand,understand,9,Ah yes I understand now. Actually it seems to work fine :-). I will do one or two more tests and will commit it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:87,testability,test,tests,87,Ah yes I understand now. Actually it seems to work fine :-). I will do one or two more tests and will commit it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:4,integrability,filter,filter,4,New filter.cxx in place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:8,deployability,patch,patches,8,All the patches in this PR have been applied. Thanks ! . I close it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:8,safety,patch,patches,8,All the patches in this PR have been applied. Thanks ! . I close it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:8,security,patch,patches,8,All the patches in this PR have been applied. Thanks ! . I close it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/161:59,usability,close,close,59,All the patches in this PR have been applied. Thanks ! . I close it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/161
https://github.com/root-project/root/pull/166:109,availability,operat,operator,109,"Hi Lorenzo,. yes, unfortunately this is required for the following reason:. a) I got rid of dispatching from operator() for TLorentzVector to operator() of TVector3 (""no double switch""). Instead I directly call .X() .Y() of TVector3. . b) In turn, since there is a ""reference"" operator() of TLorentzVector, I need referenced access to TVector3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:142,availability,operat,operator,142,"Hi Lorenzo,. yes, unfortunately this is required for the following reason:. a) I got rid of dispatching from operator() for TLorentzVector to operator() of TVector3 (""no double switch""). Instead I directly call .X() .Y() of TVector3. . b) In turn, since there is a ""reference"" operator() of TLorentzVector, I need referenced access to TVector3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:277,availability,operat,operator,277,"Hi Lorenzo,. yes, unfortunately this is required for the following reason:. a) I got rid of dispatching from operator() for TLorentzVector to operator() of TVector3 (""no double switch""). Instead I directly call .X() .Y() of TVector3. . b) In turn, since there is a ""reference"" operator() of TLorentzVector, I need referenced access to TVector3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:325,security,access,access,325,"Hi Lorenzo,. yes, unfortunately this is required for the following reason:. a) I got rid of dispatching from operator() for TLorentzVector to operator() of TVector3 (""no double switch""). Instead I directly call .X() .Y() of TVector3. . b) In turn, since there is a ""reference"" operator() of TLorentzVector, I need referenced access to TVector3.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:116,availability,operat,operator,116,"Hi Sandro, . I understand this. But , I presume the performance gain needed for the const method of TLorentzVector::operator(). Is this correct ? . In this case we could leave the old implementation for the other case. Best. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:52,performance,perform,performance,52,"Hi Sandro, . I understand this. But , I presume the performance gain needed for the const method of TLorentzVector::operator(). Is this correct ? . In this case we could leave the old implementation for the other case. Best. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:15,testability,understand,understand,15,"Hi Sandro, . I understand this. But , I presume the performance gain needed for the const method of TLorentzVector::operator(). Is this correct ? . In this case we could leave the old implementation for the other case. Best. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:52,usability,perform,performance,52,"Hi Sandro, . I understand this. But , I presume the performance gain needed for the const method of TLorentzVector::operator(). Is this correct ? . In this case we could leave the old implementation for the other case. Best. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:64,availability,operat,operator,64,I cannot make any assumption about the preferred usage of const operator() and my code base is definitely using both. I would favour to get best possible performance in both cases. Adding these interfaces should not be a problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:194,integrability,interfac,interfaces,194,I cannot make any assumption about the preferred usage of const operator() and my code base is definitely using both. I would favour to get best possible performance in both cases. Adding these interfaces should not be a problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:194,interoperability,interfac,interfaces,194,I cannot make any assumption about the preferred usage of const operator() and my code base is definitely using both. I would favour to get best possible performance in both cases. Adding these interfaces should not be a problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:194,modifiability,interfac,interfaces,194,I cannot make any assumption about the preferred usage of const operator() and my code base is definitely using both. I would favour to get best possible performance in both cases. Adding these interfaces should not be a problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:154,performance,perform,performance,154,I cannot make any assumption about the preferred usage of const operator() and my code base is definitely using both. I would favour to get best possible performance in both cases. Adding these interfaces should not be a problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:39,usability,prefer,preferred,39,I cannot make any assumption about the preferred usage of const operator() and my code base is definitely using both. I would favour to get best possible performance in both cases. Adding these interfaces should not be a problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:154,usability,perform,performance,154,I cannot make any assumption about the preferred usage of const operator() and my code base is definitely using both. I would favour to get best possible performance in both cases. Adding these interfaces should not be a problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:38,integrability,pub,public,38,"I don't like the idea of changing the public interface. What about making TVector3 a friend of TLorentzVector. This makes much more sense to me, in this case you can asses from TLorentzVector the internal data of TVector3. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:45,integrability,interfac,interface,45,"I don't like the idea of changing the public interface. What about making TVector3 a friend of TLorentzVector. This makes much more sense to me, in this case you can asses from TLorentzVector the internal data of TVector3. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:45,interoperability,interfac,interface,45,"I don't like the idea of changing the public interface. What about making TVector3 a friend of TLorentzVector. This makes much more sense to me, in this case you can asses from TLorentzVector the internal data of TVector3. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:45,modifiability,interfac,interface,45,"I don't like the idea of changing the public interface. What about making TVector3 a friend of TLorentzVector. This makes much more sense to me, in this case you can asses from TLorentzVector the internal data of TVector3. Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:23,deployability,Updat,Updated,23,"@lmoneta , @peremato : Updated the request as discussed above. Thanks for a timely consideration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:76,performance,time,timely,76,"@lmoneta , @peremato : Updated the request as discussed above. Thanks for a timely consideration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:23,safety,Updat,Updated,23,"@lmoneta , @peremato : Updated the request as discussed above. Thanks for a timely consideration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:23,security,Updat,Updated,23,"@lmoneta , @peremato : Updated the request as discussed above. Thanks for a timely consideration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:8,safety,compl,completely,8,Is this completely resolved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:8,security,compl,completely,8,Is this completely resolved?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:241,safety,compl,completely,241,"Yes, this PR is in ROOT, see. https://github.com/root-mirror/root/commit/d46828ac607e412a53f542030e23abb1862566fc. Cheers. Lorenzo. On 23 Sep 2016, at 10:30, pcanal <notifications@github.com<mailto:notifications@github.com>> wrote:. Is this completely resolved? —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/166#issuecomment-249133658, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-Nd-wUKzSoD-rVyAO2-ewNTvRiApEaks5qs44WgaJpZM4IbQTs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:241,security,compl,completely,241,"Yes, this PR is in ROOT, see. https://github.com/root-mirror/root/commit/d46828ac607e412a53f542030e23abb1862566fc. Cheers. Lorenzo. On 23 Sep 2016, at 10:30, pcanal <notifications@github.com<mailto:notifications@github.com>> wrote:. Is this completely resolved? —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/166#issuecomment-249133658, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-Nd-wUKzSoD-rVyAO2-ewNTvRiApEaks5qs44WgaJpZM4IbQTs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/166:495,security,auth,auth,495,"Yes, this PR is in ROOT, see. https://github.com/root-mirror/root/commit/d46828ac607e412a53f542030e23abb1862566fc. Cheers. Lorenzo. On 23 Sep 2016, at 10:30, pcanal <notifications@github.com<mailto:notifications@github.com>> wrote:. Is this completely resolved? —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/166#issuecomment-249133658, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-Nd-wUKzSoD-rVyAO2-ewNTvRiApEaks5qs44WgaJpZM4IbQTs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/166
https://github.com/root-project/root/pull/168:25,deployability,patch,patch,25,"Hi Omar,. thanks for the patch. A comment and a question:. 1. The indentation of the body of the function modified is not correct. 2. Why you have two free functions for calculating the length when they are used nowhere else? If not, ready to go in the master for me. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/168
https://github.com/root-project/root/pull/168:25,safety,patch,patch,25,"Hi Omar,. thanks for the patch. A comment and a question:. 1. The indentation of the body of the function modified is not correct. 2. Why you have two free functions for calculating the length when they are used nowhere else? If not, ready to go in the master for me. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/168
https://github.com/root-project/root/pull/168:25,security,patch,patch,25,"Hi Omar,. thanks for the patch. A comment and a question:. 1. The indentation of the body of the function modified is not correct. 2. Why you have two free functions for calculating the length when they are used nowhere else? If not, ready to go in the master for me. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/168
https://github.com/root-project/root/pull/168:106,security,modif,modified,106,"Hi Omar,. thanks for the patch. A comment and a question:. 1. The indentation of the body of the function modified is not correct. 2. Why you have two free functions for calculating the length when they are used nowhere else? If not, ready to go in the master for me. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/168
https://github.com/root-project/root/pull/169:152,deployability,version,version,152,"> Would there really be a byte-count warning, though? The layout of non-transient realdata is effectively > unchanged by the new member since the class version is 0. . You are right, I seemed to have changed use case mid sentence :(.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/169:152,integrability,version,version,152,"> Would there really be a byte-count warning, though? The layout of non-transient realdata is effectively > unchanged by the new member since the class version is 0. . You are right, I seemed to have changed use case mid sentence :(.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/169:152,modifiability,version,version,152,"> Would there really be a byte-count warning, though? The layout of non-transient realdata is effectively > unchanged by the new member since the class version is 0. . You are right, I seemed to have changed use case mid sentence :(.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/169:94,usability,effectiv,effectively,94,"> Would there really be a byte-count warning, though? The layout of non-transient realdata is effectively > unchanged by the new member since the class version is 0. . You are right, I seemed to have changed use case mid sentence :(.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/169:85,deployability,version,version,85,"This PR has been merged ... except for ""TBackCompFitter, TLinearFitter: Demote class-version to 0."" which has to revert since TLinearFitter is indeed stored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/169:85,integrability,version,version,85,"This PR has been merged ... except for ""TBackCompFitter, TLinearFitter: Demote class-version to 0."" which has to revert since TLinearFitter is indeed stored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/169:85,modifiability,version,version,85,"This PR has been merged ... except for ""TBackCompFitter, TLinearFitter: Demote class-version to 0."" which has to revert since TLinearFitter is indeed stored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/169:28,safety,except,except,28,"This PR has been merged ... except for ""TBackCompFitter, TLinearFitter: Demote class-version to 0."" which has to revert since TLinearFitter is indeed stored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/169
https://github.com/root-project/root/pull/173:228,deployability,patch,patches,228,"Hi a2wagner,. The changes to support python3 are now in master https://root.cern.ch/gitweb/?p=root.git;a=commit;h=12495aa8de56da14f941e2f5386a65371e174005. Then we will to apply the commit;h=12495aa8de56d to the branch v6-06-00-patches. Best. Omar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:228,safety,patch,patches,228,"Hi a2wagner,. The changes to support python3 are now in master https://root.cern.ch/gitweb/?p=root.git;a=commit;h=12495aa8de56da14f941e2f5386a65371e174005. Then we will to apply the commit;h=12495aa8de56d to the branch v6-06-00-patches. Best. Omar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:228,security,patch,patches,228,"Hi a2wagner,. The changes to support python3 are now in master https://root.cern.ch/gitweb/?p=root.git;a=commit;h=12495aa8de56da14f941e2f5386a65371e174005. Then we will to apply the commit;h=12495aa8de56d to the branch v6-06-00-patches. Best. Omar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:29,usability,support,support,29,"Hi a2wagner,. The changes to support python3 are now in master https://root.cern.ch/gitweb/?p=root.git;a=commit;h=12495aa8de56da14f941e2f5386a65371e174005. Then we will to apply the commit;h=12495aa8de56d to the branch v6-06-00-patches. Best. Omar.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:15,deployability,patch,patch,15,Hi Sascha. The patch is already applied for v6-06-00-patches. Best. Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:53,deployability,patch,patches,53,Hi Sascha. The patch is already applied for v6-06-00-patches. Best. Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:15,safety,patch,patch,15,Hi Sascha. The patch is already applied for v6-06-00-patches. Best. Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:53,safety,patch,patches,53,Hi Sascha. The patch is already applied for v6-06-00-patches. Best. Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:15,security,patch,patch,15,Hi Sascha. The patch is already applied for v6-06-00-patches. Best. Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/173:53,security,patch,patches,53,Hi Sascha. The patch is already applied for v6-06-00-patches. Best. Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/173
https://github.com/root-project/root/pull/178:96,testability,context,context,96,"I am not in love with `ROOT::kUseGlobalSetting`, to say the least :-) It gives no indication of context. Maybe `ROOT::Compression::kGlobalSetting` using an enum class? Paul - would you mind sending another PR, or do you prefer if we do this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/178
https://github.com/root-project/root/pull/178:82,usability,indicat,indication,82,"I am not in love with `ROOT::kUseGlobalSetting`, to say the least :-) It gives no indication of context. Maybe `ROOT::Compression::kGlobalSetting` using an enum class? Paul - would you mind sending another PR, or do you prefer if we do this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/178
https://github.com/root-project/root/pull/178:220,usability,prefer,prefer,220,"I am not in love with `ROOT::kUseGlobalSetting`, to say the least :-) It gives no indication of context. Maybe `ROOT::Compression::kGlobalSetting` using an enum class? Paul - would you mind sending another PR, or do you prefer if we do this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/178
https://github.com/root-project/root/pull/178:253,deployability,contain,containing,253,"I see your point, but if I see it correctly that enum got defined in 2011 and I only resolved the points where hard coded integers instead of the enum were used. Changing the namespace from `ROOT::` to `ROOT::Compression::` would break third party code containing `ROOT::CompressionSettings(ROOT::kLZMA, 1)` or am I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/178
https://github.com/root-project/root/pull/181:57,deployability,version,version,57,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:106,deployability,version,version,106,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:254,deployability,version,version,254,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:57,integrability,version,version,57,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:106,integrability,version,version,106,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:254,integrability,version,version,254,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:57,modifiability,version,version,57,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:106,modifiability,version,version,106,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:254,modifiability,version,version,254,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:116,safety,test,tested,116,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:116,testability,test,tested,116,I am very confused then. I think you are right and every version of gfal comes with different guards. The version I tested didnt 't show any problem. I think we should not rely on the guards but on the name of the library (since I didn't see any sort of version in the headers). If the name is gfal2 then I will compile with -DGFAL_VERSION_2. Is this OK?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:37,safety,compl,complemented,37,I just applied your suggested change complemented by Pepe Le Pew full-proof protection against gfal developers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/181:37,security,compl,complemented,37,I just applied your suggested change complemented by Pepe Le Pew full-proof protection against gfal developers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/181
https://github.com/root-project/root/pull/185:137,safety,test,test,137,"Hi Paul,. thanks for this nice feature. The problem I may see is that regex are being provided by the STL starting from gcc 4.9. Did you test with gcc 4.8 too? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/185
https://github.com/root-project/root/pull/185:137,testability,test,test,137,"Hi Paul,. thanks for this nice feature. The problem I may see is that regex are being provided by the STL starting from gcc 4.9. Did you test with gcc 4.8 too? Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/185
https://github.com/root-project/root/pull/185:58,deployability,build,build,58,"Argh, I just ran with gcc 4.8 (4.8.4) and indeed the ROOT build fails (running of hsimple.C results in `terminate called after throwing an instance of 'std::regex_error'`). I thought regex comes with c++11 and since ROOT anyhow requires c++11 that should be nothing to worry about. Googeling around it seems indeed that regex is only experimental in gcc 4.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/185
https://github.com/root-project/root/pull/185:64,deployability,fail,fails,64,"Argh, I just ran with gcc 4.8 (4.8.4) and indeed the ROOT build fails (running of hsimple.C results in `terminate called after throwing an instance of 'std::regex_error'`). I thought regex comes with c++11 and since ROOT anyhow requires c++11 that should be nothing to worry about. Googeling around it seems indeed that regex is only experimental in gcc 4.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/185
https://github.com/root-project/root/pull/185:64,reliability,fail,fails,64,"Argh, I just ran with gcc 4.8 (4.8.4) and indeed the ROOT build fails (running of hsimple.C results in `terminate called after throwing an instance of 'std::regex_error'`). I thought regex comes with c++11 and since ROOT anyhow requires c++11 that should be nothing to worry about. Googeling around it seems indeed that regex is only experimental in gcc 4.8.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/185
https://github.com/root-project/root/pull/188:0,safety,Test,Testing,0,Testing it on SLC6....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/188
https://github.com/root-project/root/pull/188:0,testability,Test,Testing,0,Testing it on SLC6....,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/188
https://github.com/root-project/root/pull/188:25,deployability,patch,patches,25,Thanks very much for the patches. Tests passes successfully for SLC6. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/188
https://github.com/root-project/root/pull/188:25,safety,patch,patches,25,Thanks very much for the patches. Tests passes successfully for SLC6. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/188
https://github.com/root-project/root/pull/188:34,safety,Test,Tests,34,Thanks very much for the patches. Tests passes successfully for SLC6. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/188
https://github.com/root-project/root/pull/188:25,security,patch,patches,25,Thanks very much for the patches. Tests passes successfully for SLC6. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/188
https://github.com/root-project/root/pull/188:34,testability,Test,Tests,34,Thanks very much for the patches. Tests passes successfully for SLC6. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/188
https://github.com/root-project/root/pull/194:34,integrability,interfac,interface,34,@dan131riley - is there a similar interface for zlib?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:34,interoperability,interfac,interface,34,@dan131riley - is there a similar interface for zlib?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:34,modifiability,interfac,interface,34,@dan131riley - is there a similar interface for zlib?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:183,availability,sli,sliding,183,"@bbockelm. deflateInit2() can be used to set the size of the window and hash table for zlib. http://www.zlib.net/manual.html#Advanced. The default values for zlib give 128KiB for the sliding window and 128KiB for hash table, much more modest than the LZMA sizes. zlib memory initialization doesn't show up in igprof output for cmsRun, so tuning it isn't likely to make a very big difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:268,performance,memor,memory,268,"@bbockelm. deflateInit2() can be used to set the size of the window and hash table for zlib. http://www.zlib.net/manual.html#Advanced. The default values for zlib give 128KiB for the sliding window and 128KiB for hash table, much more modest than the LZMA sizes. zlib memory initialization doesn't show up in igprof output for cmsRun, so tuning it isn't likely to make a very big difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:183,reliability,sli,sliding,183,"@bbockelm. deflateInit2() can be used to set the size of the window and hash table for zlib. http://www.zlib.net/manual.html#Advanced. The default values for zlib give 128KiB for the sliding window and 128KiB for hash table, much more modest than the LZMA sizes. zlib memory initialization doesn't show up in igprof output for cmsRun, so tuning it isn't likely to make a very big difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:290,reliability,doe,doesn,290,"@bbockelm. deflateInit2() can be used to set the size of the window and hash table for zlib. http://www.zlib.net/manual.html#Advanced. The default values for zlib give 128KiB for the sliding window and 128KiB for hash table, much more modest than the LZMA sizes. zlib memory initialization doesn't show up in igprof output for cmsRun, so tuning it isn't likely to make a very big difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:72,security,hash,hash,72,"@bbockelm. deflateInit2() can be used to set the size of the window and hash table for zlib. http://www.zlib.net/manual.html#Advanced. The default values for zlib give 128KiB for the sliding window and 128KiB for hash table, much more modest than the LZMA sizes. zlib memory initialization doesn't show up in igprof output for cmsRun, so tuning it isn't likely to make a very big difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:213,security,hash,hash,213,"@bbockelm. deflateInit2() can be used to set the size of the window and hash table for zlib. http://www.zlib.net/manual.html#Advanced. The default values for zlib give 128KiB for the sliding window and 128KiB for hash table, much more modest than the LZMA sizes. zlib memory initialization doesn't show up in igprof output for cmsRun, so tuning it isn't likely to make a very big difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:268,usability,memor,memory,268,"@bbockelm. deflateInit2() can be used to set the size of the window and hash table for zlib. http://www.zlib.net/manual.html#Advanced. The default values for zlib give 128KiB for the sliding window and 128KiB for hash table, much more modest than the LZMA sizes. zlib memory initialization doesn't show up in igprof output for cmsRun, so tuning it isn't likely to make a very big difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:29,safety,test,test,29,(Probably worth at least the test!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:29,testability,test,test,29,(Probably worth at least the test!).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:59,testability,simpl,simply,59,Oh - what are the details of the job that improved? Was it simply reading & rewriting the file? Or part of a fixed workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:59,usability,simpl,simply,59,Oh - what are the details of the job that improved? Was it simply reading & rewriting the file? Or part of a fixed workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:115,usability,workflow,workflow,115,Oh - what are the details of the job that improved? Was it simply reading & rewriting the file? Or part of a fixed workflow?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:112,availability,Sla,Slava,112,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:120,availability,sli,slides,120,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:455,energy efficiency,clock,clock,455,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:466,energy efficiency,cpu,cpu,466,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:209,interoperability,standard,standard,209,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:422,performance,time,time,422,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:466,performance,cpu,cpu,466,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:112,reliability,Sla,Slava,112,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:120,reliability,sli,slides,120,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:223,usability,workflow,workflow,223,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:356,usability,paus,pauses,356,"The job was full RECO with 8 threads, reading raw data and writing RECO, AOD, MINIAOD and DQMIO. Details are in Slava's slides from yesterday, but it is a generic enough RECO job that it should show up in any standard RECO workflow writing AOD and MINIAOD. The effect on cmsRun timing was definitely exaggerated by having 8 threads, as the occasional long pauses from LZMA sometimes blocked the other threads too (the job time speedups I quoted were wall clock, not cpu).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:319,performance,deadlock,deadlocks,319,"yeah, that makes sense. There's a reasonable chance that a zlib improvement would show up in the ROOT-based benchmarks but not in CMSSW. FWIW - Chris and I have gone over various mechanisms to allow other threads to progress while the call to deflate is in progress. Haven't yet figured out anything that doesn't cause deadlocks...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:305,reliability,doe,doesn,305,"yeah, that makes sense. There's a reasonable chance that a zlib improvement would show up in the ROOT-based benchmarks but not in CMSSW. FWIW - Chris and I have gone over various mechanisms to allow other threads to progress while the call to deflate is in progress. Haven't yet figured out anything that doesn't cause deadlocks...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:216,usability,progress,progress,216,"yeah, that makes sense. There's a reasonable chance that a zlib improvement would show up in the ROOT-based benchmarks but not in CMSSW. FWIW - Chris and I have gone over various mechanisms to allow other threads to progress while the call to deflate is in progress. Haven't yet figured out anything that doesn't cause deadlocks...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/194:257,usability,progress,progress,257,"yeah, that makes sense. There's a reasonable chance that a zlib improvement would show up in the ROOT-based benchmarks but not in CMSSW. FWIW - Chris and I have gone over various mechanisms to allow other threads to progress while the call to deflate is in progress. Haven't yet figured out anything that doesn't cause deadlocks...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/194
https://github.com/root-project/root/pull/199:51,availability,error,error,51,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:299,availability,error,error,299,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:70,deployability,instal,installed,70,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:265,interoperability,Architectur,Architectures,265,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:51,performance,error,error,51,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:299,performance,error,error,299,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:51,safety,error,error,51,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:299,safety,error,error,299,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:51,usability,error,error,51,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/199:299,usability,error,error,299,"HI Simon, I saw your code but I am having the next error without cuda installed. In file included from input_line_12:33:. In file included from /home/ozapatam/Projects/root/compile/include/TMVA/MethodDNN.h:62:. /home/ozapatam/Projects/root/compile/include/TMVA/DNN/Architectures/Cuda.h:23:10: fatal error: 'cuda.h' file not found. #include ""cuda.h"". May you need to put some macrodefines there. Also in the cmake file you are putting the compiler manually set(CUDA_HOST_COMPILER ""/usr/bin/g++-4.8"") that is not good idea, we can to enable C++ compilation by default using CUDA_HOST_COMPILATION_CPP or are you having other issue there?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/199
https://github.com/root-project/root/pull/200:323,performance,time,time,323,"Thanks! As I said before I'm not in love with this. One of the issues I have - apart from the fact that exceptions are misused here - is that this makes it impossible to use ROOT from -fno-exceptions code. OTOH, I don't see an alternative without reflection :-( So I'll leave this open for another few days to give me some time to think about it. In the end we have to weigh TClass versus exception ""mis-""use...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:104,safety,except,exceptions,104,"Thanks! As I said before I'm not in love with this. One of the issues I have - apart from the fact that exceptions are misused here - is that this makes it impossible to use ROOT from -fno-exceptions code. OTOH, I don't see an alternative without reflection :-( So I'll leave this open for another few days to give me some time to think about it. In the end we have to weigh TClass versus exception ""mis-""use...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:189,safety,except,exceptions,189,"Thanks! As I said before I'm not in love with this. One of the issues I have - apart from the fact that exceptions are misused here - is that this makes it impossible to use ROOT from -fno-exceptions code. OTOH, I don't see an alternative without reflection :-( So I'll leave this open for another few days to give me some time to think about it. In the end we have to weigh TClass versus exception ""mis-""use...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:389,safety,except,exception,389,"Thanks! As I said before I'm not in love with this. One of the issues I have - apart from the fact that exceptions are misused here - is that this makes it impossible to use ROOT from -fno-exceptions code. OTOH, I don't see an alternative without reflection :-( So I'll leave this open for another few days to give me some time to think about it. In the end we have to weigh TClass versus exception ""mis-""use...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:119,security,misus,misused,119,"Thanks! As I said before I'm not in love with this. One of the issues I have - apart from the fact that exceptions are misused here - is that this makes it impossible to use ROOT from -fno-exceptions code. OTOH, I don't see an alternative without reflection :-( So I'll leave this open for another few days to give me some time to think about it. In the end we have to weigh TClass versus exception ""mis-""use...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:756,reliability,doe,doesn,756,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:12,safety,except,exceptions,12,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:124,safety,compl,complex,124,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:212,safety,except,exception,212,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:290,safety,except,exceptions,290,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:374,safety,except,exceptions,374,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:471,safety,except,exceptions,471,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:651,safety,except,exceptions,651,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:27,security,misus,misused,27,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:124,security,compl,complex,124,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:305,security,misus,misused,305,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:412,security,control,control,412,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:412,testability,control,control,412,"@karies . > exceptions are misused here. Well, it's kinda questionable. If there is a function searching for something in a complex structure using several nested loops and when it finds what it needs, it throws exception `Found(result)` and catches it outside loops, then we can say that ""exceptions are misused here"". Since there is methods to exit nested loops (`goto`), exceptions shouldn't be (mis)used for control flow. If not consider implementing own reflection, exceptions are the only way to do what done here. Of course, in ROOT I can't consider it, because there already is own reflection. > this makes it impossible to use ROOT from -fno-exceptions code. But `TDirectory::Get`, which throws `TDirectoryUnknownKey` or `TDirectoryTypeMismatch`, doesn't make. okay. A note about `TDirectoryEntry::TClass*` data member. I had to add it, because `TClass::GetClass` wants `std::type_info`, which I couldn't store if I wanted to keep `TDirectoryEntry` copy/move constructible/assignable. So I had to use `std::type_index` member to keep it moveable and `TClass*` member for `TClass* TDirectoryEntry::GetType()` to be used by `TFile::Write()`. But now I think I can get rid of the `TClass*` member because, I believe, there is legit way to extract `const std::type_info&` from `std::type_index`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:88,availability,slo,slow,88,What bother me most about the exception solution is that it is relatively speaking very slow ... and thus a solution based on the reflection information that we do have is even more attractive.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:88,reliability,slo,slow,88,What bother me most about the exception solution is that it is relatively speaking very slow ... and thus a solution based on the reflection information that we do have is even more attractive.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:30,safety,except,exception,30,What bother me most about the exception solution is that it is relatively speaking very slow ... and thus a solution based on the reflection information that we do have is even more attractive.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:115,availability,slo,slow,115,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:130,availability,slo,slower,130,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:484,integrability,interfac,interface,484,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:424,interoperability,share,shared,424,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:484,interoperability,interfac,interface,484,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:484,modifiability,interfac,interface,484,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:124,performance,time,times,124,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:115,reliability,slo,slow,115,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:130,reliability,slo,slower,130,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:456,reliability,doe,doesn,456,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:94,safety,except,exceptions,94,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:650,security,modif,modified,650,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:532,usability,user,user,532,"@pcanal I've benchmarked 'throw_cast' (let me call it this way) vs. TClass::DynamicCast. Yes, exceptions are kinda slow (40 times slower, to be precise). Ok, if you have own RTTI, there is no reason not to use it. But, newertheles, I think original code should be rewritten a bit. There are some flaws and rough edges. E.g. too much indirection (virtual methods, returning pointer to `PtrBase`), `TDirectory` claims to have shared ownership, but `PtrBase` doesn't reflect this in its interface. `GetPointer`, returning raw pointer (user might catch it into smart ptr and then bad things will happen). Some inconsistences in types (somewhere they are modified with `ToContentType_t<T>`, somewhere there is raw `T`). And so on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:42,modifiability,refact,refactoring,42,"As discussed we'd /love/ to see this PR's refactoring (minus the exceptions) in a new PR; basically to leave this PR as a historical marker should we ever change our mind wrt exceptions. Thanks & looking forward to the refactoring PR, it's _much_ nicer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:219,modifiability,refact,refactoring,219,"As discussed we'd /love/ to see this PR's refactoring (minus the exceptions) in a new PR; basically to leave this PR as a historical marker should we ever change our mind wrt exceptions. Thanks & looking forward to the refactoring PR, it's _much_ nicer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:42,performance,refactor,refactoring,42,"As discussed we'd /love/ to see this PR's refactoring (minus the exceptions) in a new PR; basically to leave this PR as a historical marker should we ever change our mind wrt exceptions. Thanks & looking forward to the refactoring PR, it's _much_ nicer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:219,performance,refactor,refactoring,219,"As discussed we'd /love/ to see this PR's refactoring (minus the exceptions) in a new PR; basically to leave this PR as a historical marker should we ever change our mind wrt exceptions. Thanks & looking forward to the refactoring PR, it's _much_ nicer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:65,safety,except,exceptions,65,"As discussed we'd /love/ to see this PR's refactoring (minus the exceptions) in a new PR; basically to leave this PR as a historical marker should we ever change our mind wrt exceptions. Thanks & looking forward to the refactoring PR, it's _much_ nicer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/200:175,safety,except,exceptions,175,"As discussed we'd /love/ to see this PR's refactoring (minus the exceptions) in a new PR; basically to leave this PR as a historical marker should we ever change our mind wrt exceptions. Thanks & looking forward to the refactoring PR, it's _much_ nicer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/200
https://github.com/root-project/root/pull/204:52,performance,time,time,52,Sorry I didn't realize it was that trivial :-( Next time please just tell me to go fix it myself :-). Thanks & merged!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/204
https://github.com/root-project/root/pull/205:163,usability,prefer,prefer,163,"Can I credit you with your real name or do you want me to use your handle? If the former, could you spell your real name to me again, please? Private email if you prefer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/205
https://github.com/root-project/root/pull/205:135,deployability,patch,patches,135,"Merged! Thanks a lot for your contribution, this is a really nice improvement! I'd be super happy to receive more of your high-quality patches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/205
https://github.com/root-project/root/pull/205:135,safety,patch,patches,135,"Merged! Thanks a lot for your contribution, this is a really nice improvement! I'd be super happy to receive more of your high-quality patches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/205
https://github.com/root-project/root/pull/205:135,security,patch,patches,135,"Merged! Thanks a lot for your contribution, this is a really nice improvement! I'd be super happy to receive more of your high-quality patches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/205
https://github.com/root-project/root/pull/212:23,availability,failur,failure,23,"I'm currently fixing a failure in roottest; once that's done I'll merge. (Please ping me end of the week in case I forget.) Thanks a lot, Benjamin!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:81,availability,ping,ping,81,"I'm currently fixing a failure in roottest; once that's done I'll merge. (Please ping me end of the week in case I forget.) Thanks a lot, Benjamin!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:23,deployability,fail,failure,23,"I'm currently fixing a failure in roottest; once that's done I'll merge. (Please ping me end of the week in case I forget.) Thanks a lot, Benjamin!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:4,energy efficiency,current,currently,4,"I'm currently fixing a failure in roottest; once that's done I'll merge. (Please ping me end of the week in case I forget.) Thanks a lot, Benjamin!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:23,performance,failur,failure,23,"I'm currently fixing a failure in roottest; once that's done I'll merge. (Please ping me end of the week in case I forget.) Thanks a lot, Benjamin!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:23,reliability,fail,failure,23,"I'm currently fixing a failure in roottest; once that's done I'll merge. (Please ping me end of the week in case I forget.) Thanks a lot, Benjamin!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:177,modifiability,exten,extend,177,"@karies: Thanks a lot, and sorry for the long turn-around on my side. Note that I also added https://github.com/root-mirror/roottest/pull/6 to test this feature to some limited extend; let me know if anything else needs to be done there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:143,safety,test,test,143,"@karies: Thanks a lot, and sorry for the long turn-around on my side. Note that I also added https://github.com/root-mirror/roottest/pull/6 to test this feature to some limited extend; let me know if anything else needs to be done there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:143,testability,test,test,143,"@karies: Thanks a lot, and sorry for the long turn-around on my side. Note that I also added https://github.com/root-mirror/roottest/pull/6 to test this feature to some limited extend; let me know if anything else needs to be done there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:167,deployability,Releas,ReleaseNotes,167,"Merged into master as 027dd10. (roottest is merged, too.). Thanks for your nice contribution! Could you send a follow-up PR on a few lines that we can put into README/ReleaseNotes/v610/index.md to announce this new feature? That increases the chances that users will actually see it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:256,usability,user,users,256,"Merged into master as 027dd10. (roottest is merged, too.). Thanks for your nice contribution! Could you send a follow-up PR on a few lines that we can put into README/ReleaseNotes/v610/index.md to announce this new feature? That increases the chances that users will actually see it :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:40,deployability,updat,update,40,"@karies: Sorry for the long silence, an update to the v610 README is https://github.com/root-mirror/root/pull/307.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:40,safety,updat,update,40,"@karies: Sorry for the long silence, an update to the v610 README is https://github.com/root-mirror/root/pull/307.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/212:40,security,updat,update,40,"@karies: Sorry for the long silence, an update to the v610 README is https://github.com/root-mirror/root/pull/307.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/212
https://github.com/root-project/root/pull/213:82,deployability,updat,update,82,"Hi Pau,. merged yesterday night, just forgot to close. Thanks a lot for this huge update. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/213
https://github.com/root-project/root/pull/213:82,safety,updat,update,82,"Hi Pau,. merged yesterday night, just forgot to close. Thanks a lot for this huge update. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/213
https://github.com/root-project/root/pull/213:82,security,updat,update,82,"Hi Pau,. merged yesterday night, just forgot to close. Thanks a lot for this huge update. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/213
https://github.com/root-project/root/pull/213:48,usability,close,close,48,"Hi Pau,. merged yesterday night, just forgot to close. Thanks a lot for this huge update. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/213
https://github.com/root-project/root/pull/220:5,deployability,patch,patch,5,This patch needs some work. I'm closing the pull request for now. Will issue a new one after resolving the issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/220
https://github.com/root-project/root/pull/220:5,safety,patch,patch,5,This patch needs some work. I'm closing the pull request for now. Will issue a new one after resolving the issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/220
https://github.com/root-project/root/pull/220:5,security,patch,patch,5,This patch needs some work. I'm closing the pull request for now. Will issue a new one after resolving the issues.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/220
https://github.com/root-project/root/pull/222:198,testability,simpl,simpleanalysis,198,"Hi Luca,. ```. some remarks:. ```. - put implementation in TSimpleAnalysis.cxx. - add in .cxx clear description of how this class should be used, give examples. - provide example for tutorials/tree/simpleanalysis.C. - use ROOT coding style. - don't use Italian comments. Cheers, Fons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/222
https://github.com/root-project/root/pull/222:94,usability,clear,clear,94,"Hi Luca,. ```. some remarks:. ```. - put implementation in TSimpleAnalysis.cxx. - add in .cxx clear description of how this class should be used, give examples. - provide example for tutorials/tree/simpleanalysis.C. - use ROOT coding style. - don't use Italian comments. Cheers, Fons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/222
https://github.com/root-project/root/pull/222:198,usability,simpl,simpleanalysis,198,"Hi Luca,. ```. some remarks:. ```. - put implementation in TSimpleAnalysis.cxx. - add in .cxx clear description of how this class should be used, give examples. - provide example for tutorials/tree/simpleanalysis.C. - use ROOT coding style. - don't use Italian comments. Cheers, Fons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/222
https://github.com/root-project/root/pull/222:0,usability,Close,Closed,0,Closed upon request of Luca.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/222
https://github.com/root-project/root/pull/224:215,availability,restor,restores,215,"Awesome, just merged it into my local build. As a side note, without your fix. ```. pushd `root-config --prefix` && source bin/thisroot.sh && popd. ```. would bring you back to the original working directory and it restores `$OLDPWD` (e.g. to be able to do `cd -`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/224
https://github.com/root-project/root/pull/224:38,deployability,build,build,38,"Awesome, just merged it into my local build. As a side note, without your fix. ```. pushd `root-config --prefix` && source bin/thisroot.sh && popd. ```. would bring you back to the original working directory and it restores `$OLDPWD` (e.g. to be able to do `cd -`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/224
https://github.com/root-project/root/pull/224:215,reliability,restor,restores,215,"Awesome, just merged it into my local build. As a side note, without your fix. ```. pushd `root-config --prefix` && source bin/thisroot.sh && popd. ```. would bring you back to the original working directory and it restores `$OLDPWD` (e.g. to be able to do `cd -`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/224
https://github.com/root-project/root/pull/236:1243,deployability,configurat,configuration,1243,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1243,integrability,configur,configuration,1243,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1102,interoperability,compatib,compatible,1102,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:154,modifiability,variab,variable,154,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1148,modifiability,concern,concerns,1148,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1243,modifiability,configur,configuration,1243,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1530,modifiability,paramet,parameters,1530,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1584,modifiability,paramet,parameters,1584,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:291,performance,time,time,291,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:345,performance,content,contentless,345,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:524,reliability,doe,does,524,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:336,safety,avoid,avoiding,336,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:375,safety,input,inputFile,375,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:392,safety,input,input,392,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1312,safety,input,inputfile,1312,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1243,security,configur,configuration,1243,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1148,testability,concern,concerns,1148,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:197,usability,help,help,197,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:237,usability,command,command,237,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:265,usability,help,helpful,265,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:375,usability,input,inputFile,375,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:392,usability,input,input,392,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:468,usability,user,user,468,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:482,usability,help,help,482,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1312,usability,input,inputfile,1312,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1391,usability,clear,clear,1391,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:1404,usability,document,documentation,1404,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:. 1) Remove all variable names in Italian language. 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file"". 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness. 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names). 5) ""Invalid argument set"" shall be printed on stderr. 6) The script must be compatible python2 and python3, e.g. for what concerns the print function. 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:8,safety,test,tests,8,Are the tests for it in a PR for roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/236:8,testability,test,tests,8,Are the tests for it in a PR for roottest?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/236
https://github.com/root-project/root/pull/238:140,deployability,updat,update,140,Peter could you make a new Merge to add more comment (similar to https://github.com/root-mirror/root/pull/238#r78036062) to the code and to update the release note (README/ReleaseNotes/v608/index.md ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/238
https://github.com/root-project/root/pull/238:151,deployability,releas,release,151,Peter could you make a new Merge to add more comment (similar to https://github.com/root-mirror/root/pull/238#r78036062) to the code and to update the release note (README/ReleaseNotes/v608/index.md ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/238
https://github.com/root-project/root/pull/238:172,deployability,Releas,ReleaseNotes,172,Peter could you make a new Merge to add more comment (similar to https://github.com/root-mirror/root/pull/238#r78036062) to the code and to update the release note (README/ReleaseNotes/v608/index.md ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/238
https://github.com/root-project/root/pull/238:140,safety,updat,update,140,Peter could you make a new Merge to add more comment (similar to https://github.com/root-mirror/root/pull/238#r78036062) to the code and to update the release note (README/ReleaseNotes/v608/index.md ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/238
https://github.com/root-project/root/pull/238:140,security,updat,update,140,Peter could you make a new Merge to add more comment (similar to https://github.com/root-mirror/root/pull/238#r78036062) to the code and to update the release note (README/ReleaseNotes/v608/index.md ).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/238
https://github.com/root-project/root/pull/240:135,safety,review,review,135,@pcanal - turned this into a formal PR and tried to fix up as many code comments you suggested previously. Probably a good point to re-review. Or go on vacation. Whichever is your preference. :).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:135,testability,review,review,135,@pcanal - turned this into a formal PR and tried to fix up as many code comments you suggested previously. Probably a good point to re-review. Or go on vacation. Whichever is your preference. :).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:180,usability,prefer,preference,180,@pcanal - turned this into a formal PR and tried to fix up as many code comments you suggested previously. Probably a good point to re-review. Or go on vacation. Whichever is your preference. :).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:36,deployability,updat,update,36,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:132,deployability,releas,release,132,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:166,modifiability,exten,extent,166,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:0,safety,Except,Except,0,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:36,safety,updat,update,36,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:195,safety,test,test,195,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:36,security,updat,update,36,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:195,testability,test,test,195,"Except for minor coding conventions update, this looks ready to go and will be added to the master after the branching of the v6.08 release. It would also be best to extent roottest to include a test of this functionality.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:21,interoperability,format,formatting,21,"Ok, I think the code formatting issues mentioned previously are now all resolved. I have a unit test ready, but I was going to wait for the roottest PR until this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:96,safety,test,test,96,"Ok, I think the code formatting issues mentioned previously are now all resolved. I have a unit test ready, but I was going to wait for the roottest PR until this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:91,testability,unit,unit,91,"Ok, I think the code formatting issues mentioned previously are now all resolved. I have a unit test ready, but I was going to wait for the roottest PR until this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:96,testability,test,test,96,"Ok, I think the code formatting issues mentioned previously are now all resolved. I have a unit test ready, but I was going to wait for the roottest PR until this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:137,deployability,patch,patch,137,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:197,deployability,patch,patch,197,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:163,performance,time,time,163,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:16,safety,test,test,16,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:124,safety,test,test,124,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:137,safety,patch,patch,137,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:197,safety,patch,patch,197,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:137,security,patch,patch,137,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:197,security,patch,patch,197,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:11,testability,unit,unit,11,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:16,testability,test,test,16,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:124,testability,test,test,124,"> I have a unit test ready, but I was going to wait for the roottest PR until this one is merged. I tend to upload both the test and the patch at roughly the same time (allows to check whether the patch is indeed working :) in addition to not break other stuff).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:218,interoperability,format,format,218,"@pcanal - I rebased this on master, hopefully making the tests and such more relevant. I believe I addressed your review comments. Seems to have also kicked off the CI tests successfully; I'll likely have a few `clang-format` items to fix up from those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:57,safety,test,tests,57,"@pcanal - I rebased this on master, hopefully making the tests and such more relevant. I believe I addressed your review comments. Seems to have also kicked off the CI tests successfully; I'll likely have a few `clang-format` items to fix up from those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:114,safety,review,review,114,"@pcanal - I rebased this on master, hopefully making the tests and such more relevant. I believe I addressed your review comments. Seems to have also kicked off the CI tests successfully; I'll likely have a few `clang-format` items to fix up from those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:168,safety,test,tests,168,"@pcanal - I rebased this on master, hopefully making the tests and such more relevant. I believe I addressed your review comments. Seems to have also kicked off the CI tests successfully; I'll likely have a few `clang-format` items to fix up from those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:57,testability,test,tests,57,"@pcanal - I rebased this on master, hopefully making the tests and such more relevant. I believe I addressed your review comments. Seems to have also kicked off the CI tests successfully; I'll likely have a few `clang-format` items to fix up from those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:114,testability,review,review,114,"@pcanal - I rebased this on master, hopefully making the tests and such more relevant. I believe I addressed your review comments. Seems to have also kicked off the CI tests successfully; I'll likely have a few `clang-format` items to fix up from those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:168,testability,test,tests,168,"@pcanal - I rebased this on master, hopefully making the tests and such more relevant. I believe I addressed your review comments. Seems to have also kicked off the CI tests successfully; I'll likely have a few `clang-format` items to fix up from those.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:21,safety,review,review,21,@pcanal - can you re-review? I believe all requested changes are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:21,testability,review,review,21,@pcanal - can you re-review? I believe all requested changes are done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:136,performance,synch,synchronously,136,"@pcanal - corresponding PR for roottest is https://github.com/root-project/roottest/pull/64 . Unfortunately, I think they need to go in synchronously.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:69,deployability,fail,failing,69,@bbockelm could you have a look at the two tree cache tests that are failing for this one? Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:48,performance,cach,cache,48,@bbockelm could you have a look at the two tree cache tests that are failing for this one? Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:69,reliability,fail,failing,69,@bbockelm could you have a look at the two tree cache tests that are failing for this one? Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:54,safety,test,tests,54,@bbockelm could you have a look at the two tree cache tests that are failing for this one? Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:54,testability,test,tests,54,@bbockelm could you have a look at the two tree cache tests that are failing for this one? Thanks,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/240:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/240
https://github.com/root-project/root/pull/246:46,safety,test,test,46,"Thanks, merged! Do you think we should have a test for this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/246:46,testability,test,test,46,"Thanks, merged! Do you think we should have a test for this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/246
https://github.com/root-project/root/pull/249:52,integrability,repositor,repository,52,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:417,integrability,sub,submitting-bug,417,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:52,interoperability,repositor,repository,52,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:329,security,secur,secure,329,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:406,usability,guid,guidelines-submitting-bug,406,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:57,availability,error,errors,57,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:117,availability,error,error,117,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:57,performance,error,errors,57,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:117,performance,error,error,117,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:57,safety,error,errors,57,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:117,safety,error,error,117,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:57,usability,error,errors,57,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:117,usability,error,error,117,@pcanal any advice on how to report about dozen of small errors ~1 line of code each? 1 issue for all or 1 issue per error?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:67,availability,error,error,67,Then one JIRA issue/ticket per category of problems or 1 issue per error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:67,performance,error,error,67,Then one JIRA issue/ticket per category of problems or 1 issue per error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:67,safety,error,error,67,Then one JIRA issue/ticket per category of problems or 1 issue per error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/249:67,usability,error,error,67,Then one JIRA issue/ticket per category of problems or 1 issue per error.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/249
https://github.com/root-project/root/pull/255:5,deployability,patch,patch,5,This patch has been already committed by Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/255
https://github.com/root-project/root/pull/255:5,safety,patch,patch,5,This patch has been already committed by Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/255
https://github.com/root-project/root/pull/255:5,security,patch,patch,5,This patch has been already committed by Omar.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/255
https://github.com/root-project/root/pull/258:87,deployability,updat,update,87,"It should have been the last commit only. But no problem, this worked good enough. The update has been merged in the master. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/258
https://github.com/root-project/root/pull/258:87,safety,updat,update,87,"It should have been the last commit only. But no problem, this worked good enough. The update has been merged in the master. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/258
https://github.com/root-project/root/pull/258:87,security,updat,update,87,"It should have been the last commit only. But no problem, this worked good enough. The update has been merged in the master. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/258
https://github.com/root-project/root/pull/262:24,deployability,patch,patch,24,Thank you Peter for the patch. It is now committed in the ROOT master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:24,safety,patch,patch,24,Thank you Peter for the patch. It is now committed in the ROOT master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/262:24,security,patch,patch,24,Thank you Peter for the patch. It is now committed in the ROOT master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/262
https://github.com/root-project/root/pull/273:169,usability,close,close,169,It looks like this:. [Screenshot](https://drive.google.com/file/d/0B8kHvDH51CpIZzByNWNQZ2RsWUE/view). I propose this because it structures the massive TMVA output. Just close the PR if you don't like it!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/273
https://github.com/root-project/root/pull/275:350,energy efficiency,Draw,DrawProgressBar,350,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:419,energy efficiency,Load,Load,419,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:109,integrability,sub,subprocess,109,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:366,integrability,Transform,Transformations,366,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:366,interoperability,Transform,Transformations,366,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:419,performance,Load,Load,419,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:1171,safety,Test,TestAllMethods,1171,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:594,security,sign,signal,594,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:709,security,sign,signal,709,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:805,security,sign,signal,805,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:1171,testability,Test,TestAllMethods,1171,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:0,usability,Minim,Minimal,0,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/275:180,usability,Tool,Tools,180,"Minimal working example:. ``` python. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). TMVA.PyMethodBase.PyInitialize(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory(""TMVAClassification"", output,. ""!V:!Silent:Color:DrawProgressBar:Transformations=D,N:AnalysisType=Classification""). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. ""TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents""). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kFisher, 'Fisher',. ""!H:!V:Fisher:VarTransform=None""). # Run TMVA. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/275
https://github.com/root-project/root/pull/276:40,interoperability,conflict,conflicts,40,"I'm closing this pull request, since it conflicts with other --- already pulled requests --- and I'll deliver an improved one. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/276
https://github.com/root-project/root/pull/277:241,energy efficiency,reduc,reduction,241,"Hi @bbockelm ,. nice job. . For the serialisation std::atomic<T> might not be hard to achieve given its layout. From the second part of your message, I do not understand if the work is finished or not: can you elaborate? Do you have runtime reduction figures for CMS Reco, stemming from an actual Fall16 reco job or back-of-the-envelope calculations ? A clarification: the main developer behind IMT capabilities is @etejedor . Cheers,. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:141,integrability,messag,message,141,"Hi @bbockelm ,. nice job. . For the serialisation std::atomic<T> might not be hard to achieve given its layout. From the second part of your message, I do not understand if the work is finished or not: can you elaborate? Do you have runtime reduction figures for CMS Reco, stemming from an actual Fall16 reco job or back-of-the-envelope calculations ? A clarification: the main developer behind IMT capabilities is @etejedor . Cheers,. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:141,interoperability,messag,message,141,"Hi @bbockelm ,. nice job. . For the serialisation std::atomic<T> might not be hard to achieve given its layout. From the second part of your message, I do not understand if the work is finished or not: can you elaborate? Do you have runtime reduction figures for CMS Reco, stemming from an actual Fall16 reco job or back-of-the-envelope calculations ? A clarification: the main developer behind IMT capabilities is @etejedor . Cheers,. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:159,testability,understand,understand,159,"Hi @bbockelm ,. nice job. . For the serialisation std::atomic<T> might not be hard to achieve given its layout. From the second part of your message, I do not understand if the work is finished or not: can you elaborate? Do you have runtime reduction figures for CMS Reco, stemming from an actual Fall16 reco job or back-of-the-envelope calculations ? A clarification: the main developer behind IMT capabilities is @etejedor . Cheers,. D.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:208,performance,lock,locks,208,"Hi @bbockelm ,. I see that you are using ROOT::Internal::TParBranchProcessingRAII here:. https://github.com/root-mirror/root/pull/277/files#diff-de4250b19a609451f620d99107b0d4a4R4813. This RAII activates the locks needed for reading branches in parallel. Are these locks exactly the same in the case of writing? If not, you should use a different RAII and put in place only those locks that you actually need. Cheers,. Enric.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:245,performance,parallel,parallel,245,"Hi @bbockelm ,. I see that you are using ROOT::Internal::TParBranchProcessingRAII here:. https://github.com/root-mirror/root/pull/277/files#diff-de4250b19a609451f620d99107b0d4a4R4813. This RAII activates the locks needed for reading branches in parallel. Are these locks exactly the same in the case of writing? If not, you should use a different RAII and put in place only those locks that you actually need. Cheers,. Enric.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:265,performance,lock,locks,265,"Hi @bbockelm ,. I see that you are using ROOT::Internal::TParBranchProcessingRAII here:. https://github.com/root-mirror/root/pull/277/files#diff-de4250b19a609451f620d99107b0d4a4R4813. This RAII activates the locks needed for reading branches in parallel. Are these locks exactly the same in the case of writing? If not, you should use a different RAII and put in place only those locks that you actually need. Cheers,. Enric.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:380,performance,lock,locks,380,"Hi @bbockelm ,. I see that you are using ROOT::Internal::TParBranchProcessingRAII here:. https://github.com/root-mirror/root/pull/277/files#diff-de4250b19a609451f620d99107b0d4a4R4813. This RAII activates the locks needed for reading branches in parallel. Are these locks exactly the same in the case of writing? If not, you should use a different RAII and put in place only those locks that you actually need. Cheers,. Enric.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:208,security,lock,locks,208,"Hi @bbockelm ,. I see that you are using ROOT::Internal::TParBranchProcessingRAII here:. https://github.com/root-mirror/root/pull/277/files#diff-de4250b19a609451f620d99107b0d4a4R4813. This RAII activates the locks needed for reading branches in parallel. Are these locks exactly the same in the case of writing? If not, you should use a different RAII and put in place only those locks that you actually need. Cheers,. Enric.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:265,security,lock,locks,265,"Hi @bbockelm ,. I see that you are using ROOT::Internal::TParBranchProcessingRAII here:. https://github.com/root-mirror/root/pull/277/files#diff-de4250b19a609451f620d99107b0d4a4R4813. This RAII activates the locks needed for reading branches in parallel. Are these locks exactly the same in the case of writing? If not, you should use a different RAII and put in place only those locks that you actually need. Cheers,. Enric.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:380,security,lock,locks,380,"Hi @bbockelm ,. I see that you are using ROOT::Internal::TParBranchProcessingRAII here:. https://github.com/root-mirror/root/pull/277/files#diff-de4250b19a609451f620d99107b0d4a4R4813. This RAII activates the locks needed for reading branches in parallel. Are these locks exactly the same in the case of writing? If not, you should use a different RAII and put in place only those locks that you actually need. Cheers,. Enric.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:324,energy efficiency,CPU,CPU,324,"@etejedor - Apologies: I had only looked at the latest commit and saw Danilo's name and overlooked yours. Nice work! Indeed, `TParBranchProcessingRAII` does not need to be present there. I will remove it. @dpiparo - From the other ticket, when we switch from the existing compression approach (HC-LZMA) to zlib level 1, the CPU efficiency goes up from 83% to 95%. Basically, the majority of long threads stalls comes from waiting on the flush to finish. Here's a nice graph Chris put together: https://dl.dropboxusercontent.com/u/11356841/rereco_1000_stall.pdf.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:324,performance,CPU,CPU,324,"@etejedor - Apologies: I had only looked at the latest commit and saw Danilo's name and overlooked yours. Nice work! Indeed, `TParBranchProcessingRAII` does not need to be present there. I will remove it. @dpiparo - From the other ticket, when we switch from the existing compression approach (HC-LZMA) to zlib level 1, the CPU efficiency goes up from 83% to 95%. Basically, the majority of long threads stalls comes from waiting on the flush to finish. Here's a nice graph Chris put together: https://dl.dropboxusercontent.com/u/11356841/rereco_1000_stall.pdf.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:152,reliability,doe,does,152,"@etejedor - Apologies: I had only looked at the latest commit and saw Danilo's name and overlooked yours. Nice work! Indeed, `TParBranchProcessingRAII` does not need to be present there. I will remove it. @dpiparo - From the other ticket, when we switch from the existing compression approach (HC-LZMA) to zlib level 1, the CPU efficiency goes up from 83% to 95%. Basically, the majority of long threads stalls comes from waiting on the flush to finish. Here's a nice graph Chris put together: https://dl.dropboxusercontent.com/u/11356841/rereco_1000_stall.pdf.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:328,usability,efficien,efficiency,328,"@etejedor - Apologies: I had only looked at the latest commit and saw Danilo's name and overlooked yours. Nice work! Indeed, `TParBranchProcessingRAII` does not need to be present there. I will remove it. @dpiparo - From the other ticket, when we switch from the existing compression approach (HC-LZMA) to zlib level 1, the CPU efficiency goes up from 83% to 95%. Basically, the majority of long threads stalls comes from waiting on the flush to finish. Here's a nice graph Chris put together: https://dl.dropboxusercontent.com/u/11356841/rereco_1000_stall.pdf.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:11,energy efficiency,Current,Currently,11,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:181,integrability,Event,Eventhough,181,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:165,performance,memor,memory,165,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:276,performance,I/O,I/O,276,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:34,reliability,doe,does,34,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:47,usability,support,support,47,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:165,usability,memor,memory,165,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:203,usability,custom,custom,203,"@Dr15Jones Currently StreamerInfo does not yet support std::atomic (we could add it straightforwardly if we have a guarantee that std::atomic<T> and T have the same memory layout). Eventhough there is a custom Streamer for TTree, it still uses the StreamerInfo for most of it I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:245,interoperability,platform,platform-XYZ,245,"I believe there is explicitly no guarantee that `std::atomic<T>` and `T` have the same memory layout - in fact, it's legal for the compiler to implement this with a mutex. In all likelihood, it is the same layout on X86 but maybe not on obscure-platform-XYZ. However, since we only need this to be thread-safe for the scope of the `FlushBaskets` call, we can do the thread safety work in transient members and add the intermediate results back to the non-thread-safe persisted members. I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:418,modifiability,interm,intermediate,418,"I believe there is explicitly no guarantee that `std::atomic<T>` and `T` have the same memory layout - in fact, it's legal for the compiler to implement this with a mutex. In all likelihood, it is the same layout on X86 but maybe not on obscure-platform-XYZ. However, since we only need this to be thread-safe for the scope of the `FlushBaskets` call, we can do the thread safety work in transient members and add the intermediate results back to the non-thread-safe persisted members. I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:87,performance,memor,memory,87,"I believe there is explicitly no guarantee that `std::atomic<T>` and `T` have the same memory layout - in fact, it's legal for the compiler to implement this with a mutex. In all likelihood, it is the same layout on X86 but maybe not on obscure-platform-XYZ. However, since we only need this to be thread-safe for the scope of the `FlushBaskets` call, we can do the thread safety work in transient members and add the intermediate results back to the non-thread-safe persisted members. I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:305,safety,safe,safe,305,"I believe there is explicitly no guarantee that `std::atomic<T>` and `T` have the same memory layout - in fact, it's legal for the compiler to implement this with a mutex. In all likelihood, it is the same layout on X86 but maybe not on obscure-platform-XYZ. However, since we only need this to be thread-safe for the scope of the `FlushBaskets` call, we can do the thread safety work in transient members and add the intermediate results back to the non-thread-safe persisted members. I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:373,safety,safe,safety,373,"I believe there is explicitly no guarantee that `std::atomic<T>` and `T` have the same memory layout - in fact, it's legal for the compiler to implement this with a mutex. In all likelihood, it is the same layout on X86 but maybe not on obscure-platform-XYZ. However, since we only need this to be thread-safe for the scope of the `FlushBaskets` call, we can do the thread safety work in transient members and add the intermediate results back to the non-thread-safe persisted members. I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:462,safety,safe,safe,462,"I believe there is explicitly no guarantee that `std::atomic<T>` and `T` have the same memory layout - in fact, it's legal for the compiler to implement this with a mutex. In all likelihood, it is the same layout on X86 but maybe not on obscure-platform-XYZ. However, since we only need this to be thread-safe for the scope of the `FlushBaskets` call, we can do the thread safety work in transient members and add the intermediate results back to the non-thread-safe persisted members. I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:87,usability,memor,memory,87,"I believe there is explicitly no guarantee that `std::atomic<T>` and `T` have the same memory layout - in fact, it's legal for the compiler to implement this with a mutex. In all likelihood, it is the same layout on X86 but maybe not on obscure-platform-XYZ. However, since we only need this to be thread-safe for the scope of the `FlushBaskets` call, we can do the thread safety work in transient members and add the intermediate results back to the non-thread-safe persisted members. I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:54,performance,parallel,parallel,54,"Latest commit switches to transient atomics while the parallel flush is ongoing; after completion, the values in the atomics are added back into the main non-thread-safe counter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:87,safety,compl,completion,87,"Latest commit switches to transient atomics while the parallel flush is ongoing; after completion, the values in the atomics are added back into the main non-thread-safe counter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:165,safety,safe,safe,165,"Latest commit switches to transient atomics while the parallel flush is ongoing; after completion, the values in the atomics are added back into the main non-thread-safe counter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:87,security,compl,completion,87,"Latest commit switches to transient atomics while the parallel flush is ongoing; after completion, the values in the atomics are added back into the main non-thread-safe counter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:52,availability,sli,slightly,52,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:104,deployability,version,version,104,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:134,deployability,build,build,134,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:140,deployability,contain,containing,140,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:156,deployability,patch,patch,156,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:104,integrability,version,version,104,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:104,modifiability,version,version,104,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:52,reliability,sli,slightly,52,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:156,safety,patch,patch,156,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:156,security,patch,patch,156,"Hi @bbockelm,. thanks for the plot. My question was slightly different. Did you try a rereco with CMSSW version built on top a ROOT\* build containing this patch? If yes, what was the improvement?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:19,deployability,build,build,19,"@dpiparo - doing a build with CMSSW will be extremely hard until CMSSW has at least a test-release based on ROOT 6.08 (and, even then, no guarantees the reco application would work). Best I can do currently is (a) this improves straightforward examples, (b) CMSSW blocking on `FlushBaskets` remains the top contributor to thread stalls, and (c) the stalls go away if we switch the tree to a faster compression algorithm (such as `zlib`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:91,deployability,releas,release,91,"@dpiparo - doing a build with CMSSW will be extremely hard until CMSSW has at least a test-release based on ROOT 6.08 (and, even then, no guarantees the reco application would work). Best I can do currently is (a) this improves straightforward examples, (b) CMSSW blocking on `FlushBaskets` remains the top contributor to thread stalls, and (c) the stalls go away if we switch the tree to a faster compression algorithm (such as `zlib`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:197,energy efficiency,current,currently,197,"@dpiparo - doing a build with CMSSW will be extremely hard until CMSSW has at least a test-release based on ROOT 6.08 (and, even then, no guarantees the reco application would work). Best I can do currently is (a) this improves straightforward examples, (b) CMSSW blocking on `FlushBaskets` remains the top contributor to thread stalls, and (c) the stalls go away if we switch the tree to a faster compression algorithm (such as `zlib`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:86,safety,test,test-release,86,"@dpiparo - doing a build with CMSSW will be extremely hard until CMSSW has at least a test-release based on ROOT 6.08 (and, even then, no guarantees the reco application would work). Best I can do currently is (a) this improves straightforward examples, (b) CMSSW blocking on `FlushBaskets` remains the top contributor to thread stalls, and (c) the stalls go away if we switch the tree to a faster compression algorithm (such as `zlib`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:86,testability,test,test-release,86,"@dpiparo - doing a build with CMSSW will be extremely hard until CMSSW has at least a test-release based on ROOT 6.08 (and, even then, no guarantees the reco application would work). Best I can do currently is (a) this improves straightforward examples, (b) CMSSW blocking on `FlushBaskets` remains the top contributor to thread stalls, and (c) the stalls go away if we switch the tree to a faster compression algorithm (such as `zlib`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:125,deployability,patch,patch,125,"@bbockelm Didn't Dan show that LZMA with the smaller windows was on par performance/stall wise with zlib? [Nonetheless, this patch should still help even further :) ].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:72,performance,perform,performance,72,"@bbockelm Didn't Dan show that LZMA with the smaller windows was on par performance/stall wise with zlib? [Nonetheless, this patch should still help even further :) ].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:125,safety,patch,patch,125,"@bbockelm Didn't Dan show that LZMA with the smaller windows was on par performance/stall wise with zlib? [Nonetheless, this patch should still help even further :) ].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:125,security,patch,patch,125,"@bbockelm Didn't Dan show that LZMA with the smaller windows was on par performance/stall wise with zlib? [Nonetheless, this patch should still help even further :) ].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:72,usability,perform,performance,72,"@bbockelm Didn't Dan show that LZMA with the smaller windows was on par performance/stall wise with zlib? [Nonetheless, this patch should still help even further :) ].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:144,usability,help,help,144,"@bbockelm Didn't Dan show that LZMA with the smaller windows was on par performance/stall wise with zlib? [Nonetheless, this patch should still help even further :) ].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:44,testability,coverag,coverage,44,@dpiparo - PR9 in roottest has some minimal coverage of this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/277:36,usability,minim,minimal,36,@dpiparo - PR9 in roottest has some minimal coverage of this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/277
https://github.com/root-project/root/pull/278:207,availability,error,error,207,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:145,deployability,Fail,Failed,145,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:113,integrability,messag,message,113,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:213,integrability,messag,message,213,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:113,interoperability,messag,message,113,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:213,interoperability,messag,message,213,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:207,performance,error,error,207,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:145,reliability,Fail,Failed,145,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:207,safety,error,error,207,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:100,usability,Command,Command,100,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/278:207,usability,error,error,207,"That's how it works:. C++ code:. ``` cpp. PyRunString(""callbacks = [ }"", ""Stupid typo here"");. ```. Command line message:. ``` bash. <WARNING> : Failed to run python code: callbacks = [}. <WARNING> : Python error message:. File ""<string>"", line 1. callbacks = [ }. ^. SyntaxError: unexpected EOF while parsing. <FATAL> : Stupid typo here. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/278
https://github.com/root-project/root/pull/280:110,deployability,instal,install,110,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:653,energy efficiency,load,loaded,653,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:653,performance,load,loaded,653,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:16,safety,review,review,16,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:137,safety,Test,Testing,137,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:163,safety,test,tests,163,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:615,safety,test,testPyKeras,615,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:635,safety,test,test,635,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:16,testability,review,review,16,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:137,testability,Test,Testing,137,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:158,testability,unit,unit,158,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:163,testability,test,tests,163,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:213,testability,Regress,Regression,213,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:400,testability,Regress,Regression,400,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:414,testability,Regress,RegressionKeras,414,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:615,testability,test,testPyKeras,615,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:635,testability,test,test,635,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:73,usability,walkthrough,walkthrough,73,This PR needs a review (mainly because it's a lot of code). Here a small walkthrough:. Preparation:. ```. pip install keras theano. ```. Testing:. ```. # Run unit tests (PyMVA-Keras-Classification and PyMVA-Keras-Regression). ctest -V -R PyMVA. # Check out examples. cd tutorials/tmva/keras. # Classification. ./ClassificationKeras.py. root -l LaunchClasGUI.C. ./ApplicationClassificationKeras.py. # Regression. ./RegressionKeras.py. root -l LaunchRegGUI.C. ./ApplicationRegressionKeras.py. # Multiclass. ./MulticlassKeras.py. root -l LaunchMultGUI.py. ```. Questionable lines of code from my point of view:. - in `testPyKeras*.C` the test datasets are loaded with `curl` (such as done in `TMVAClassification.C`).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:217,availability,state,statement,217,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:217,integrability,state,statement,217,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:109,interoperability,compatib,compatibility,109,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:42,safety,test,tests,42,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:42,testability,test,tests,42,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:193,testability,simpl,simply,193,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:193,usability,simpl,simply,193,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:273,availability,error,error,273,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:396,availability,avail,available,396,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:129,deployability,modul,module,129,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:204,deployability,modul,module,204,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:324,deployability,modul,module,324,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:406,deployability,modul,modules,406,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:504,deployability,Fail,Failed,504,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:526,deployability,modul,module,526,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:606,deployability,modul,module,606,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:631,deployability,modul,module,631,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:279,integrability,messag,message,279,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:279,interoperability,messag,message,279,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:110,modifiability,variab,variable,110,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:129,modifiability,modul,module,129,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:204,modifiability,modul,module,204,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:324,modifiability,modul,module,324,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:406,modifiability,modul,modules,406,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:484,modifiability,pac,packages,484,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:526,modifiability,modul,module,526,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:606,modifiability,modul,module,606,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:631,modifiability,modul,module,631,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:753,modifiability,pac,packages,753,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:273,performance,error,error,273,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:396,reliability,availab,available,396,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:504,reliability,Fail,Failed,504,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:129,safety,modul,module,129,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:204,safety,modul,module,204,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:273,safety,error,error,273,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:324,safety,modul,module,324,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:396,safety,avail,available,396,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:406,safety,modul,modules,406,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:526,safety,modul,module,526,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:606,safety,modul,module,606,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:631,safety,modul,module,631,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:396,security,availab,available,396,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:304,testability,simpl,simply,304,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:541,testability,Trace,Traceback,541,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:273,usability,error,error,273,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:304,usability,simpl,simply,304,"Two fixes here:. - `REQUIRED` flag in cmake function `find_python_module` did not work because of wrongly set variable. - If the module is not found, then the function prints the response of the `import <module>` python call. This pollutes probably the cmake output if the error message of python is not simply sth like 'no module found with this name' or the function is too often called on not available modules. It looks like this:. ```. -- Found py_keras: /usr/lib/python3.5/site-packages/keras . -- Failed to find Python module theano: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ImportError: No module named 'theano'. -- Could NOT find py_theano (missing: PY_THEANO) . -- Found py_tensorflow: /usr/lib/python3.5/site-packages/tensorflow. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1199,availability,error,error,1199,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:171,deployability,build,build,171,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:250,deployability,build,build,250,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:292,deployability,modul,modules,292,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:805,deployability,build,build,805,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:880,deployability,build,build,880,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:922,deployability,modul,modules,922,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1390,deployability,fail,failed,1390,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:402,energy efficiency,model,model,402,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:491,energy efficiency,model,model,491,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1032,energy efficiency,model,model,1032,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1121,energy efficiency,model,model,1121,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1149,energy efficiency,estimat,estimate,1149,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:532,integrability,event,events,532,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1172,integrability,event,events,1172,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:292,modifiability,modul,modules,292,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:922,modifiability,modul,modules,922,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:332,performance,time,timeout,332,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:962,performance,time,timeout,962,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1199,performance,error,error,1199,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1390,reliability,fail,failed,1390,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:32,safety,test,tests,32,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:61,safety,test,test,61,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:112,safety,Test,Test,112,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:188,safety,test,test,188,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:193,safety,test,testPyKerasClassification,193,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:292,safety,modul,modules,292,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:327,safety,Test,Test,327,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:332,safety,timeout,timeout,332,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:370,safety,test,test,370,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:636,safety,Test,Test,636,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:699,safety,test,test,699,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:746,safety,Test,Test,746,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:822,safety,test,test,822,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:827,safety,test,testPyKerasRegression,827,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:922,safety,modul,modules,922,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:957,safety,Test,Test,957,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:962,safety,timeout,timeout,962,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1000,safety,test,test,1000,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1199,safety,error,error,1199,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1219,safety,Test,Test,1219,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1296,safety,test,tests,1296,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1368,safety,test,tests,1368,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1384,safety,test,tests,1384,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:402,security,model,model,402,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:491,security,model,model,491,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:567,security,sign,signal,567,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1032,security,model,model,1032,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1121,security,model,model,1121,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:32,testability,test,tests,32,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:61,testability,test,test,61,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:112,testability,Test,Test,112,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:188,testability,test,test,188,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:193,testability,test,testPyKerasClassification,193,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:327,testability,Test,Test,327,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:370,testability,test,test,370,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:636,testability,Test,Test,636,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:699,testability,test,test,699,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:730,testability,Regress,Regression,730,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:746,testability,Test,Test,746,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:822,testability,test,test,822,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:827,testability,test,testPyKerasRegression,827,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:957,testability,Test,Test,957,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1000,testability,test,test,1000,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1219,testability,Test,Test,1219,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1241,testability,Regress,Regression,1241,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1296,testability,test,tests,1296,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1351,testability,Regress,Regression,1351,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1368,testability,test,tests,1368,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1384,testability,test,tests,1384,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:117,usability,command,command,117,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:153,usability,user,users,153,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:232,usability,user,users,232,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:268,usability,user,users,268,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:751,usability,command,command,751,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:787,usability,user,users,787,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:862,usability,user,users,862,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:898,usability,user,users,898,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:1199,usability,error,error,1199,"Now, the verbose reponse of the tests looks like this:. ```. test 73. Start 73: PyMVA-Keras-Classification. 73: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasClassification"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 73: Test timeout computed to be: 1500. 73: Get test data... 73: Generate keras model... 73: Using Theano backend. 73: Setup TMVA... 73: Using Theano backend. 73: Train model... 73: Run reader and classify 100 events... 73: Mean MVA response on signal: 0.747554. 73: Mean MVA response on background: 0.290326. 1/2 Test #73: PyMVA-Keras-Classification ....... Passed 14.31 sec. test 74. Start 74: PyMVA-Keras-Regression. 74: Test command: /usr/bin/cmake ""-DCMD=/usr/users/wunsch/root/build/tmva/pymva/test/testPyKerasRegression"" ""-DSYS=/usr/users/wunsch/root/build"" ""-P"" ""/usr/users/wunsch/root/cmake/modules/RootTestDriver.cmake"". 74: Test timeout computed to be: 1500. 74: Get test data... 74: Generate keras model... 74: Using Theano backend. 74: Setup TMVA... 74: Using Theano backend. 74: Train model... 74: Run reader and estimate target of 100 events... 74: Mean squared error: 1.28006. 2/2 Test #74: PyMVA-Keras-Regression ........... Passed 14.53 sec. The following tests passed:. PyMVA-Keras-Classification. PyMVA-Keras-Regression. 100% tests passed, 0 tests failed out of 2. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:7,testability,understand,understand,7,Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:90,testability,simpl,simply,90,Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:90,usability,simpl,simply,90,Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:97,usability,close,closed,97,Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:557,security,auth,auth,557,"On 14 Oct 2016, at 12:03, Stefan Wunsch <notifications@github.com<mailto:notifications@github.com>> wrote:. Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand. Needs to be done by hand, since the merge is not done in github. Thank you for closing it. Lorenzo. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/280#issuecomment-253759853, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-NdwgS8ChgjnuZXxwoOf9bUo_emT7qks5qz1OKgaJpZM4KUr3L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:115,testability,understand,understand,115,"On 14 Oct 2016, at 12:03, Stefan Wunsch <notifications@github.com<mailto:notifications@github.com>> wrote:. Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand. Needs to be done by hand, since the merge is not done in github. Thank you for closing it. Lorenzo. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/280#issuecomment-253759853, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-NdwgS8ChgjnuZXxwoOf9bUo_emT7qks5qz1OKgaJpZM4KUr3L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:198,testability,simpl,simply,198,"On 14 Oct 2016, at 12:03, Stefan Wunsch <notifications@github.com<mailto:notifications@github.com>> wrote:. Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand. Needs to be done by hand, since the merge is not done in github. Thank you for closing it. Lorenzo. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/280#issuecomment-253759853, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-NdwgS8ChgjnuZXxwoOf9bUo_emT7qks5qz1OKgaJpZM4KUr3L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:198,usability,simpl,simply,198,"On 14 Oct 2016, at 12:03, Stefan Wunsch <notifications@github.com<mailto:notifications@github.com>> wrote:. Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand. Needs to be done by hand, since the merge is not done in github. Thank you for closing it. Lorenzo. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/280#issuecomment-253759853, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-NdwgS8ChgjnuZXxwoOf9bUo_emT7qks5qz1OKgaJpZM4KUr3L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/280:205,usability,close,closed,205,"On 14 Oct 2016, at 12:03, Stefan Wunsch <notifications@github.com<mailto:notifications@github.com>> wrote:. Do you understand why the PR is not marked as solved? I can't see any unmerged commits. I simply closed it by hand. Needs to be done by hand, since the merge is not done in github. Thank you for closing it. Lorenzo. —. You are receiving this because you were mentioned. Reply to this email directly, view it on GitHubhttps://github.com/root-mirror/root/pull/280#issuecomment-253759853, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AE-NdwgS8ChgjnuZXxwoOf9bUo_emT7qks5qz1OKgaJpZM4KUr3L.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/280
https://github.com/root-project/root/pull/281:15,energy efficiency,estimat,estimation,15,Added unbiased estimation of ROC standard deviation to cross-validation results and appended this information to the print function.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:33,interoperability,standard,standard,33,Added unbiased estimation of ROC standard deviation to cross-validation results and appended this information to the print function.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:61,safety,valid,validation,61,Added unbiased estimation of ROC standard deviation to cross-validation results and appended this information to the print function.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:61,security,validat,validation,61,Added unbiased estimation of ROC standard deviation to cross-validation results and appended this information to the print function.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:149,energy efficiency,Load,Load,149,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:95,integrability,sub,subprocess,95,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:979,integrability,event,events,979,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:1085,integrability,event,events,1085,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:149,performance,Load,Load,149,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:7,safety,test,test,7,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:691,safety,valid,validation,691,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:324,security,sign,signal,324,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:439,security,sign,signal,439,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:535,security,sign,signal,535,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:691,security,validat,validation,691,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:928,security,Sign,Signal,928,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:962,security,Sign,Signal,962,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:1137,security,Sign,Signal,1137,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:7,testability,test,test,7,"Here a test file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal). dataloader.AddBackgroundTree(background). dataloader.PrepareTrainingAndTestTree(TCut(''), 'SplitMode=Random:NormMode=NumEvents:!V'). # Setup cross-validation. cv = TMVA.CrossValidation(dataloader). cv.BookMethod(TMVA.Types.kFisher, 'Fisher', '!H:!V:Fisher'). cv.Evaluate(). results = cv.GetResults(). results.Print(). ```. And the output:. ```. DataSetInfo : [dataset] : Added class ""Signal"". : Add Tree TreeS of type Signal with 6000 events. DataSetInfo : [dataset] : Added class ""Background"". : Add Tree TreeB of type Background with 6000 events. : Dataset[dataset] : Class index : 0 name : Signal. : Dataset[dataset] : Class index : 1 name : Background. : Evaluate method: Fisher. : Evaluation done. <HEADER> CrossValidation : ==== Results ====. : Fold 0 ROC-Int : 0.8827. : Fold 1 ROC-Int : 0.8874. : Fold 2 ROC-Int : 0.8910. : Fold 3 ROC-Int : 0.9120. : Fold 4 ROC-Int : 0.8988. : ------------------------. : Average ROC-Int : 0.8944. : Std-Dev ROC-Int : 0.0115. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:12,safety,valid,validation,12,Added cross validation example in `tutorials/tmva/TMVACrossValidation.C`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:12,security,validat,validation,12,Added cross validation example in `tutorials/tmva/TMVACrossValidation.C`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:32,interoperability,conflict,conflict,32,"@ThomasStevensonQM Does this PR conflict with work done by you? At the IML meeting, it sounded like you've some uncommitted code somehwere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/281:19,reliability,Doe,Does,19,"@ThomasStevensonQM Does this PR conflict with work done by you? At the IML meeting, it sounded like you've some uncommitted code somehwere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/281
https://github.com/root-project/root/pull/283:1346,availability,Error,ErrorStrategy,1346,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3,deployability,build,builds,3,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:587,energy efficiency,Draw,DrawProgressBar,587,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:656,energy efficiency,Load,Load,656,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1421,energy efficiency,GPU,GPU,1421,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:380,integrability,sub,subprocess,380,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:603,integrability,Transform,Transformations,603,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1532,integrability,Batch,BatchSize,1532,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:603,interoperability,Transform,Transformations,603,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1408,interoperability,Architectur,Architecture,1408,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:656,performance,Load,Load,656,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1346,performance,Error,ErrorStrategy,1346,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1421,performance,GPU,GPU,1421,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1532,performance,Batch,BatchSize,1532,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:285,safety,test,test,285,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1346,safety,Error,ErrorStrategy,1346,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1545,safety,Test,TestRepetitions,1545,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1582,safety,test,test,1582,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1638,safety,Test,TestAllMethods,1638,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:831,security,sign,signal,831,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:946,security,sign,signal,946,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1042,security,sign,signal,1042,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:285,testability,test,test,285,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1545,testability,Test,TestRepetitions,1545,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1582,testability,test,test,1582,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1638,testability,Test,TestAllMethods,1638,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:71,usability,support,supports,71,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:451,usability,Tool,Tools,451,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1346,usability,Error,ErrorStrategy,1346,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1480,usability,Learn,LearningRate,1480,"It builds fine on my machine with this cmake setup (note that CUDA 8.0 supports only GCC up to 5.3):. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. And here a test python file:. ```. #!/usr/bin/env python. from ROOT import TMVA, TFile, TTree, TCut. from subprocess import call. from os.path import isfile. # Setup TMVA. TMVA.Tools.Instance(). output = TFile.Open('TMVA.root', 'RECREATE'). factory = TMVA.Factory('TMVAClassification', output,. '!V:!Silent:Color:DrawProgressBar:Transformations=D,G:AnalysisType=Classification'). # Load data. if not isfile('tmva_class_example.root'):. call(['curl', '-O', 'http://root.cern.ch/files/tmva_class_example.root']). data = TFile.Open('tmva_class_example.root'). signal = data.Get('TreeS'). background = data.Get('TreeB'). dataloader = TMVA.DataLoader('dataset'). for branch in signal.GetListOfBranches():. dataloader.AddVariable(branch.GetName()). dataloader.AddSignalTree(signal, 1.0). dataloader.AddBackgroundTree(background, 1.0). dataloader.PrepareTrainingAndTestTree(TCut(''),. 'TrainTestSplit_Signal=0.8:TrainTestSplit_Background=0.8:SplitMode=Random:NormMode=NumEvents:!V'). # Book methods. factory.BookMethod(dataloader, TMVA.Types.kDNN, 'DNN',. 'H:!V:VarTransform=D,G:ErrorStrategy=CROSSENTROPY:WeightInitialization=XAVIERUNIFORM:Architecture=GPU:Layout=TANH|64,TANH|64,TANH|64,LINEAR:TrainingStrategy=LearningRate=0.01,Repetitions=1,ConvergenceSteps=20,BatchSize=32,TestRepetitions=1'). # Run training, test and evaluation. factory.TrainAllMethods(). factory.TestAllMethods(). factory.EvaluateAllMethods(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:48,deployability,build,build,48,"@simonpf How was it possible on your machine to build the CUDA DNN method with the include path of the library`dnn_cuda` set to `ROOT_INCLUDE_DIRS`, which is not populated by default? On my machines (Ubuntu 16.04 and Arch) it fails because the headers are not found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:226,deployability,fail,fails,226,"@simonpf How was it possible on your machine to build the CUDA DNN method with the include path of the library`dnn_cuda` set to `ROOT_INCLUDE_DIRS`, which is not populated by default? On my machines (Ubuntu 16.04 and Arch) it fails because the headers are not found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:226,reliability,fail,fails,226,"@simonpf How was it possible on your machine to build the CUDA DNN method with the include path of the library`dnn_cuda` set to `ROOT_INCLUDE_DIRS`, which is not populated by default? On my machines (Ubuntu 16.04 and Arch) it fails because the headers are not found.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:433,deployability,releas,release,433,"Hi Stefan,. You're right about the ROOT_INCLUDE_DIRS. However, the CUDA include directories are only appended to. the standard include directories so the include directories should be set properly anyways. At least they are on my machine, as well as on the techlab machines. Or is this just a weird coincidence? Concerning CUDA 8.0: I am using CUDA 7.5 on my machine (Ubuntu 15.10) and the techlab machine (Scientific Linux CERN SLC release 6.5) so I don't think requiring CUDA version >= 8.0 is a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:478,deployability,version,version,478,"Hi Stefan,. You're right about the ROOT_INCLUDE_DIRS. However, the CUDA include directories are only appended to. the standard include directories so the include directories should be set properly anyways. At least they are on my machine, as well as on the techlab machines. Or is this just a weird coincidence? Concerning CUDA 8.0: I am using CUDA 7.5 on my machine (Ubuntu 15.10) and the techlab machine (Scientific Linux CERN SLC release 6.5) so I don't think requiring CUDA version >= 8.0 is a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:478,integrability,version,version,478,"Hi Stefan,. You're right about the ROOT_INCLUDE_DIRS. However, the CUDA include directories are only appended to. the standard include directories so the include directories should be set properly anyways. At least they are on my machine, as well as on the techlab machines. Or is this just a weird coincidence? Concerning CUDA 8.0: I am using CUDA 7.5 on my machine (Ubuntu 15.10) and the techlab machine (Scientific Linux CERN SLC release 6.5) so I don't think requiring CUDA version >= 8.0 is a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:118,interoperability,standard,standard,118,"Hi Stefan,. You're right about the ROOT_INCLUDE_DIRS. However, the CUDA include directories are only appended to. the standard include directories so the include directories should be set properly anyways. At least they are on my machine, as well as on the techlab machines. Or is this just a weird coincidence? Concerning CUDA 8.0: I am using CUDA 7.5 on my machine (Ubuntu 15.10) and the techlab machine (Scientific Linux CERN SLC release 6.5) so I don't think requiring CUDA version >= 8.0 is a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:312,modifiability,Concern,Concerning,312,"Hi Stefan,. You're right about the ROOT_INCLUDE_DIRS. However, the CUDA include directories are only appended to. the standard include directories so the include directories should be set properly anyways. At least they are on my machine, as well as on the techlab machines. Or is this just a weird coincidence? Concerning CUDA 8.0: I am using CUDA 7.5 on my machine (Ubuntu 15.10) and the techlab machine (Scientific Linux CERN SLC release 6.5) so I don't think requiring CUDA version >= 8.0 is a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:478,modifiability,version,version,478,"Hi Stefan,. You're right about the ROOT_INCLUDE_DIRS. However, the CUDA include directories are only appended to. the standard include directories so the include directories should be set properly anyways. At least they are on my machine, as well as on the techlab machines. Or is this just a weird coincidence? Concerning CUDA 8.0: I am using CUDA 7.5 on my machine (Ubuntu 15.10) and the techlab machine (Scientific Linux CERN SLC release 6.5) so I don't think requiring CUDA version >= 8.0 is a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:312,testability,Concern,Concerning,312,"Hi Stefan,. You're right about the ROOT_INCLUDE_DIRS. However, the CUDA include directories are only appended to. the standard include directories so the include directories should be set properly anyways. At least they are on my machine, as well as on the techlab machines. Or is this just a weird coincidence? Concerning CUDA 8.0: I am using CUDA 7.5 on my machine (Ubuntu 15.10) and the techlab machine (Scientific Linux CERN SLC release 6.5) so I don't think requiring CUDA version >= 8.0 is a good idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:66,deployability,fail,fails,66,"Regarding the include dirs, probably it's a threading problem? It fails finding header files, so the path is not properly populated on my machine(s). Nevertheless, setting the path directly solves it. I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine with 8.0. It is true that it should be possible to compile it on CERN SLC, so I'll keep investigating what is going wrong on my machine. Though, it should also run on Ubuntu 16.10 because it's used frequently (and will be used the next years because it's a LTS).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:237,deployability,fail,fails,237,"Regarding the include dirs, probably it's a threading problem? It fails finding header files, so the path is not properly populated on my machine(s). Nevertheless, setting the path directly solves it. I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine with 8.0. It is true that it should be possible to compile it on CERN SLC, so I'll keep investigating what is going wrong on my machine. Though, it should also run on Ubuntu 16.10 because it's used frequently (and will be used the next years because it's a LTS).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:66,reliability,fail,fails,66,"Regarding the include dirs, probably it's a threading problem? It fails finding header files, so the path is not properly populated on my machine(s). Nevertheless, setting the path directly solves it. I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine with 8.0. It is true that it should be possible to compile it on CERN SLC, so I'll keep investigating what is going wrong on my machine. Though, it should also run on Ubuntu 16.10 because it's used frequently (and will be used the next years because it's a LTS).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:237,reliability,fail,fails,237,"Regarding the include dirs, probably it's a threading problem? It fails finding header files, so the path is not properly populated on my machine(s). Nevertheless, setting the path directly solves it. I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine with 8.0. It is true that it should be possible to compile it on CERN SLC, so I'll keep investigating what is going wrong on my machine. Though, it should also run on Ubuntu 16.10 because it's used frequently (and will be used the next years because it's a LTS).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:50,deployability,build,build,50,"Could you maybe run `make VERBOSE=1` and post the build command for the. CUDA object files? Then we can see if the root include directories. are there or not. For CUDA 8.0: Did you try if adding the following nvcc flag. `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` or something along those lines. https://github.com/BVLC/caffe/issues/4046. solves the problem? On 28 October 2016 at 13:34, Stefan Wunsch notifications@github.com wrote:. > Regarding the include dirs, probably it's a threading problem? It fails. > finding header files, so the path is not properly populated on my. > machine(s). Nevertheless, setting the path directly solves it. > . > I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine. > with 8.0. It is true that it should be possible to compile it on CERN SLC,. > so I'll keep investigating what is going wrong on my machine. Though, it. > should also run on Ubuntu 16.10 because it's used frequently (and will be. > used the next years because it's a LTS). > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-256898716, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhUXVmJ99qAtrtJmrJ5SGswgGJkiEks5q4d3WgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:498,deployability,fail,fails,498,"Could you maybe run `make VERBOSE=1` and post the build command for the. CUDA object files? Then we can see if the root include directories. are there or not. For CUDA 8.0: Did you try if adding the following nvcc flag. `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` or something along those lines. https://github.com/BVLC/caffe/issues/4046. solves the problem? On 28 October 2016 at 13:34, Stefan Wunsch notifications@github.com wrote:. > Regarding the include dirs, probably it's a threading problem? It fails. > finding header files, so the path is not properly populated on my. > machine(s). Nevertheless, setting the path directly solves it. > . > I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine. > with 8.0. It is true that it should be possible to compile it on CERN SLC,. > so I'll keep investigating what is going wrong on my machine. Though, it. > should also run on Ubuntu 16.10 because it's used frequently (and will be. > used the next years because it's a LTS). > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-256898716, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhUXVmJ99qAtrtJmrJ5SGswgGJkiEks5q4d3WgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:681,deployability,fail,fails,681,"Could you maybe run `make VERBOSE=1` and post the build command for the. CUDA object files? Then we can see if the root include directories. are there or not. For CUDA 8.0: Did you try if adding the following nvcc flag. `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` or something along those lines. https://github.com/BVLC/caffe/issues/4046. solves the problem? On 28 October 2016 at 13:34, Stefan Wunsch notifications@github.com wrote:. > Regarding the include dirs, probably it's a threading problem? It fails. > finding header files, so the path is not properly populated on my. > machine(s). Nevertheless, setting the path directly solves it. > . > I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine. > with 8.0. It is true that it should be possible to compile it on CERN SLC,. > so I'll keep investigating what is going wrong on my machine. Though, it. > should also run on Ubuntu 16.10 because it's used frequently (and will be. > used the next years because it's a LTS). > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-256898716, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhUXVmJ99qAtrtJmrJ5SGswgGJkiEks5q4d3WgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:498,reliability,fail,fails,498,"Could you maybe run `make VERBOSE=1` and post the build command for the. CUDA object files? Then we can see if the root include directories. are there or not. For CUDA 8.0: Did you try if adding the following nvcc flag. `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` or something along those lines. https://github.com/BVLC/caffe/issues/4046. solves the problem? On 28 October 2016 at 13:34, Stefan Wunsch notifications@github.com wrote:. > Regarding the include dirs, probably it's a threading problem? It fails. > finding header files, so the path is not properly populated on my. > machine(s). Nevertheless, setting the path directly solves it. > . > I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine. > with 8.0. It is true that it should be possible to compile it on CERN SLC,. > so I'll keep investigating what is going wrong on my machine. Though, it. > should also run on Ubuntu 16.10 because it's used frequently (and will be. > used the next years because it's a LTS). > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-256898716, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhUXVmJ99qAtrtJmrJ5SGswgGJkiEks5q4d3WgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:681,reliability,fail,fails,681,"Could you maybe run `make VERBOSE=1` and post the build command for the. CUDA object files? Then we can see if the root include directories. are there or not. For CUDA 8.0: Did you try if adding the following nvcc flag. `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` or something along those lines. https://github.com/BVLC/caffe/issues/4046. solves the problem? On 28 October 2016 at 13:34, Stefan Wunsch notifications@github.com wrote:. > Regarding the include dirs, probably it's a threading problem? It fails. > finding header files, so the path is not properly populated on my. > machine(s). Nevertheless, setting the path directly solves it. > . > I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine. > with 8.0. It is true that it should be possible to compile it on CERN SLC,. > so I'll keep investigating what is going wrong on my machine. Though, it. > should also run on Ubuntu 16.10 because it's used frequently (and will be. > used the next years because it's a LTS). > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-256898716, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhUXVmJ99qAtrtJmrJ5SGswgGJkiEks5q4d3WgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1247,security,auth,auth,1247,"Could you maybe run `make VERBOSE=1` and post the build command for the. CUDA object files? Then we can see if the root include directories. are there or not. For CUDA 8.0: Did you try if adding the following nvcc flag. `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` or something along those lines. https://github.com/BVLC/caffe/issues/4046. solves the problem? On 28 October 2016 at 13:34, Stefan Wunsch notifications@github.com wrote:. > Regarding the include dirs, probably it's a threading problem? It fails. > finding header files, so the path is not properly populated on my. > machine(s). Nevertheless, setting the path directly solves it. > . > I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine. > with 8.0. It is true that it should be possible to compile it on CERN SLC,. > so I'll keep investigating what is going wrong on my machine. Though, it. > should also run on Ubuntu 16.10 because it's used frequently (and will be. > used the next years because it's a LTS). > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-256898716, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhUXVmJ99qAtrtJmrJ5SGswgGJkiEks5q4d3WgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:56,usability,command,command,56,"Could you maybe run `make VERBOSE=1` and post the build command for the. CUDA object files? Then we can see if the root include directories. are there or not. For CUDA 8.0: Did you try if adding the following nvcc flag. `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` or something along those lines. https://github.com/BVLC/caffe/issues/4046. solves the problem? On 28 October 2016 at 13:34, Stefan Wunsch notifications@github.com wrote:. > Regarding the include dirs, probably it's a threading problem? It fails. > finding header files, so the path is not properly populated on my. > machine(s). Nevertheless, setting the path directly solves it. > . > I'm running Ubuntu 16.10 LTS and it fails with CUDA 7.5 but it runs fine. > with 8.0. It is true that it should be possible to compile it on CERN SLC,. > so I'll keep investigating what is going wrong on my machine. Though, it. > should also run on Ubuntu 16.10 because it's used frequently (and will be. > used the next years because it's a LTS). > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-256898716, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhUXVmJ99qAtrtJmrJ5SGswgGJkiEks5q4d3WgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:315,availability,error,error,315,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:422,availability,error,error,422,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:584,availability,Error,Error,584,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:650,availability,Error,Error,650,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:914,availability,Error,Error,914,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:976,availability,Error,Error,976,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1046,availability,Error,Error,1046," CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3004,availability,error,error,3004,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3145,availability,error,error,3145,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:698,deployability,build,build,698,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1284,deployability,build,build,1284,"Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1391,deployability,depend,depend,1391,"/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1663,deployability,build,build,1663,". /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2007,deployability,build,build,2007,"unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2114,deployability,depend,depend,2114,":. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2386,deployability,build,build,2386,"C-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2536,deployability,build,build,2536,"r\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2575,deployability,instal,install,2575,""",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this prob",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2748,deployability,build,building,2748,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3480,deployability,build,build,3480,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:639,integrability,messag,message,639,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1391,integrability,depend,depend,1391,"/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2114,integrability,depend,depend,2114,":. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3010,integrability,messag,message,3010,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:376,interoperability,Architectur,Architectures,376,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:438,interoperability,Architectur,Architectures,438,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:517,interoperability,Architectur,Architectures,517,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:639,interoperability,messag,message,639,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:746,interoperability,Architectur,Architectures,746,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:859,interoperability,Architectur,Architectures,859,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1218,interoperability,Architectur,Architectures,1218,"\. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1332,interoperability,Architectur,Architectures,1332,"wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1941,interoperability,Architectur,Architectures,1941,"MakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2055,interoperability,Architectur,Architectures,2055,"d now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3010,interoperability,messag,message,3010,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1391,modifiability,depend,depend,1391,"/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2114,modifiability,depend,depend,2114,":. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:287,performance,Multi-thread,Multi-thread,287,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:315,performance,error,error,315,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:422,performance,error,error,422,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:584,performance,Error,Error,584,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:650,performance,Error,Error,650,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:914,performance,Error,Error,914,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:976,performance,Error,Error,976,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1046,performance,Error,Error,1046," CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3004,performance,error,error,3004,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3145,performance,error,error,3145,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3353,reliability,doe,does,3353,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:315,safety,error,error,315,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:422,safety,error,error,422,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:584,safety,Error,Error,584,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:650,safety,Error,Error,650,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:914,safety,Error,Error,914,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:976,safety,Error,Error,976,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1046,safety,Error,Error,1046," CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1391,safety,depend,depend,1391,"/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2114,safety,depend,depend,2114,":. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3004,safety,error,error,3004,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3145,safety,error,error,3145,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1391,testability,depend,depend,1391,"/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2114,testability,depend,depend,2114,":. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:61,usability,command,commands,61,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:315,usability,error,error,315,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:333,usability,user,users,333,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:422,usability,error,error,422,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:584,usability,Error,Error,584,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:650,usability,Error,Error,650,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:673,usability,user,users,673,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:914,usability,Error,Error,914,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:976,usability,Error,Error,976,"Regarding the **include problem**:. Run with this CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1046,usability,Error,Error,1046," CMake/make commands on **ROOT master branch**:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1175,usability,user,users,1175,"a-8.0 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1259,usability,user,users,1259,"9. make -j10 VERBOSE=1 # Multi-thread! ```. Here the error:. ```. /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu:16:52: fatal error: TMVA/DNN/Architectures/Cuda/CudaMatrix.h: No such file or directory. #include ""TMVA/DNN/Architectures/Cuda/CudaMatrix.h"". ^. compilation terminated. CMake Error at dnn_cuda_generated_CudaMatrix.cu.o.cmake:209 (message):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1638,usability,user,users,1638,"ssage):. Error generating. /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/./dnn_cuda_generated_CudaMatrix.cu.o. make[2]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this di",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1898,usability,user,users,1898,"Matrix.cu.o] Error 1. make[1]: *** [tmva/tmva/CMakeFiles/dnn_cuda.dir/all] Error 2. make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1982,usability,user,users,1982,"make[1]: *** Waiting for unfinished jobs.... make: *** [all] Error 2. ```. And now here the verbose make output (stdout grep 'nvcc'):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:2361,usability,user,users,2361,"rated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not br",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3004,usability,error,error,3004,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3145,usability,error,error,3145,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:3536,usability,user,user,3536,"-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. Now, if I run it with only **one** thread (`make -j1 VERBOSE=1`), everything runs fine (but the verbose output has not changed):. ```. /usr/local/cuda-8.0/bin/nvcc -M -D__CUDACC__ /usr/users/wunsch/root_master/tmva/tmva/src/DNN/Architectures/Cuda/CudaMatrix.cu -o /usr/users/wunsch/root_master/build/tmva/tmva/CMakeFiles/dnn_cuda.dir/src/DNN/Architectures/Cuda/dnn_cuda_generated_CudaMatrix.cu.o.NVCC-depend -ccbin /usr/bin/gcc-4.9 -m64 --std c++11 -Xcompiler ,\""-pipe\"",\""-m64\"",\""-Wshadow\"",\""-Wall\"",\""-W\"",\""-Woverloaded-virtual\"",\""-fsigned-char\"",\""-fPIC\"",\""-pthread\"",\""-O2\"",\""-g\"",\""-DNDEBUG\"" -DNVCC -I/usr/local/cuda-8.0/include -I/usr/users/wunsch/root_master/build/include -I/usr/local/cuda-8.0/include. ```. So, during the generation of the object file of `CudaMatrix.cu`, the include dir points only to the build include. But I can't find a copy/install target in CMake, which should copy CudaMatrix.h to this directory. Still, it seems to be a threading problem, which only occurs for the CUDA library. ---. Regarding building the method with **CUDA 7.5 on Ubuntu 16.04:**. Here the CMake config:. ```. cmake .. \. -Dalien=OFF -Dcuda=ON \. -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-7.5 \. -DCMAKE_CXX_COMPILER=/usr/bin/g++-4.9 \. -DCMAKE_C_COMPILER=/usr/bin/gcc-4.9. ```. The error message:. ```. /usr/include/string.h: In function ‘void* __mempcpy_inline(void*, const void*, size_t)’:. /usr/include/string.h:652:42: error: ‘memcpy’ was not declared in this scope. return (char *) memcpy (__dest, __src, __n) + __n;. ```. And yes, it is fixed, if you append `-DCUDA_NVCC_FLAGS=""-D_FORCE_INLINES""` to CMake! As well, CUDA 8.0 does not break with this flag. So we could append this flag permanently, though I don't like this idea because it clutters the build system. On the other hand, every Ubuntu LTS 16.04 user for the next years will face this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:191,deployability,depend,dependency,191,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:191,integrability,depend,dependency,191,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:191,modifiability,depend,dependency,191,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:288,modifiability,Concern,Concerning,288,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:191,safety,depend,dependency,191,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:191,testability,depend,dependency,191,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:288,testability,Concern,Concerning,288,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:366,usability,User,User,366,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:459,usability,user,users,459,"The relevant target is probably `move_headers` defined [here](https://github.com/root-mirror/root/blob/c0e50470156f75d3d87c7a538cd8d8a185092ece/CMakeLists.txt#L122-L125). So adding this as a dependency to dnn_cuda could probably solve the problem. I can have a look at this on Wednesday. Concerning CUDA 7.5 and Ubuntu 16.04: I see this rather as a problem with the User's CUDA setup than. a problem of root considering that this is a common problem also for users of [caffe](https://github.com/BVLC/caffe/issues/4046), [opencv](https://github.com/opencv/opencv/issues/6500) and [torch](https://github.com/torch/torch7/issues/670).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:18,availability,error,error,18,"Unfortunately the error occurs with the default installation on Ubunut 16.04. But still, I think that you are right and it's not ROOT's problem at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:48,deployability,instal,installation,48,"Unfortunately the error occurs with the default installation on Ubunut 16.04. But still, I think that you are right and it's not ROOT's problem at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:18,performance,error,error,18,"Unfortunately the error occurs with the default installation on Ubunut 16.04. But still, I think that you are right and it's not ROOT's problem at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:18,safety,error,error,18,"Unfortunately the error occurs with the default installation on Ubunut 16.04. But still, I think that you are right and it's not ROOT's problem at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:18,usability,error,error,18,"Unfortunately the error occurs with the default installation on Ubunut 16.04. But still, I think that you are right and it's not ROOT's problem at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:30,deployability,depend,dependency,30,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:115,deployability,depend,dependent,115,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:578,deployability,build,build,578,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:687,deployability,build,build,687,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:30,integrability,depend,dependency,30,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:115,integrability,depend,dependent,115,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:30,modifiability,depend,dependency,30,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:115,modifiability,depend,dependent,115,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:30,safety,depend,dependency,30,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:115,safety,depend,dependent,115,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:541,security,hack,hacky,541,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:30,testability,depend,dependency,30,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:115,testability,depend,dependent,115,"Yep, adding `move_headers` as dependency of `dnn_cuda` solves the problem. Here is the code:. ```. #---Handle CUDA dependent code. -----------------. if(CUDA_FOUND). CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). add_dependencies(dnn_cuda move_headers). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). else(). set(DNN_CUDA_LIBRARIES). endif(). ```. This solutions seems pretty hacky for me, shouldn't a library be build with links to the headers in the source directory? Actually, I think that I'm missing something in the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:93,deployability,build,build,93,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:333,deployability,depend,dependency,333,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:419,deployability,depend,dependent,419,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:903,deployability,build,build,903,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1018,deployability,build,build,1018,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:333,integrability,depend,dependency,333,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:419,integrability,depend,dependent,419,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:333,modifiability,depend,dependency,333,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:419,modifiability,depend,dependent,419,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:333,safety,depend,dependency,333,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:419,safety,depend,dependent,419,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:143,security,hack,hackieness,143,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:866,security,hack,hacky,866,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:1286,security,auth,auth,1286,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:176,testability,understand,understand,176,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:333,testability,depend,dependency,333,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:419,testability,depend,dependent,419,"OK, great. Now, if you could also remove CUDA_INCLUDE_DIRECTORIES the bug. is fixed and the. build system a bit cleaner. I am unsure about the hackieness of the solution, as I understand it this. is the way it is done in Root. On 2 November 2016 at 10:07, Stefan Wunsch notifications@github.com wrote:. > Yep, adding move_headers as dependency of dnn_cuda solves the problem. > Here is the code:. > . > #---Handle CUDA dependent code. -----------------. > if(CUDA_FOUND). > CUDA_INCLUDE_DIRECTORIES(${ROOT_INCLUDE_DIRS}). > CUDA_ADD_LIBRARY(dnn_cuda ${DNN_CUDA_FILES}). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > set(DNN_CUDA_LIBRARIES dnn_cuda ${CUDA_CUBLAS_LIBRARIES}). > add_dependencies(dnn_cuda move_headers). > set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DDNNCUDA""). > else(). > set(DNN_CUDA_LIBRARIES). > endif(). > . > This solutions seems pretty hacky for me, shouldn't a library be build. > with links to the headers in the source directory? Actually, I think that. > I'm missing something in the build system. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/283#issuecomment-257809100, or mute. > the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhTHxNjmACDlkEFuRr4gm6Ac8iHqMks5q6FLcgaJpZM4KdRgw. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:274,deployability,build,build,274,"Following the line. `set_property(GLOBAL APPEND PROPERTY ROOT_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/inc)`. the ROOT include directories point to the source directory, but now we are waiting for the `move_headers` target so that we can point to the binary include dir in `build/`. Nevertheless, I'll close this here for now and ask CMake guru Pere for advice about the include directories. I think that we've figured out the problems!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:302,usability,close,close,302,"Following the line. `set_property(GLOBAL APPEND PROPERTY ROOT_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/inc)`. the ROOT include directories point to the source directory, but now we are waiting for the `move_headers` target so that we can point to the binary include dir in `build/`. Nevertheless, I'll close this here for now and ask CMake guru Pere for advice about the include directories. I think that we've figured out the problems!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:36,deployability,depend,dependency,36,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:117,deployability,depend,dependency,117,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:175,deployability,depend,dependency,175,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:198,deployability,depend,dependent,198,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:36,integrability,depend,dependency,36,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:117,integrability,depend,dependency,117,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:175,integrability,depend,dependency,175,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:198,integrability,depend,dependent,198,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:36,modifiability,depend,dependency,36,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:117,modifiability,depend,dependency,117,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:175,modifiability,depend,dependency,175,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:198,modifiability,depend,dependent,198,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:36,safety,depend,dependency,36,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:117,safety,depend,dependency,117,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:175,safety,depend,dependency,175,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:198,safety,depend,dependent,198,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:36,testability,depend,dependency,36,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:117,testability,depend,dependency,117,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:175,testability,depend,dependency,175,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:198,testability,depend,dependent,198,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/283:88,usability,custom,custom,88,"I talked to Pere, the `move_header` dependency is indeed the correct way to implement a custom target. Normally, the dependency is hidden inside `ROOT_LINKER_LIBRARY`. So the dependency on the CUDA dependent target mirrors this function (which can't be used in our case). @lmoneta From my point of view, this PR is merging ready!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/283
https://github.com/root-project/root/pull/286:62,security,sign,signal,62,Also found a bug with the string comparison used to split the signal and background datasets which has been added to the commits.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/286
https://github.com/root-project/root/pull/288:121,deployability,patch,patch,121,Looks good to me. I have checked a few cases and looks counting as expected. I'll merge it now. Thanks for providing the patch. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/288
https://github.com/root-project/root/pull/288:121,safety,patch,patch,121,Looks good to me. I have checked a few cases and looks counting as expected. I'll merge it now. Thanks for providing the patch. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/288
https://github.com/root-project/root/pull/288:121,security,patch,patch,121,Looks good to me. I have checked a few cases and looks counting as expected. I'll merge it now. Thanks for providing the patch. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/288
https://github.com/root-project/root/pull/288:26,usability,close,close,26,Pushed into the master. I close the pull request.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/288
https://github.com/root-project/root/pull/290:90,modifiability,maintain,maintains,90,"Scratch that. Digging through the code, I see why this is not copyable: the `TTreeReader` maintains a `std::deque` to the value itself. It should indeed be possible to make this moveable, but it's not a one-liner as above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/290
https://github.com/root-project/root/pull/290:90,safety,maintain,maintains,90,"Scratch that. Digging through the code, I see why this is not copyable: the `TTreeReader` maintains a `std::deque` to the value itself. It should indeed be possible to make this moveable, but it's not a one-liner as above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/290
https://github.com/root-project/root/pull/297:31,availability,consist,consistently,31,"Dear @kgizdov,. I close the PR consistently with https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8459 . Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/297
https://github.com/root-project/root/pull/297:18,usability,close,close,18,"Dear @kgizdov,. I close the PR consistently with https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8459 . Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/297
https://github.com/root-project/root/pull/297:31,usability,consist,consistently,31,"Dear @kgizdov,. I close the PR consistently with https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8459 . Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/297
https://github.com/root-project/root/pull/299:440,deployability,instal,installoptions,440,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:457,deployability,instal,installoptions,457,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:550,interoperability,Architectur,Architectures,550,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:578,interoperability,Architectur,Architectures,578,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:518,safety,test,test,518,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:644,security,auth,authored,644,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:860,security,auth,auth,860,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:518,testability,test,test,518,"Yes, it excludes both the header file as well as the folder. On 17 November 2016 at 13:50, Vassil Vassilev notifications@github.com. wrote:. > ## _@vgvassilev_ commented on this pull request. > . > In tmva/tmva/CMakeLists.txt. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696:. > . > > @@ -62,6 +62,7 @@ if(CUDA_FOUND). > > add_dependencies(dnn_cuda move_headers). > > else(). > > set(DNN_CUDA_LIBRARIES). > > - set(installoptions ${installoptions} OPTIONS REGEX ""Cuda"" EXCLUDE). > . > Did you test whether that excludes both Architectures/Cuda.h and. > Architectures/Cuda? > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > https://github.com/root-mirror/root/pull/299#pullrequestreview-9017696,. > or mute the thread. > https://github.com/notifications/unsubscribe-auth/AGnOhcka0YlooHEKuDUBwnvOcgx0ctoyks5q_E18gaJpZM4K1P12. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:0,deployability,Integr,Integrated,0,Integrated. Sorry for the delay!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:0,integrability,Integr,Integrated,0,Integrated. Sorry for the delay!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:0,interoperability,Integr,Integrated,0,Integrated. Sorry for the delay!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:0,modifiability,Integr,Integrated,0,Integrated. Sorry for the delay!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:0,reliability,Integr,Integrated,0,Integrated. Sorry for the delay!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:0,security,Integr,Integrated,0,Integrated. Sorry for the delay!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/299:0,testability,Integr,Integrated,0,Integrated. Sorry for the delay!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/299
https://github.com/root-project/root/pull/300:52,energy efficiency,current,current,52,"Sorry. That was not intended! I wanted to merge the current head of root into my repository, and not the other way around... Please delete.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/300
https://github.com/root-project/root/pull/300:81,integrability,repositor,repository,81,"Sorry. That was not intended! I wanted to merge the current head of root into my repository, and not the other way around... Please delete.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/300
https://github.com/root-project/root/pull/300:81,interoperability,repositor,repository,81,"Sorry. That was not intended! I wanted to merge the current head of root into my repository, and not the other way around... Please delete.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/300
https://github.com/root-project/root/pull/301:67,deployability,instal,installed,67,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:196,deployability,modul,modulate,196,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:120,integrability,configur,configures,120,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:120,modifiability,configur,configures,120,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:196,modifiability,modul,modulate,196,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:106,performance,time,time,106,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:196,safety,modul,modulate,196,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:120,security,configur,configures,120,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:196,testability,modula,modulate,196,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:115,usability,user,user,115,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:229,usability,user,user,229,I don't think I agree with removing the QUIET flag. If BLAS is not installed will generate a warning each time the user configures ROOT independently of being interested or not. Perhaps we should modulate it with the interest of user for the options 'imt' and 'tmva'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:417,deployability,API,API,417,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:532,deployability,depend,dependent,532,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:643,deployability,build,build,643,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:542,energy efficiency,CPU,CPU,542,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:100,integrability,messag,message,100,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:417,integrability,API,API,417,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:532,integrability,depend,dependent,532,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:100,interoperability,messag,message,100,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:417,interoperability,API,API,417,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:439,interoperability,specif,specify,439,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:532,modifiability,depend,dependent,532,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:542,performance,CPU,CPU,542,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:532,safety,depend,dependent,532,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:532,testability,depend,dependent,532,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:108,usability,STATU,STATUS,108,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/301:275,usability,indicat,indicates,275,"It's already associated with `tmva`! But we could do sth like this as well:. ```. if(tmva AND imt). message(STATUS ""Looking for BLAS for optional parts of TMVA""). find_package(BLAS). endif(). ```. As well, the previous output `-- Looking for BLAS for optional parts of TMVA` indicates that the warning is connected to an optional part of TMVA. The output if BLAS is not found looks like this: `-- A library with BLAS API not found. Please specify library location.`. The reason why I brought up this PR: If you want to run the BLAS dependent CPU implementation of the DNN, it's not trivial to debug (without altering cmake code) why it is not build though you've set all cmake flags correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/301
https://github.com/root-project/root/pull/303:28,safety,test,tests,28,Just added multi-class unit-tests for PyKeras and PyRandomForest! You can try them with `ctest -V -R -Multiclass`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:23,testability,unit,unit-tests,23,Just added multi-class unit-tests for PyKeras and PyRandomForest! You can try them with `ctest -V -R -Multiclass`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/303:5,modifiability,variab,variable,5,Plus variable ranking implementation!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/303
https://github.com/root-project/root/pull/316:195,deployability,updat,updated,195,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:273,deployability,updat,updating,273,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:195,safety,updat,updated,195,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:273,safety,updat,updating,273,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:195,security,updat,updated,195,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:273,security,updat,updating,273,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:287,usability,User,User,287,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/316:292,usability,Guid,Guide,292,"@vgvassilev Sorry, I got busy in my mid term examinations, so couldn't reply. I rebased my branch and my commits of this PR are there in the master branch of root. But `TMVAUserGuide.pdf` is not updated with respect to changes in tex files. Should I open a separate PR for updating TMVA User Guide pdf? . cc: @lmoneta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/316
https://github.com/root-project/root/pull/321:28,safety,review,review,28,@pcanal - I believe all the review comments have been addressed. Please take another look.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:28,testability,review,review,28,@pcanal - I believe all the review comments have been addressed. Please take another look.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:29,deployability,patch,patch,29,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:170,energy efficiency,Cpu,CpuTime,170,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:313,energy efficiency,Cpu,Cputime,313,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:347,energy efficiency,core,core,347,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:67,integrability,event,eventexe,67,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:104,integrability,event,events,104,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:170,performance,Cpu,CpuTime,170,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:313,performance,Cpu,Cputime,313,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:450,performance,parallel,parallelize,450,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:29,safety,patch,patch,29,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/321:29,security,patch,patch,29,"Oh, I should note. With this patch, I see the following:. ```. $ ./eventexe 1000 9 99 1 600 1. ... 1000 events and 101713298 bytes processed. RealTime=16.591808 seconds, CpuTime=39.970000 seconds. compression level=9, split=99, arg4=1, IMT=1. You write 6.130332 Mbytes/Realtime seconds. You write 2.544741 Mbytes/Cputime seconds. ```. This is a 4-core host; we see a 2.4x speedup. No, it's not perfect - but it probably reflects the fact we can only parallelize the compression, not the serialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/321
https://github.com/root-project/root/pull/323:328,availability,state,statements,328,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:236,deployability,build,building,236,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:291,deployability,depend,dependencies,291,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:366,deployability,depend,dependence,366,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:521,deployability,depend,depends,521,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:102,integrability,event,eventually,102,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:291,integrability,depend,dependencies,291,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:328,integrability,state,statements,328,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:366,integrability,depend,dependence,366,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:521,integrability,depend,depends,521,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:143,modifiability,concern,concern,143,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:291,modifiability,depend,dependencies,291,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:346,modifiability,pac,package,346,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:366,modifiability,depend,dependence,366,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:521,modifiability,depend,depends,521,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:291,safety,depend,dependencies,291,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:366,safety,depend,dependence,366,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:521,safety,depend,depends,521,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:143,testability,concern,concern,143,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:291,testability,depend,dependencies,291,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:366,testability,depend,dependence,366,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:521,testability,depend,depends,521,"Hi Brian. Thanks for your suggestion. I'll have a look at the implications of the BUILD_PRODUCTS, and eventually apply it everywhere. The only concern is that you need to know the a priori what are the libraries and headers produced by building the external. . Until now we have handled the dependencies by adding the following statements in the package that have a dependence to the builtin libraries:. ```. if(builtin_xrootd). ROOT_ADD_BUILTIN_DEPENDENCIES(Netx XROOTD). endif(). ```. In this example the target `Netx` depends on the libraries produced by the target `XROOTD`, which is using the `ExternalProject`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:271,deployability,log,logic,271,"It looks like `ROOT_ADD_BUILTIN_DEPENDENCIES` only works if the external target name and the library variable name are the same. I.e., `LZMA` and `LZMA_LIBRARIES`. However, for `vc`, the target name is `VC` and the library name is `Vc_LIBRARIES`. Seems that the existing logic in `ROOT_ADD_BUILTIN_DEPENDENCIES` is case sensitive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:101,modifiability,variab,variable,101,"It looks like `ROOT_ADD_BUILTIN_DEPENDENCIES` only works if the external target name and the library variable name are the same. I.e., `LZMA` and `LZMA_LIBRARIES`. However, for `vc`, the target name is `VC` and the library name is `Vc_LIBRARIES`. Seems that the existing logic in `ROOT_ADD_BUILTIN_DEPENDENCIES` is case sensitive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:271,safety,log,logic,271,"It looks like `ROOT_ADD_BUILTIN_DEPENDENCIES` only works if the external target name and the library variable name are the same. I.e., `LZMA` and `LZMA_LIBRARIES`. However, for `vc`, the target name is `VC` and the library name is `Vc_LIBRARIES`. Seems that the existing logic in `ROOT_ADD_BUILTIN_DEPENDENCIES` is case sensitive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:271,security,log,logic,271,"It looks like `ROOT_ADD_BUILTIN_DEPENDENCIES` only works if the external target name and the library variable name are the same. I.e., `LZMA` and `LZMA_LIBRARIES`. However, for `vc`, the target name is `VC` and the library name is `Vc_LIBRARIES`. Seems that the existing logic in `ROOT_ADD_BUILTIN_DEPENDENCIES` is case sensitive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:271,testability,log,logic,271,"It looks like `ROOT_ADD_BUILTIN_DEPENDENCIES` only works if the external target name and the library variable name are the same. I.e., `LZMA` and `LZMA_LIBRARIES`. However, for `vc`, the target name is `VC` and the library name is `Vc_LIBRARIES`. Seems that the existing logic in `ROOT_ADD_BUILTIN_DEPENDENCIES` is case sensitive.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:106,deployability,depend,depend,106,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:198,deployability,build,build,198,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:278,deployability,build,build,278,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:150,energy efficiency,Reduc,Reduces,150,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:243,energy efficiency,reduc,reduction,243,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:106,integrability,depend,depend,106,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:106,modifiability,depend,depend,106,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:230,reliability,doe,does,230,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:106,safety,depend,depend,106,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:260,safety,compl,complexity,260,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:260,security,compl,complexity,260,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:106,testability,depend,depend,106,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:214,testability,understand,understand,214,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:169,usability,custom,custom,169,"Looking deeper - I think the correct approach would be to remove `ROOT_ADD_BUILTIN_DEPENDENCIES` and just depend on the `BUILD_BYPRODUCTS` attribute. Reduces a bunch of custom code, making the ROOT build easier to understand (and does a small reduction in the complexity of the build).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:170,deployability,build,build,170,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:243,deployability,depend,dependent,243,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:284,deployability,build,build,284,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:337,deployability,depend,dependent,337,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:472,deployability,depend,dependency,472,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:557,deployability,depend,dependency,557,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:621,deployability,depend,dependencies,621,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:668,deployability,depend,dependencies,668,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:715,deployability,continu,continues,715,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:98,energy efficiency,current,current,98,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:243,integrability,depend,dependent,243,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:337,integrability,depend,dependent,337,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:472,integrability,depend,dependency,472,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:557,integrability,depend,dependency,557,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:621,integrability,depend,dependencies,621,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:668,integrability,depend,dependencies,668,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:243,modifiability,depend,dependent,243,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:337,modifiability,depend,dependent,337,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:472,modifiability,depend,dependency,472,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:557,modifiability,depend,dependency,557,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:621,modifiability,depend,dependencies,621,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:668,modifiability,depend,dependencies,668,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:243,safety,depend,dependent,243,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:337,safety,depend,dependent,337,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:472,safety,depend,dependency,472,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:557,safety,depend,dependency,557,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:621,safety,depend,dependencies,621,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:668,safety,depend,dependencies,668,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:243,testability,depend,dependent,243,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:337,testability,depend,dependent,337,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:472,testability,depend,dependency,472,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:557,testability,depend,dependency,557,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:621,testability,depend,dependencies,621,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:668,testability,depend,dependencies,668,"Just pushed a fix that removes `ROOT_ADD_BUILTIN_DEPENDENCIES`. Note that this branch retains the current race condition in `ROOT_ADD_BUILTIN_DEPENDENCIES`: the external build produces the header files, but the individual source files are not dependent on the outcome of the external build. For example, `TDavixFile.cxx.o` is in reality dependent on `TDavixFile.cxx` and `davix.hpp`; however, if `davix.hpp` is the output of the `DAVIX` external project, there's no CMake dependency forcing `DAVIX` to be built before `TDavixFile.cxx.o`. There *is* a CMake dependency for `libRDAVIX.so` on `DAVIX`. So, we do the library dependencies correctly but not the header file dependencies. This was true before this PR and continues to be true. I'll look into that next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:658,availability,redund,redundant,658,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:55,deployability,build,build,55,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:118,deployability,depend,dependencies,118,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:190,deployability,depend,dependency,190,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:347,deployability,depend,dependencies,347,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:408,deployability,depend,dependency,408,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:529,deployability,depend,dependencies,529,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:658,deployability,redundan,redundant,658,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:118,integrability,depend,dependencies,118,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:190,integrability,depend,dependency,190,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:347,integrability,depend,dependencies,347,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:408,integrability,depend,dependency,408,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:529,integrability,depend,dependencies,529,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:118,modifiability,depend,dependencies,118,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:190,modifiability,depend,dependency,190,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:347,modifiability,depend,dependencies,347,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:408,modifiability,depend,dependency,408,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:529,modifiability,depend,dependencies,529,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:658,reliability,redundan,redundant,658,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:118,safety,depend,dependencies,118,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:190,safety,depend,dependency,190,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:230,safety,compl,complete,230,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:347,safety,depend,dependencies,347,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:408,safety,depend,dependency,408,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:529,safety,depend,dependencies,529,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:658,safety,redund,redundant,658,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:230,security,compl,complete,230,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:118,testability,depend,dependencies,118,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:190,testability,depend,dependency,190,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:347,testability,depend,dependencies,347,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:408,testability,depend,dependency,408,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:529,testability,depend,dependencies,529,"Ok, after a bit more investigation into the generated `build.ninja`, scratch the above comment. It seems inter-target dependencies also cover the source files. That is, if target `foo` is a dependency of `bar`, then `foo` must be complete before the first source file of `bar` is compiled. I thus pushed a commit that finishes the cleanup:. * All dependencies are correct. When a library file is listed as a dependency of something, the project which generates this file has it correctly listed in `BUILD_BYPRODUCTS`. * Built-in dependencies of an executable or library can be listed in the respective ROOT macro. Putting it in a macro allows us to skip the redundant `if(builtin_foo)` code blocks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:71,deployability,depend,dependencies,71,"Hi Brian. I like the more elegant way to handle the library/executable dependencies to builtins, which as pointed are still necessary. I do not known what did we bought with `BUILD_BYPRODUCTS`, specially for the makefile case. My suspicion is that to would work if the ExternalProject macro is used in the same subdirectory that the byproducts are used. In any case, I guess it does not do any damage. . I have merged your commits to the master as well as some minor changes to keep the treatment uniform for all builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:71,integrability,depend,dependencies,71,"Hi Brian. I like the more elegant way to handle the library/executable dependencies to builtins, which as pointed are still necessary. I do not known what did we bought with `BUILD_BYPRODUCTS`, specially for the makefile case. My suspicion is that to would work if the ExternalProject macro is used in the same subdirectory that the byproducts are used. In any case, I guess it does not do any damage. . I have merged your commits to the master as well as some minor changes to keep the treatment uniform for all builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:311,integrability,sub,subdirectory,311,"Hi Brian. I like the more elegant way to handle the library/executable dependencies to builtins, which as pointed are still necessary. I do not known what did we bought with `BUILD_BYPRODUCTS`, specially for the makefile case. My suspicion is that to would work if the ExternalProject macro is used in the same subdirectory that the byproducts are used. In any case, I guess it does not do any damage. . I have merged your commits to the master as well as some minor changes to keep the treatment uniform for all builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:71,modifiability,depend,dependencies,71,"Hi Brian. I like the more elegant way to handle the library/executable dependencies to builtins, which as pointed are still necessary. I do not known what did we bought with `BUILD_BYPRODUCTS`, specially for the makefile case. My suspicion is that to would work if the ExternalProject macro is used in the same subdirectory that the byproducts are used. In any case, I guess it does not do any damage. . I have merged your commits to the master as well as some minor changes to keep the treatment uniform for all builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:378,reliability,doe,does,378,"Hi Brian. I like the more elegant way to handle the library/executable dependencies to builtins, which as pointed are still necessary. I do not known what did we bought with `BUILD_BYPRODUCTS`, specially for the makefile case. My suspicion is that to would work if the ExternalProject macro is used in the same subdirectory that the byproducts are used. In any case, I guess it does not do any damage. . I have merged your commits to the master as well as some minor changes to keep the treatment uniform for all builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:71,safety,depend,dependencies,71,"Hi Brian. I like the more elegant way to handle the library/executable dependencies to builtins, which as pointed are still necessary. I do not known what did we bought with `BUILD_BYPRODUCTS`, specially for the makefile case. My suspicion is that to would work if the ExternalProject macro is used in the same subdirectory that the byproducts are used. In any case, I guess it does not do any damage. . I have merged your commits to the master as well as some minor changes to keep the treatment uniform for all builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/323:71,testability,depend,dependencies,71,"Hi Brian. I like the more elegant way to handle the library/executable dependencies to builtins, which as pointed are still necessary. I do not known what did we bought with `BUILD_BYPRODUCTS`, specially for the makefile case. My suspicion is that to would work if the ExternalProject macro is used in the same subdirectory that the byproducts are used. In any case, I guess it does not do any damage. . I have merged your commits to the master as well as some minor changes to keep the treatment uniform for all builtins.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/323
https://github.com/root-project/root/pull/325:15,deployability,patch,patch,15,Thanks for the patch. This fixes issue https://sft.its.cern.ch/jira/browse/ROOT-8230. Merged to master and 6.08 branches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:15,safety,patch,patch,15,Thanks for the patch. This fixes issue https://sft.its.cern.ch/jira/browse/ROOT-8230. Merged to master and 6.08 branches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/325:15,security,patch,patch,15,Thanks for the patch. This fixes issue https://sft.its.cern.ch/jira/browse/ROOT-8230. Merged to master and 6.08 branches.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/325
https://github.com/root-project/root/pull/327:68,interoperability,convers,conversion,68,"For the record, just saw that independently the dynamic/static cast conversion is also suggested [here](https://github.com/root-mirror/root/pull/100/commits/52bd4756c1e6b5f23e7028801f1b46cd0be3122c) by @behrenhoff.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:122,availability,ping,ping,122,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:746,deployability,patch,patch,746,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:814,deployability,patch,patches,814,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:862,deployability,patch,patch,862,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:899,deployability,version,version,899,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:583,integrability,discover,discover,583,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:899,integrability,version,version,899,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:583,interoperability,discover,discover,583,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:899,modifiability,version,version,899,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:746,safety,patch,patch,746,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:814,safety,patch,patches,814,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:862,safety,patch,patch,862,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:141,security,team,team,141,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:746,security,patch,patch,746,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:814,security,patch,patches,814,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:862,security,patch,patch,862,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:573,usability,person,person,573,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:583,usability,discov,discover,583,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:922,usability,help,helps,922,"Yes, and for the record: I have rebased the most important changes (can be applied to master a few days ago) and tried to ping the ROOT/TMVA team via the root forum at https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880. I think there is much more one could do. It is a lot of work to keep all the changes up to date given that master is moving - even whitespace changes can cause work. In total, these changes give me about ~25-30% speedup for a use case here where training takes about 6 hours with the changes (with BDT+Gradient boosting). You are at least the third person to discover this change, see also here https://sft.its.cern.ch/jira/browse/ROOT-8006 - I would be more than happy if the changes could be included in root. I did the patch back in fall 2015 (yes, it's that long ago). You can apply my patches posted to the root forum with ""git am *.patch"", or I could also push the new version here. Whatever helps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:87,energy efficiency,estimat,estimate,87,"Hi @pseyfert,. you report an amazing improvement reported by Callgrind. Do you have an estimate of the improvement in runtime for your particular usecase w/o running that profiler? I ask this because, despite being excellent, all the tools of the valgrind family tend to profoundly alter the runtime behaviour of applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:171,energy efficiency,profil,profiler,171,"Hi @pseyfert,. you report an amazing improvement reported by Callgrind. Do you have an estimate of the improvement in runtime for your particular usecase w/o running that profiler? I ask this because, despite being excellent, all the tools of the valgrind family tend to profoundly alter the runtime behaviour of applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:171,performance,profil,profiler,171,"Hi @pseyfert,. you report an amazing improvement reported by Callgrind. Do you have an estimate of the improvement in runtime for your particular usecase w/o running that profiler? I ask this because, despite being excellent, all the tools of the valgrind family tend to profoundly alter the runtime behaviour of applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:234,usability,tool,tools,234,"Hi @pseyfert,. you report an amazing improvement reported by Callgrind. Do you have an estimate of the improvement in runtime for your particular usecase w/o running that profiler? I ask this because, despite being excellent, all the tools of the valgrind family tend to profoundly alter the runtime behaviour of applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:300,usability,behavi,behaviour,300,"Hi @pseyfert,. you report an amazing improvement reported by Callgrind. Do you have an estimate of the improvement in runtime for your particular usecase w/o running that profiler? I ask this because, despite being excellent, all the tools of the valgrind family tend to profoundly alter the runtime behaviour of applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:5,deployability,patch,patch,5,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:235,deployability,depend,depends,235,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:315,deployability,patch,patch,315,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:823,deployability,patch,patches,823,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:916,deployability,patch,patch,916,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:968,deployability,patch,patch,968,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:1239,deployability,patch,patch,1239,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:235,integrability,depend,depends,235,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:235,modifiability,depend,depends,235,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:5,safety,patch,patch,5,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:105,safety,reme,remeber,105,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:235,safety,depend,depends,235,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:315,safety,patch,patch,315,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:823,safety,patch,patches,823,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:916,safety,patch,patch,916,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:968,safety,patch,patch,968,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:1239,safety,patch,patch,1239,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:5,security,patch,patch,5,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:315,security,patch,patch,315,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:823,security,patch,patches,823,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:916,security,patch,patch,916,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:968,security,patch,patch,968,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:1239,security,patch,patch,1239,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:235,testability,depend,depends,235,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:268,testability,understand,understand,268,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:580,testability,simpl,simply,580,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:94,usability,tool,tool,94,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:580,usability,simpl,simply,580,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:860,usability,feedback,feedback,860,"This patch was found by at least 3 different people. For example, I found it using the ""perf"" tool (if I remeber correctly, it was using gcc 4.8.4 back then and added -fno-omit-frame-pointer for compilation). The improvement of course depends on the settings. I don't understand why it takes so long to accept this patch. It is obviously correct - since if you use dynamic_cast and then do NOT check for nullptr and happily dereference the result, you can as well use a static_cast - if the old code was correct, the new one is correct as well. And the other cases, where you can simply remove the cast, are obvioulsly correct as well. By the way, I am still waiting for the invitation for a meeting in -1 month, as was announced here: https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880 - and please please consider my patches there as well. At least give feedback. This one with the casts is by far the easiest patch. And an unrelated thing: 2 days ago I added a patch for long branch names (trying it via jira to see it that is faster): https://sft.its.cern.ch/jira/projects/ROOT/issues/ROOT-8578 - it was assigned to Helge Voss, but I think that might not be correct. For me, Helge seems to be working on algorithms mainly, but the patch is a technicality in one TMVA file and one TTree file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:79,deployability,patch,patch,79,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:140,deployability,patch,patches,140,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:61,integrability,sub,submission,61,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:44,performance,time,time,44,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:79,safety,patch,patch,79,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:140,safety,patch,patches,140,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:79,security,patch,patch,79,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:140,security,patch,patches,140,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:229,usability,clear,clear,229,"Dear Wolf,. there was a strange interval of time between the submission of the patch and its acceptance. I now merged this PR and the three patches you proposed on the root forum: thanks a lot - your and Paul's code represents a clear added value for ROOT! I am still ironing out some issues with the file here https://root.cern.ch/phpBB3/viewtopic.php?f=15&t=22880#p100922 . I cannot unfortunately comment on the pending invitation since I am not involved in the organisation of the IML meetings. Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:38,energy efficiency,measur,measurements,38,"Hi Danilo,. no i didn't run real time measurements. we also disussed in one of the last meetings that running the examples from `$ROOTSYS/tutorials/tmva` might be biassed wrt. real life applications (exceptionally small number of features - at least for the MLP our guess is that this makes my callgrind benchmark look more dramatic than it would be in a real application).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:33,performance,time,time,33,"Hi Danilo,. no i didn't run real time measurements. we also disussed in one of the last meetings that running the examples from `$ROOTSYS/tutorials/tmva` might be biassed wrt. real life applications (exceptionally small number of features - at least for the MLP our guess is that this makes my callgrind benchmark look more dramatic than it would be in a real application).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/327:200,safety,except,exceptionally,200,"Hi Danilo,. no i didn't run real time measurements. we also disussed in one of the last meetings that running the examples from `$ROOTSYS/tutorials/tmva` might be biassed wrt. real life applications (exceptionally small number of features - at least for the MLP our guess is that this makes my callgrind benchmark look more dramatic than it would be in a real application).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/327
https://github.com/root-project/root/pull/334:67,availability,consist,consistency,67,"Hi,. perhaps we can move unsigned long long to ULong64_t (also for consistency with the entry number type)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/334
https://github.com/root-project/root/pull/334:67,usability,consist,consistency,67,"Hi,. perhaps we can move unsigned long long to ULong64_t (also for consistency with the entry number type)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/334
https://github.com/root-project/root/pull/337:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/337:41,integrability,event,event,41,"As discussed here https://indico.cern.ch/event/607815 merged, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/337
https://github.com/root-project/root/pull/338:0,deployability,Build,Build,0,Build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/338
https://github.com/root-project/root/pull/340:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:4,availability,failur,failures,4,All failures are pre-existing. Argh. I.e. that's really a green bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:4,deployability,fail,failures,4,All failures are pre-existing. Argh. I.e. that's really a green bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:58,energy efficiency,green,green,58,All failures are pre-existing. Argh. I.e. that's really a green bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:4,performance,failur,failures,4,All failures are pre-existing. Argh. I.e. that's really a green bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:4,reliability,fail,failures,4,All failures are pre-existing. Argh. I.e. that's really a green bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/340:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/340
https://github.com/root-project/root/pull/341:623,availability,avail,available,623,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:47,deployability,patch,patch,47,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:271,reliability,doe,does,271,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:623,reliability,availab,available,623,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:47,safety,patch,patch,47,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:286,safety,detect,detection,286,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:623,safety,avail,available,623,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:47,security,patch,patch,47,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:286,security,detect,detection,286,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:623,security,availab,available,623,A more detailed report for the changes in this patch is here: https://gist.github.com/Teemperor/480b4105a31ce09409a162c9ee66003b. The changes are done by a script that compares the header guards around the include with the header guards in the respective header. It also does some typo detection. In some cases the script isn't sure if the typo correction works correctly and didn't do any changes. It also ignored a few system headers. See the report for a list of those cases. In the report every handled header guard is listed in the form. FILE. FOUND HEADER GUARD SYMBOL. HEADER GUARD USED IN THE IFNDEF. The script is available here: https://gist.github.com/Teemperor/767cbd5ec74a3c6444d9548414150c0a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:29,security,team,team,29,Can we wait until the Monday team meeting before proposing additional work? The typo fixes are superseded by this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:22,testability,context,context,22,Here is the diff with context of the things that were NOT done because the script couldn't handle them: http://pastebin.com/tRkBdfaM,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:56,safety,review,review,56,"@pcanal, is there a reason not to rely on a post commit review here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:56,testability,review,review,56,"@pcanal, is there a reason not to rely on a post commit review here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:202,deployability,updat,update,202,"All except for:. ```. -#ifndef MATH_NO_PLUGIN_MANAGER. #include ""TEnv.h"". -#endif. ```. are indeed typos. The one above is to avoid including an unnecessary header when a feature is turned off. Can you update the PR to remove all (but MATH_NO_PLUGIN_MANAGER) cases? (and then I will upload). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:4,safety,except,except,4,"All except for:. ```. -#ifndef MATH_NO_PLUGIN_MANAGER. #include ""TEnv.h"". -#endif. ```. are indeed typos. The one above is to avoid including an unnecessary header when a feature is turned off. Can you update the PR to remove all (but MATH_NO_PLUGIN_MANAGER) cases? (and then I will upload). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:126,safety,avoid,avoid,126,"All except for:. ```. -#ifndef MATH_NO_PLUGIN_MANAGER. #include ""TEnv.h"". -#endif. ```. are indeed typos. The one above is to avoid including an unnecessary header when a feature is turned off. Can you update the PR to remove all (but MATH_NO_PLUGIN_MANAGER) cases? (and then I will upload). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:202,safety,updat,update,202,"All except for:. ```. -#ifndef MATH_NO_PLUGIN_MANAGER. #include ""TEnv.h"". -#endif. ```. are indeed typos. The one above is to avoid including an unnecessary header when a feature is turned off. Can you update the PR to remove all (but MATH_NO_PLUGIN_MANAGER) cases? (and then I will upload). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:202,security,updat,update,202,"All except for:. ```. -#ifndef MATH_NO_PLUGIN_MANAGER. #include ""TEnv.h"". -#endif. ```. are indeed typos. The one above is to avoid including an unnecessary header when a feature is turned off. Can you update the PR to remove all (but MATH_NO_PLUGIN_MANAGER) cases? (and then I will upload). Thanks,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:233,modifiability,concern,concerned,233,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:58,safety,review,review,58,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:142,safety,review,review,142,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:166,safety,review,review,166,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:210,safety,review,review,210,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:58,testability,review,review,58,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:142,testability,review,review,142,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:166,testability,review,review,166,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:210,testability,review,review,210,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:233,testability,concern,concerned,233,"> @pcanal, is there a reason not to rely on a post commit review here? Yes. In general, in my opinion, we should move towards more pre-commit review than post-commit review ... and in this case, the pre-commit review (as far as I am concerned) is done.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:29,deployability,updat,update,29,"Ok, good. @Teemperor, please update the patch and I will check it in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:40,deployability,patch,patch,40,"Ok, good. @Teemperor, please update the patch and I will check it in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:29,safety,updat,update,29,"Ok, good. @Teemperor, please update the patch and I will check it in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:40,safety,patch,patch,40,"Ok, good. @Teemperor, please update the patch and I will check it in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:29,security,updat,update,29,"Ok, good. @Teemperor, please update the patch and I will check it in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:40,security,patch,patch,40,"Ok, good. @Teemperor, please update the patch and I will check it in.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/341:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/341
https://github.com/root-project/root/pull/343:245,availability,redund,redundant,245,"> at least here I think it should be normal header guards in the respective header and no ""double guards""around the include :). You are correct. We *just* changed the coding convention to not longer require the 'double guard' (which is nowadays redundant, in the past it saved in disk access). Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:245,deployability,redundan,redundant,245,"> at least here I think it should be normal header guards in the respective header and no ""double guards""around the include :). You are correct. We *just* changed the coding convention to not longer require the 'double guard' (which is nowadays redundant, in the past it saved in disk access). Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:280,performance,disk,disk,280,"> at least here I think it should be normal header guards in the respective header and no ""double guards""around the include :). You are correct. We *just* changed the coding convention to not longer require the 'double guard' (which is nowadays redundant, in the past it saved in disk access). Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:245,reliability,redundan,redundant,245,"> at least here I think it should be normal header guards in the respective header and no ""double guards""around the include :). You are correct. We *just* changed the coding convention to not longer require the 'double guard' (which is nowadays redundant, in the past it saved in disk access). Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:245,safety,redund,redundant,245,"> at least here I think it should be normal header guards in the respective header and no ""double guards""around the include :). You are correct. We *just* changed the coding convention to not longer require the 'double guard' (which is nowadays redundant, in the past it saved in disk access). Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:285,security,access,access,285,"> at least here I think it should be normal header guards in the respective header and no ""double guards""around the include :). You are correct. We *just* changed the coding convention to not longer require the 'double guard' (which is nowadays redundant, in the past it saved in disk access). Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:76,interoperability,conflict,conflict,76,"Hi Stefan, . I would like to merge this PR. Can you please verify the shown conflict with the master branch ? . Thank you . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:59,testability,verif,verify,59,"Hi Stefan, . I would like to merge this PR. Can you please verify the shown conflict with the master branch ? . Thank you . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/343:28,interoperability,conflict,conflict,28,I've rebased and solved the conflict!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/343
https://github.com/root-project/root/pull/344:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/344
https://github.com/root-project/root/pull/344:30,deployability,patch,patch,30,Everything fine for me in the patch. I particularly appreciate the coming back of shared_from_this. Let's wait the response of the bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/344
https://github.com/root-project/root/pull/344:30,safety,patch,patch,30,Everything fine for me in the patch. I particularly appreciate the coming back of shared_from_this. Let's wait the response of the bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/344
https://github.com/root-project/root/pull/344:30,security,patch,patch,30,Everything fine for me in the patch. I particularly appreciate the coming back of shared_from_this. Let's wait the response of the bot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/344
https://github.com/root-project/root/pull/344:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/344
https://github.com/root-project/root/pull/345:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/345
https://github.com/root-project/root/pull/346:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:26,energy efficiency,current,current,26,"Better maybe to leave the current brace position (less line changed) for the namespace if it is not too much effort, but the important is the 3 spaces indentation and no tabs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/346:15,usability,close,closed,15,This PR can be closed. It is now committed in the ROOT master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/346
https://github.com/root-project/root/pull/349:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/349
https://github.com/root-project/root/pull/352:97,availability,failur,failure,97,"Hi,. I may be doing something wrong here but running the root-prob.py on 8f87cc I do not get any failure :-(. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . x after reading. RooRealVar::x = 10 L(1 - 100) . ```. thoughts? Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:97,deployability,fail,failure,97,"Hi,. I may be doing something wrong here but running the root-prob.py on 8f87cc I do not get any failure :-(. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . x after reading. RooRealVar::x = 10 L(1 - 100) . ```. thoughts? Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:97,performance,failur,failure,97,"Hi,. I may be doing something wrong here but running the root-prob.py on 8f87cc I do not get any failure :-(. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . x after reading. RooRealVar::x = 10 L(1 - 100) . ```. thoughts? Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:97,reliability,fail,failure,97,"Hi,. I may be doing something wrong here but running the root-prob.py on 8f87cc I do not get any failure :-(. ```. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . x after reading. RooRealVar::x = 10 L(1 - 100) . ```. thoughts? Cheers,. Danilo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:80,availability,error,error,80,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:864,availability,ERROR,ERROR,864,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:925,availability,error,error,925,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:1053,availability,error,error,1053,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:80,performance,error,error,80,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:864,performance,ERROR,ERROR,864,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:925,performance,error,error,925,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:1053,performance,error,error,1053,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:80,safety,error,error,80,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:864,safety,ERROR,ERROR,864,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:870,safety,Input,InputArguments,870,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:925,safety,error,error,925,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:1053,safety,error,error,1053,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:1141,safety,test,test,1141,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:245,security,Team,Team,245,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:1141,testability,test,test,1141,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:80,usability,error,error,80,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:354,usability,help,help,354,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:864,usability,ERROR,ERROR,864,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:870,usability,Input,InputArguments,870,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:925,usability,error,error,925,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:1053,usability,error,error,1053,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:1063,usability,behavi,behaviour,1063,"Hi,. This is quite strange, since I’ve just tried with the master and I see the error. ```. $ root -v. -----------------------------------------------------------------. | Welcome to ROOT 6.09/01 http://root.cern.ch |. | (c) 1995-2016, The ROOT Team |. | Built for macosx64 |. | From heads/master@v6-09-01-1544-gf112562, Feb 17 2017, 10:42:56 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. -----------------------------------------------------------------. ```. ```. $ python root-prob.py . RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#1] INFO:ObjectHandling -- RooWorkspace::import(ws) importing RooRealVar::x. x before reading. RooRealVar::x = 10 L(1 - 100) . [#0] ERROR:InputArguments -- RooRealVar::readFromStream(x): parse error, cannot convert '1e' to double precision. x after reading. RooRealVar::x = 100 L(1 - 100) . ```. Anyway, even without the error the behaviour you obtain is not correct, since the script should have produced a `test.txt` file with a single line of the kind. ```. x = 1e+06 L(10000 - 1e+06) . ```. and this is not read correctly by RooArgSet::readFromFile()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:27,safety,test,test,27,"Hi,. I'd like to . - put a test in the testsuite. - reproduce the problem. - merge the pr. - see the problem disappear. unfortunately I am stuck at the first step. Now recompiling at your revision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:39,safety,test,testsuite,39,"Hi,. I'd like to . - put a test in the testsuite. - reproduce the problem. - merge the pr. - see the problem disappear. unfortunately I am stuck at the first step. Now recompiling at your revision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:27,testability,test,test,27,"Hi,. I'd like to . - put a test in the testsuite. - reproduce the problem. - merge the pr. - see the problem disappear. unfortunately I am stuck at the first step. Now recompiling at your revision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:39,testability,test,testsuite,39,"Hi,. I'd like to . - put a test in the testsuite. - reproduce the problem. - merge the pr. - see the problem disappear. unfortunately I am stuck at the first step. Now recompiling at your revision.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:167,deployability,instal,install,167,"In case it helps, I’ve compiled with the following commands on macosx64:. ```. root $ mkdir cmake_build; cd cmake_build. cmake_build $ cmake -DCMAKE_INSTALL_PREFIX=../install -D roofit:BOOL=ON -D minuit2:BOOL=ON -D CMAKE_CXX_FLAGS=-I/usr/local/opt/openssl/include -D CMAKE_LD_FLAGS=-L/usr/local/opt/openssl/lib ../. cmake_build $ make -j8. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:11,usability,help,helps,11,"In case it helps, I’ve compiled with the following commands on macosx64:. ```. root $ mkdir cmake_build; cd cmake_build. cmake_build $ cmake -DCMAKE_INSTALL_PREFIX=../install -D roofit:BOOL=ON -D minuit2:BOOL=ON -D CMAKE_CXX_FLAGS=-I/usr/local/opt/openssl/include -D CMAKE_LD_FLAGS=-L/usr/local/opt/openssl/lib ../. cmake_build $ make -j8. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:51,usability,command,commands,51,"In case it helps, I’ve compiled with the following commands on macosx64:. ```. root $ mkdir cmake_build; cd cmake_build. cmake_build $ cmake -DCMAKE_INSTALL_PREFIX=../install -D roofit:BOOL=ON -D minuit2:BOOL=ON -D CMAKE_CXX_FLAGS=-I/usr/local/opt/openssl/include -D CMAKE_LD_FLAGS=-L/usr/local/opt/openssl/lib ../. cmake_build $ make -j8. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:19,deployability,fail,fails,19,"ok, it works, ehm, fails on osx but not on linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:19,reliability,fail,fails,19,"ok, it works, ehm, fails on osx but not on linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:0,safety,Test,Test,0,"Test added and merged, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/352:0,testability,Test,Test,0,"Test added and merged, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/352
https://github.com/root-project/root/pull/357:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/357:26,usability,document,document,26,"Great PR, thanks. Can you document the template types?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/357
https://github.com/root-project/root/pull/358:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/358
https://github.com/root-project/root/pull/359:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/359:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/359
https://github.com/root-project/root/pull/360:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:38,deployability,updat,updated,38,"Following a comment by @dpiparo, I've updated the branch to pull Vc from LCG rather than GitHub and rebased.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:38,safety,updat,updated,38,"Following a comment by @dpiparo, I've updated the branch to pull Vc from LCG rather than GitHub and rebased.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:38,security,updat,updated,38,"Following a comment by @dpiparo, I've updated the branch to pull Vc from LCG rather than GitHub and rebased.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:686,availability,ERROR,ERROR,686,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:55,interoperability,plug,plugins,55,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:265,interoperability,plug,plugins,265,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:357,interoperability,plug,plugins,357,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:462,interoperability,plug,plugins,462,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:547,interoperability,plug,plugins,547,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:625,interoperability,plug,plugins,625,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:686,performance,ERROR,ERROR,686,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:686,safety,ERROR,ERROR,686,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:494,security,access,access,494,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:82,usability,Command,Command,82,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:110,usability,progress,progress,110,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:209,usability,statu,status,209,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/360:686,usability,ERROR,ERROR,686,"This is what I see on Jenkins:. ```. Caused by: hudson.plugins.git.GitException:. Command ""git fetch --tags --progress https://github.com/root-project/root.git. +refs/pull/*:refs/remotes/origin/pr/*"" returned status code 143:. stdout: . stderr: . 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63). 	at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314). 	at hudson.plugins.git.GitSCM.fetchFrom(GitSCM.java:808). 	... 12 more. ERROR: null. ```. Could it be because I opened the merge request before the migration to root-project?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/360
https://github.com/root-project/root/pull/361:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/361
https://github.com/root-project/root/pull/363:244,interoperability,convers,conversion,244,"Yes, the dynamic_cast can go when changing. protected:. . static StorageType defaultStorageType ;. to. protected:. StorageType _storageType; . static StorageType defaultStorageType ;. and initialising it in the constructor, and flipping in the conversion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:304,deployability,contain,contained,304,"My understanding was that the defaultStorageType was intended to specify with what storage type new RooAbsData should get created. I.e. yes the actual storage type is a per object property but the default isn't. That said, I started implementing this, and noticed that there is a third storage type, not contained in the StorageType enum, RooCompositeDataStore, which I didn't have on the radar when initialising this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:65,interoperability,specif,specify,65,"My understanding was that the defaultStorageType was intended to specify with what storage type new RooAbsData should get created. I.e. yes the actual storage type is a per object property but the default isn't. That said, I started implementing this, and noticed that there is a third storage type, not contained in the StorageType enum, RooCompositeDataStore, which I didn't have on the radar when initialising this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:3,testability,understand,understanding,3,"My understanding was that the defaultStorageType was intended to specify with what storage type new RooAbsData should get created. I.e. yes the actual storage type is a per object property but the default isn't. That said, I started implementing this, and noticed that there is a third storage type, not contained in the StorageType enum, RooCompositeDataStore, which I didn't have on the radar when initialising this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:275,integrability,pub,public,275,While on it. I see RooTreeDataStore declares:. TTree& tree() { return *_tree ; }. virtual const TTree* tree() const { return _tree ; }. i.e. `tree()` might return a pointer to a tree or a reference to a tree … this looks bad to me (but cannot be changed without changing the public interface).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:282,integrability,interfac,interface,282,While on it. I see RooTreeDataStore declares:. TTree& tree() { return *_tree ; }. virtual const TTree* tree() const { return _tree ; }. i.e. `tree()` might return a pointer to a tree or a reference to a tree … this looks bad to me (but cannot be changed without changing the public interface).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:282,interoperability,interfac,interface,282,While on it. I see RooTreeDataStore declares:. TTree& tree() { return *_tree ; }. virtual const TTree* tree() const { return _tree ; }. i.e. `tree()` might return a pointer to a tree or a reference to a tree … this looks bad to me (but cannot be changed without changing the public interface).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:282,modifiability,interfac,interface,282,While on it. I see RooTreeDataStore declares:. TTree& tree() { return *_tree ; }. virtual const TTree* tree() const { return _tree ; }. i.e. `tree()` might return a pointer to a tree or a reference to a tree … this looks bad to me (but cannot be changed without changing the public interface).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:6,modifiability,interm,intermediate,6,"as an intermediate snapshot, this is with adding unique_ptr. Got stuck adding the per object storage type information (hadn't thought far enough ahead about how to implement it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:80,deployability,version,version,80,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:119,deployability,build,build,119,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:163,deployability,continu,continue,163,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:72,energy efficiency,current,current,72,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:80,integrability,version,version,80,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:80,modifiability,version,version,80,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:111,reliability,doe,doesn,111,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:12,security,sign,sign,12,"just a life sign, i messed up the copy constructor of RooAbsData in the current version, which is why RooStats doesn't build now for me. Once I've that fixed i'll continue with the storage type / dynamic_cast business.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:0,availability,ping,ping,0,ping... I want to make sure we land this piece of work! ;),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:0,availability,ping,ping,0,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:929,deployability,compos,composite,929,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:376,modifiability,design decis,design decision,376,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:929,modifiability,compos,composite,929,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:12,performance,time,time,12,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:879,performance,time,time,879,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:766,safety,avoid,avoid,766,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:857,testability,simul,simultaneously,857,"ping. found time to look at it again. I'm stuck with two issues:. - making the data store a unique pointer member of the rooabsdata deletes the copy constructor needed for. ```. RooAbsData a = .... RooAbsData& b = a;. ```. (used in e.g. in `RooStats/NeymanConstruction.h: virtual void SetData(RooAbsData& data){fData = data;}`). i think how to solve this is more a conceptual design decision and not so much just finding something that works. (… and just like introducing a unique pointer broke roostats for me, it might break third party code). - I don't think we converged on what the storage type enum should do. as i see it, there should remain a static one defining what type a newly created rooabsdata should be (can be vector or tree) and one per-instance to avoid dynamic casts which stores what the instance is (there can be data sets of all kinds simultaneously at run time) which can have a third value (vector, tree, composite).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:345,energy efficiency,Draw,Draw,345,"I'm not convinced std::move is what one wants to do there. I mean I haven't used RooStats, but i imagine one wants to keep the RooAbsData accessible outside the NeymanConstruction. like. ```. NeymanConstruction n = ... RooAbsData data1 = ... RooAbsData data2 = ... n.SetData(data1);. /// do things. n.SetData(data2); // deletes data1 if . data1.Draw(); // segfault. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:138,security,access,accessible,138,"I'm not convinced std::move is what one wants to do there. I mean I haven't used RooStats, but i imagine one wants to keep the RooAbsData accessible outside the NeymanConstruction. like. ```. NeymanConstruction n = ... RooAbsData data1 = ... RooAbsData data2 = ... n.SetData(data1);. /// do things. n.SetData(data2); // deletes data1 if . data1.Draw(); // segfault. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:140,energy efficiency,core,core,140,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:206,performance,I/O,I/O,206,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:403,performance,perform,performances,403,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:524,performance,perform,performances,524,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:262,security,auth,author,262,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:403,usability,perform,performances,403,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:449,usability,minim,minimise,449,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:524,usability,perform,performances,524,"Hi, . I would not change to unique_pointers, this could be done, but requires first a careful re-thinking and maybe re-design of the RooFit core classes. Changing them has very strong consequences on their I/O. All these should be discussed also with the RooFit author. . I would also leave the dynamic_cast. Removing will require adding an extra data member in the class. This code not be called where performances are critical. In general I would minimise changes in existing RooFit classes, apart if they are needed (for performances improvements, fixing bugs, etc...). Lorenzo.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:202,integrability,interfac,interface,202,"As a side note, changing T* to unique<T*> should be transparent to the I/O. (Of course this does *not* apply to shared_ptr). Having a unique_ptr as a data member (as opposed to having it as part of the interface) should have no visible external effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:202,interoperability,interfac,interface,202,"As a side note, changing T* to unique<T*> should be transparent to the I/O. (Of course this does *not* apply to shared_ptr). Having a unique_ptr as a data member (as opposed to having it as part of the interface) should have no visible external effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:202,modifiability,interfac,interface,202,"As a side note, changing T* to unique<T*> should be transparent to the I/O. (Of course this does *not* apply to shared_ptr). Having a unique_ptr as a data member (as opposed to having it as part of the interface) should have no visible external effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:71,performance,I/O,I/O,71,"As a side note, changing T* to unique<T*> should be transparent to the I/O. (Of course this does *not* apply to shared_ptr). Having a unique_ptr as a data member (as opposed to having it as part of the interface) should have no visible external effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:92,reliability,doe,does,92,"As a side note, changing T* to unique<T*> should be transparent to the I/O. (Of course this does *not* apply to shared_ptr). Having a unique_ptr as a data member (as opposed to having it as part of the interface) should have no visible external effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:107,availability,slo,slow,107,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:144,deployability,log,logic,144,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:37,energy efficiency,optim,optimized,37,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:37,performance,optimiz,optimized,37,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:107,reliability,slo,slow,107,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:179,reliability,pra,practice,179,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:144,safety,log,logic,144,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:144,security,log,logic,144,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:144,testability,log,logic,144,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:92,usability,support,support,92,"Lorenzo, this extra data member gets optimized away, whereas the dynamic_cast requires rtti support and is slow. Using `dynamic_cast` where the logic can be done without is a bad practice.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:35,availability,error,errors,35,"@pseyfert, seems we have syntactic errors. Could you fix them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:25,interoperability,syntact,syntactic,25,"@pseyfert, seems we have syntactic errors. Could you fix them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:35,performance,error,errors,35,"@pseyfert, seems we have syntactic errors. Could you fix them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:35,safety,error,errors,35,"@pseyfert, seems we have syntactic errors. Could you fix them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:35,usability,error,errors,35,"@pseyfert, seems we have syntactic errors. Could you fix them?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1257,availability,error,error,1257,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1274,availability,unavail,unavailable,1274,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:250,deployability,Build,Building,250,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:336,deployability,FAIL,FAILED,336,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1341,deployability,Compos,Composite,1341,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1420,deployability,Build,Building,1420,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1519,deployability,build,build,1519,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1545,deployability,fail,failed,1545,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1534,integrability,sub,subcommand,1534,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1341,modifiability,Compos,Composite,1341,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1257,performance,error,error,1257,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:336,reliability,FAIL,FAILED,336,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1545,reliability,fail,failed,1545,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1257,safety,error,error,1257,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1321,safety,Input,InputArguments,1321,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1368,safety,valid,valid,1368,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1257,usability,error,error,1257,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1321,usability,Input,InputArguments,1321,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:1525,usability,stop,stopped,1525,"storagType is a last minute typo and straight forward to fix. The coutE is actually harder (forgot to provide an argument) but it turns out the coutE/W... macros cannot be applied to in static member functions (require a this pointer):. ```. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o. FAILED: ccache /usr/bin/c++ -Iinclude -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofit/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/inc -I/home/pseyfert/coding/recentroot/tmpsrc/roofit/roostats/inc -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -Wno-deprecated-declarations -O2 -g -DNDEBUG -fPIC -MD -MT roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -MF roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o.d -o roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsData.cxx.o -c /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx: In static member function ‘static void RooAbsData::setDefaultStorageType(RooAbsData::StorageType)’:. /home/pseyfert/coding/recentroot/tmpsrc/roofit/roofitcore/src/RooAbsData.cxx:80:37: error: ‘this’ is unavailable for static member functions. coutE(InputArguments) << ""Composite storage is not a valid *default* storage type."" << endl;. ^. [6/314] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/RooAbsIntegrator.cxx.o. ninja: build stopped: subcommand failed. ```. I'm not familiar enough with how the roofit printout handling is meant to be done. Do you know what's the supposed way here? (i saw there's also oocoutE, but that still requires an instance (oo=other object afaiu))",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/363:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/363
https://github.com/root-project/root/pull/364:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:36,security,control,control,36,Looking at this. Why do you need to control the number of chunks? That should be controlled internally; either to the number of workers or a multiple of that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:81,security,control,controlled,81,Looking at this. Why do you need to control the number of chunks? That should be controlled internally; either to the number of workers or a multiple of that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:36,testability,control,control,36,Looking at this. Why do you need to control the number of chunks? That should be controlled internally; either to the number of workers or a multiple of that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:81,testability,control,controlled,81,Looking at this. Why do you need to control the number of chunks? That should be controlled internally; either to the number of workers or a multiple of that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:44,security,expos,exposed,44,We decided to pursue this in a way it's not exposed to the user. Another PR to come soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/364:59,usability,user,user,59,We decided to pursue this in a way it's not exposed to the user. Another PR to come soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/364
https://github.com/root-project/root/pull/366:20,deployability,build,building,20,"Ok, we can start by building while I review the 5th commit which is beefy. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:86,deployability,build,build,86,"Ok, we can start by building while I review the 5th commit which is beefy. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:37,safety,review,review,37,"Ok, we can start by building while I review the 5th commit which is beefy. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:37,testability,review,review,37,"Ok, we can start by building while I review the 5th commit which is beefy. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:71,deployability,fail,fails,71,"I spoke too early. It seems that once merged, the h1 analysis tutorial fails",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:71,reliability,fail,fails,71,"I spoke too early. It seems that once merged, the h1 analysis tutorial fails",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:72,safety,test,tests,72,"I will look into it. If this happens on linux, then it is something the tests do not cover.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:72,testability,test,tests,72,"I will look into it. If this happens on linux, then it is something the tests do not cover.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:60,availability,error,error,60,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:134,availability,error,error,134,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1225,availability,error,error,1225,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:92,deployability,build,build,92,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:186,deployability,build,buildinclude,186,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:334,deployability,build,build,334,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:452,deployability,build,build,452,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1183,deployability,build,build,1183,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1791,deployability,depend,dependent,1791,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1791,integrability,depend,dependent,1791,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:621,interoperability,Prox,Proxied,621,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1791,modifiability,depend,dependent,1791,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:60,performance,error,error,60,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:134,performance,error,error,134,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1225,performance,error,error,1225,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:60,safety,error,error,60,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:134,safety,error,error,134,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1225,safety,error,error,1225,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1791,safety,depend,dependent,1791,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1791,testability,depend,dependent,1791,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:60,usability,error,error,60,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:75,usability,clear,clear,75,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:134,usability,error,error,134,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:268,usability,Help,Helper,268,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:1225,usability,error,error,1225,"Hi, I tried on osx but it would be nice to have a look. The error is quite clear. ```. 104: build/include/ROOT/TDataFrame.hxx:264:53: error: no type named 'BranchTypes_t' in '(lambda at buildinclude/ROOT/TDataFrame.hxx:683:25)'. 104: typename BranchTypes_t = typename Helper::BranchTypes_t>. 104: ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~. 104: build/include/ROOT/TDataFrame.hxx:684:37: note: in instantiation of default argument for 'TDataFrameAction<(lambda at build/include/ROOT/TDataFrame.hxx:683:25), ROOT::Detail::TDataFrameBranchBase>' required here. 104: using DFA_t = ROOT::Internal::TDataFrameAction<decltype(fillLambda), Proxied>;. 104: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. 104: ^. 104: In file included from input_line_10:1:. 104: In file included from root/tutorials/dataframe/tdf101_h1Analysis.C:11:. 104: build/include/ROOT/TDataFrame.hxx:685:11: error: no matching member function for call to 'Book'. 104: df->Book(std::make_shared<DFA_t>(std::move(fillLambda), bl, fProxiedPtr));. 104: ~~~~^~~~. 104: root/tutorials/dataframe/tdf101_h1Analysis.C:129:37: note: in instantiation of function template specialization 'ROOT::Experimental::TDataFrameInterface<ROOT::Detail::TDataFrameBranchBase>::Histo2D<float, float>' requested here. 104: auto h2ARP = selectedAddedBranch.Histo2D<float, float>(TH2F(""h2"",""ptD0 vs Dm_d"",30,0.135,0.165,30,-3,6), ""dm_d"", ""h2_y"");. ```. after a quick look, it seems it's looking for a dependent type even if the actual type is a lambda.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:198,availability,redund,redundancy,198,"For now, f5ff41 has been reverted. The first four commits are in the master, after this issue is ironed out I propose to close this pr, create a new pr with the fixed fith commit and the removal of redundancy proposed by @pcanal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:198,deployability,redundan,redundancy,198,"For now, f5ff41 has been reverted. The first four commits are in the master, after this issue is ironed out I propose to close this pr, create a new pr with the fixed fith commit and the removal of redundancy proposed by @pcanal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:198,reliability,redundan,redundancy,198,"For now, f5ff41 has been reverted. The first four commits are in the master, after this issue is ironed out I propose to close this pr, create a new pr with the fixed fith commit and the removal of redundancy proposed by @pcanal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:198,safety,redund,redundancy,198,"For now, f5ff41 has been reverted. The first four commits are in the master, after this issue is ironed out I propose to close this pr, create a new pr with the fixed fith commit and the removal of redundancy proposed by @pcanal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:121,usability,close,close,121,"For now, f5ff41 has been reverted. The first four commits are in the master, after this issue is ironed out I propose to close this pr, create a new pr with the fixed fith commit and the removal of redundancy proposed by @pcanal.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:52,deployability,updat,update,52,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:63,deployability,log,logic,63,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:52,safety,updat,update,52,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:63,safety,log,logic,63,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:109,safety,test,tests,109,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:124,safety,detect,detected,124,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:172,safety,test,testing,172,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:247,safety,test,test,247,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:52,security,updat,update,52,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:63,security,log,logic,63,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:124,security,detect,detected,124,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:63,testability,log,logic,63,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:109,testability,test,tests,109,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:172,testability,test,testing,172,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:247,testability,test,test,247,"Should be fixed now. The problem was that I did not update the logic of 2D and 3D histograms at all, and the tests actually detected that. I probably did not rebase before testing on my machines or something of the sort. As far as I can tell both test and tutorials run fine (on linux), but let's see what the bot says :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:53,safety,test,test,53,"Hi @bluehood,. don't worry. It's great that the ROOT test suite is so complete to detect such small glitches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:70,safety,compl,complete,70,"Hi @bluehood,. don't worry. It's great that the ROOT test suite is so complete to detect such small glitches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:82,safety,detect,detect,82,"Hi @bluehood,. don't worry. It's great that the ROOT test suite is so complete to detect such small glitches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:70,security,compl,complete,70,"Hi @bluehood,. don't worry. It's great that the ROOT test suite is so complete to detect such small glitches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:82,security,detect,detect,82,"Hi @bluehood,. don't worry. It's great that the ROOT test suite is so complete to detect such small glitches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/366:53,testability,test,test,53,"Hi @bluehood,. don't worry. It's great that the ROOT test suite is so complete to detect such small glitches!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/366
https://github.com/root-project/root/pull/367:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:10,interoperability,format,format,10,Ask clang-format for feedback.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/367:21,usability,feedback,feedback,21,Ask clang-format for feedback.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/367
https://github.com/root-project/root/pull/368:17,integrability,sub,submit,17,@karies Should I submit a new PR with the TString changes or add them to this PR?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/368
https://github.com/root-project/root/pull/368:64,interoperability,format,formatting,64,"Thanks, I'd say it's fine as is! For the future: we try to keep formatting and functional changes in separate commits. As is it's very difficult to discern the TString change from the diff. @couet - can you take care of merging this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/368
https://github.com/root-project/root/pull/369:119,integrability,sub,subsequent,119,"This is strange ... The code in question starts with:. ```. if (branch->GetBasket(0) != 0) {. ```. which mean that the subsequent line. ```. branch->GetBasket(0)->GetNevBuf(). ```. should **not** provoke any access to the underlying file ... Can you please be more specific on why there is a disk access? In addition, in theory the number of entries in a branch can be different from the number of entries in the TTree (so maybe branch->GetEntries() might be better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:265,interoperability,specif,specific,265,"This is strange ... The code in question starts with:. ```. if (branch->GetBasket(0) != 0) {. ```. which mean that the subsequent line. ```. branch->GetBasket(0)->GetNevBuf(). ```. should **not** provoke any access to the underlying file ... Can you please be more specific on why there is a disk access? In addition, in theory the number of entries in a branch can be different from the number of entries in the TTree (so maybe branch->GetEntries() might be better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:292,performance,disk,disk,292,"This is strange ... The code in question starts with:. ```. if (branch->GetBasket(0) != 0) {. ```. which mean that the subsequent line. ```. branch->GetBasket(0)->GetNevBuf(). ```. should **not** provoke any access to the underlying file ... Can you please be more specific on why there is a disk access? In addition, in theory the number of entries in a branch can be different from the number of entries in the TTree (so maybe branch->GetEntries() might be better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:208,security,access,access,208,"This is strange ... The code in question starts with:. ```. if (branch->GetBasket(0) != 0) {. ```. which mean that the subsequent line. ```. branch->GetBasket(0)->GetNevBuf(). ```. should **not** provoke any access to the underlying file ... Can you please be more specific on why there is a disk access? In addition, in theory the number of entries in a branch can be different from the number of entries in the TTree (so maybe branch->GetEntries() might be better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:297,security,access,access,297,"This is strange ... The code in question starts with:. ```. if (branch->GetBasket(0) != 0) {. ```. which mean that the subsequent line. ```. branch->GetBasket(0)->GetNevBuf(). ```. should **not** provoke any access to the underlying file ... Can you please be more specific on why there is a disk access? In addition, in theory the number of entries in a branch can be different from the number of entries in the TTree (so maybe branch->GetEntries() might be better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:185,performance,disk,disk,185,"Hi Philippe,. I was surprised as well, but the. branch->GetBasket(0) (not the later GetNevBuf()). Calls TBranch.cxx line 1149:. basket->ReadBasketBuffers(). which then in turn causes a disk read. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Thanks Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:356,energy efficiency,estimat,estimate,356,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:453,energy efficiency,estimat,estimate,453,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:472,energy efficiency,estimat,estimate,472,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:391,integrability,buffer,buffer,391,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:810,safety,prevent,prevent,810,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:810,security,preven,prevent,810,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:153,usability,hint,hint,153,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:428,usability,close,close,428,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:465,usability,close,closer,465,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:822,usability,user,user,822,"> , I found that getting the numbers of entries in the basket causes a disc read for each branch. . After reading more carefully the code (based on your hint), indeed for the existing code the TTree may have to re-read the basket from file if the branch has more than one basket already. In the code ```branch->GetBasket(0)->GetNevBuf() ``` is intended to estimate the number of entries per buffer, so branch->GetEntries() is a close approximation/over-estimate. A closer estimate would ```branch->GetEntries() * totBytes / newBsize``` (with the difficulty that newBsize is of course still be calculated at that point). . Cheers,. Philippe. PS. I expected that on auto-flush all branches in a tree have the same number of entries, is that not true? Yes, this is the most common case, but there is nothing that prevent the user to fill a branch at a different rate that the other (the TTree will be odd but still ...). At any rate there is not much different is 'cost' is grabbing the total number of entries from the branch rather than the tree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:54,deployability,manag,managed,54,"Hi Philippe,. thanks for your feedback, I hope that I managed to make the change and add it to the PR correctly. (Even though I don't know GIT very well, I am developing strong feelings about it;). Cheers, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:54,energy efficiency,manag,managed,54,"Hi Philippe,. thanks for your feedback, I hope that I managed to make the change and add it to the PR correctly. (Even though I don't know GIT very well, I am developing strong feelings about it;). Cheers, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:54,safety,manag,managed,54,"Hi Philippe,. thanks for your feedback, I hope that I managed to make the change and add it to the PR correctly. (Even though I don't know GIT very well, I am developing strong feelings about it;). Cheers, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/369:30,usability,feedback,feedback,30,"Hi Philippe,. thanks for your feedback, I hope that I managed to make the change and add it to the PR correctly. (Even though I don't know GIT very well, I am developing strong feelings about it;). Cheers, Peter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/369
https://github.com/root-project/root/pull/371:25,safety,test,tested,25,"Yes, it seems to work (I tested it with the python code given in the PR description)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:25,testability,test,tested,25,"Yes, it seems to work (I tested it with the python code given in the PR description)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:37,availability,down,downcasting,37,O right I forgot - we have automatic downcasting. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:27,deployability,automat,automatic,27,O right I forgot - we have automatic downcasting. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:27,testability,automat,automatic,27,O right I forgot - we have automatic downcasting. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:153,usability,guid,guide,153,Thanks for you PR. I put it in. May be it would be nice to have small examples showing how to use these new features ? We could refer to them in the ref guide of THStack and TMultiGraph,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:57,interoperability,bind,bindings,57,Or do you mean how to use them when not using the Python bindings but just the raw C++?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/371:57,modifiability,bind,bindings,57,Or do you mean how to use them when not using the Python bindings but just the raw C++?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/371
https://github.com/root-project/root/pull/372:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/372
https://github.com/root-project/root/pull/372:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/372
https://github.com/root-project/root/pull/374:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/374
https://github.com/root-project/root/pull/376:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:48,usability,support,supported,48,"Thanks for the PR, Mattias! `%p` used to be not supported on MSVC. Has that changed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:23,usability,Visual,Visual,23,See: [Pointers (C++) - Visual Studio 2015](https://msdn.microsoft.com/en-us/library/89e4h321.aspx).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:163,interoperability,compatib,compatibility,163,"Thanks indeed - so the different is that MSVC needs `""0x%p""` while Linux and MacOS need `""%p""` to print the same. I.e. we have to stick / change to `""0x%llx""` for compatibility reasons :-/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:167,availability,fault,fault,167,"Multiple reasons:. - because we didn't have Windows builds of ROOT 6 for too long. - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:52,deployability,build,builds,52,"Multiple reasons:. - because we didn't have Windows builds of ROOT 6 for too long. - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:167,energy efficiency,fault,fault,167,"Multiple reasons:. - because we didn't have Windows builds of ROOT 6 for too long. - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:167,performance,fault,fault,167,"Multiple reasons:. - because we didn't have Windows builds of ROOT 6 for too long. - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:167,reliability,fault,fault,167,"Multiple reasons:. - because we didn't have Windows builds of ROOT 6 for too long. - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:167,safety,fault,fault,167,"Multiple reasons:. - because we didn't have Windows builds of ROOT 6 for too long. - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/376:128,usability,support,support,128,"Multiple reasons:. - because we didn't have Windows builds of ROOT 6 for too long. - ROOT re-implements snprintf for Windows to support %p for TString. That said - my fault, I should have noticed that this is only for GlobusAuth where MSVC isn't an issue AFAIK. LGTM, thanks, Mattias and apologies for this errant!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/376
https://github.com/root-project/root/pull/379:11,deployability,build,build,11,@phsft-bot build this for John!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/379
https://github.com/root-project/root/pull/380:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:21,deployability,build,build,21,"Where can I find the build report? The link when clicking ""Details"" leads to a 404.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:745,availability,error,error,745,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1412,availability,error,error,1412,std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2039,availability,error,error,2039,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2654,availability,error,error,2654,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:50,deployability,build,build,50,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:61,deployability,fail,fails,61,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:218,deployability,build,build,218,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:224,deployability,log,log,224,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:242,deployability,FAIL,FAILED,242,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:616,deployability,build,build,616,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:658,deployability,BUILD,BUILDTYPE,658,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:752,deployability,Fail,Failed,752,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:893,deployability,FAIL,FAILED,893,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1279,deployability,build,build,1279,ntrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1321,deployability,BUILD,BUILDTYPE,1321,Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1419,deployability,Fail,Failed,1419,11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1560,deployability,FAIL,FAILED,1560,/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1916,deployability,build,build,1916,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1958,deployability,BUILD,BUILDTYPE,1958,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2046,deployability,Fail,Failed,2046,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2187,deployability,FAIL,FAILED,2187,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2534,deployability,build,build,2534,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2576,deployability,BUILD,BUILDTYPE,2576,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2661,deployability,Fail,Failed,2661,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2809,deployability,build,build,2809,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2835,deployability,fail,failed,2835,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2824,integrability,sub,subcommand,2824,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:745,performance,error,error,745,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1412,performance,error,error,1412,std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2039,performance,error,error,2039,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2654,performance,error,error,2654,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:61,reliability,fail,fails,61,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:86,reliability,doe,does,86,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:242,reliability,FAIL,FAILED,242,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:752,reliability,Fail,Failed,752,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:893,reliability,FAIL,FAILED,893,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1419,reliability,Fail,Failed,1419,11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1560,reliability,FAIL,FAILED,1560,/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2046,reliability,Fail,Failed,2046,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2187,reliability,FAIL,FAILED,2187,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2661,reliability,Fail,Failed,2661,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2835,reliability,fail,failed,2835,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:224,safety,log,log,224,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:745,safety,error,error,745,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1412,safety,error,error,1412,std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2039,safety,error,error,2039,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2654,safety,error,error,2654,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:224,security,log,log,224,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:224,testability,log,log,224,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:745,usability,error,error,745,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:780,usability,user,user,780,"Not sure how to proceed here. It is only the slc6 build that fails, and the part that does that seems unrelated to my changes (TS3HTTPRequest.cxx, TApplicationServer.cxx, TGridJDL.cxx, TGrid.cxx). Relevant part of the build log is:. ```. ... FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1412,usability,error,error,1412,std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:1447,usability,user,user,1447,t/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TS3HTTPRequest.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TS3HTTPRequest.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2039,usability,error,error,2039,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2074,usability,user,user,2074,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2654,usability,error,error,2654,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2689,usability,user,user,2689,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/380:2815,usability,stop,stopped,2815,ch.6116.uQIVB0: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TApplicationServer.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TApplicationServer.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6136.kLNwy9: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGridJDL.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGridJDL.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6213.NG2LaZ: No such file or directory. FAILED: ccache /cvmfs/sft.cern.ch/lcg/contrib/gcc/6.2/x86_64-slc6/bin/g++ -DR__SSL -Iinclude -pipe -m64 -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -fPIC -pthread -std=c++11 -g -fPIC -MMD -MT net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -MF net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o.d -o net/net/CMakeFiles/Net.dir/src/TGrid.cxx.o -c /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/net/net/src/TGrid.cxx. ccache: error: Failed to open /afs/cern.ch/user/s/sftnight/.ccache/tmp/tmp.cpp_stderr.lcgapp-slc6-x86-64-17.cern.ch.6214.QPMr97: No such file or directory. ninja: build stopped: subcommand failed. ... ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/380
https://github.com/root-project/root/pull/382:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/382
https://github.com/root-project/root/pull/382:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/382
https://github.com/root-project/root/pull/383:57,deployability,toolchain,toolchain,57,"IIRC, cling couldn't deduce the include paths when --gcc-toolchain is passed. This lead to a problem when mounting the stl modulemap. Could you also address that issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:123,deployability,modul,modulemap,123,"IIRC, cling couldn't deduce the include paths when --gcc-toolchain is passed. This lead to a problem when mounting the stl modulemap. Could you also address that issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:123,modifiability,modul,modulemap,123,"IIRC, cling couldn't deduce the include paths when --gcc-toolchain is passed. This lead to a problem when mounting the stl modulemap. Could you also address that issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:123,safety,modul,modulemap,123,"IIRC, cling couldn't deduce the include paths when --gcc-toolchain is passed. This lead to a problem when mounting the stl modulemap. Could you also address that issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:57,usability,tool,toolchain,57,"IIRC, cling couldn't deduce the include paths when --gcc-toolchain is passed. This lead to a problem when mounting the stl modulemap. Could you also address that issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/383:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/383
https://github.com/root-project/root/pull/384:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/384:11,deployability,build,build,11,@phsft-bot build this for good!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/384
https://github.com/root-project/root/pull/385:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/385
https://github.com/root-project/root/pull/386:23,deployability,patch,patch,23,Superseded by Vassil's patch that restructures the modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:51,deployability,modul,modules,51,Superseded by Vassil's patch that restructures the modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:51,modifiability,modul,modules,51,Superseded by Vassil's patch that restructures the modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:23,safety,patch,patch,23,Superseded by Vassil's patch that restructures the modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:51,safety,modul,modules,51,Superseded by Vassil's patch that restructures the modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/386:23,security,patch,patch,23,Superseded by Vassil's patch that restructures the modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/386
https://github.com/root-project/root/pull/389:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/389
https://github.com/root-project/root/pull/391:48,usability,document,documentation,48,"Hi Stefan,. thanks for the PR: looks like great documentation. Usually we write documentation in markdown: is there a reason why you went for latex? Was a strategy to generate this doc every night discussed somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:80,usability,document,documentation,80,"Hi Stefan,. thanks for the PR: looks like great documentation. Usually we write documentation in markdown: is there a reason why you went for latex? Was a strategy to generate this doc every night discussed somewhere?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:45,deployability,updat,update,45,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:240,deployability,integr,integration,240,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:240,integrability,integr,integration,240,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:240,interoperability,integr,integration,240,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:240,modifiability,integr,integration,240,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:240,reliability,integr,integration,240,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:45,safety,updat,update,45,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:45,security,updat,update,45,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:240,security,integr,integration,240,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:240,testability,integr,integration,240,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:61,usability,User,User,61,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:68,usability,Guid,Guide,68,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:265,usability,User,User,265,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:272,usability,guid,guide,272,"We decided in a TMVA meeting that we want to update the TMVA User's Guide, e.g., such as Simon did recently for the new DNN method. That's the reason for the latex code. As far as I know (and are able to use grep), there's not yet a pandoc integration for the TMVA User's guide such as done for the other docs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:28,deployability,automat,automatically,28,I see. I'd like to see this automatically generated and linked from here https://root.cern.ch/root-user-guides-and-manuals . Would it be a problem to convert all this to markdown (pandoc -s example4.tex -o example5.text)? @couet @lmoneta what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:28,testability,automat,automatically,28,I see. I'd like to see this automatically generated and linked from here https://root.cern.ch/root-user-guides-and-manuals . Would it be a problem to convert all this to markdown (pandoc -s example4.tex -o example5.text)? @couet @lmoneta what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:99,usability,user,user-guides-and-manuals,99,I see. I'd like to see this automatically generated and linked from here https://root.cern.ch/root-user-guides-and-manuals . Would it be a problem to convert all this to markdown (pandoc -s example4.tex -o example5.text)? @couet @lmoneta what do you think?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:311,interoperability,format,formats,311,"I doubt that it's easily portable. E.g., as far as I know latex references are not directly portable to html (via markdown) and there are quite a lot of custom functions such as the option tables or the code examples. Still, I like the idea to have it in markdown so it can be ported via pandoc easily to other formats. Though, this would probably need a major refactoring of the document.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:25,modifiability,portab,portable,25,"I doubt that it's easily portable. E.g., as far as I know latex references are not directly portable to html (via markdown) and there are quite a lot of custom functions such as the option tables or the code examples. Still, I like the idea to have it in markdown so it can be ported via pandoc easily to other formats. Though, this would probably need a major refactoring of the document.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:92,modifiability,portab,portable,92,"I doubt that it's easily portable. E.g., as far as I know latex references are not directly portable to html (via markdown) and there are quite a lot of custom functions such as the option tables or the code examples. Still, I like the idea to have it in markdown so it can be ported via pandoc easily to other formats. Though, this would probably need a major refactoring of the document.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:361,modifiability,refact,refactoring,361,"I doubt that it's easily portable. E.g., as far as I know latex references are not directly portable to html (via markdown) and there are quite a lot of custom functions such as the option tables or the code examples. Still, I like the idea to have it in markdown so it can be ported via pandoc easily to other formats. Though, this would probably need a major refactoring of the document.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:361,performance,refactor,refactoring,361,"I doubt that it's easily portable. E.g., as far as I know latex references are not directly portable to html (via markdown) and there are quite a lot of custom functions such as the option tables or the code examples. Still, I like the idea to have it in markdown so it can be ported via pandoc easily to other formats. Though, this would probably need a major refactoring of the document.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:153,usability,custom,custom,153,"I doubt that it's easily portable. E.g., as far as I know latex references are not directly portable to html (via markdown) and there are quite a lot of custom functions such as the option tables or the code examples. Still, I like the idea to have it in markdown so it can be ported via pandoc easily to other formats. Though, this would probably need a major refactoring of the document.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:380,usability,document,document,380,"I doubt that it's easily portable. E.g., as far as I know latex references are not directly portable to html (via markdown) and there are quite a lot of custom functions such as the option tables or the code examples. Still, I like the idea to have it in markdown so it can be ported via pandoc easily to other formats. Though, this would probably need a major refactoring of the document.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:87,interoperability,format,format,87,"Hi,. as I said, we do not generate any documentation from latex and leave it in source format is not as useful as providing it on the ROOT website as pdf, html and various other formats. I let @lmoneta and @couet comment further about this though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:178,interoperability,format,formats,178,"Hi,. as I said, we do not generate any documentation from latex and leave it in source format is not as useful as providing it on the ROOT website as pdf, html and various other formats. I let @lmoneta and @couet comment further about this though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:39,usability,document,documentation,39,"Hi,. as I said, we do not generate any documentation from latex and leave it in source format is not as useful as providing it on the ROOT website as pdf, html and various other formats. I let @lmoneta and @couet comment further about this though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:20,interoperability,convers,conversion,20,I can help with the conversion to markdown if we decide to do it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/391:6,usability,help,help,6,I can help with the conversion to markdown if we decide to do it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/391
https://github.com/root-project/root/pull/392:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/392
https://github.com/root-project/root/pull/393:80,integrability,repositor,repository,80,"Hi, before that, can we have the change which picks up the tarfile from the lcg repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:80,interoperability,repositor,repository,80,"Hi, before that, can we have the change which picks up the tarfile from the lcg repository?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:6,availability,failur,failure,6,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:65,availability,Failur,Failure,65,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:0,deployability,Build,Build,0,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:6,deployability,fail,failure,6,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:65,deployability,Fail,Failure,65,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:6,performance,failur,failure,6,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:65,performance,Failur,Failure,65,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:6,reliability,fail,failure,6,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:65,reliability,Fail,Failure,65,Build failure and warnings are not related to this pull request. Failure on Ubuntu is due to a ccache issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:12,deployability,fail,failed,12,"Some [tests failed on SLC6](https://phsft-jenkins.cern.ch/job/root-pullrequests/189/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6/), but are not related to this pull request:. ```. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_EnableJsMVA. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_UserInterface. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_NewMethods. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:84,deployability,BUILD,BUILDTYPE,84,"Some [tests failed on SLC6](https://phsft-jenkins.cern.ch/job/root-pullrequests/189/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6/), but are not related to this pull request:. ```. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_EnableJsMVA. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_UserInterface. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_NewMethods. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:12,reliability,fail,failed,12,"Some [tests failed on SLC6](https://phsft-jenkins.cern.ch/job/root-pullrequests/189/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6/), but are not related to this pull request:. ```. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_EnableJsMVA. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_UserInterface. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_NewMethods. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:6,safety,test,tests,6,"Some [tests failed on SLC6](https://phsft-jenkins.cern.ch/job/root-pullrequests/189/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6/), but are not related to this pull request:. ```. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_EnableJsMVA. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_UserInterface. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_NewMethods. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:6,testability,test,tests,6,"Some [tests failed on SLC6](https://phsft-jenkins.cern.ch/job/root-pullrequests/189/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6/), but are not related to this pull request:. ```. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_EnableJsMVA. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_UserInterface. projectroot.roottest.python.JsMVA.roottest_python_JsMVA_NewMethods. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:26,deployability,fail,failed,26,"Again, an [unrelated test failed](https://phsft-jenkins.cern.ch/job/root-pullrequests/200/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:90,deployability,BUILD,BUILDTYPE,90,"Again, an [unrelated test failed](https://phsft-jenkins.cern.ch/job/root-pullrequests/200/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:26,reliability,fail,failed,26,"Again, an [unrelated test failed](https://phsft-jenkins.cern.ch/job/root-pullrequests/200/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:21,safety,test,test,21,"Again, an [unrelated test failed](https://phsft-jenkins.cern.ch/job/root-pullrequests/200/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:21,testability,test,test,21,"Again, an [unrelated test failed](https://phsft-jenkins.cern.ch/job/root-pullrequests/200/BUILDTYPE=Debug,COMPILER=gcc49,LABEL=slc6).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:11,deployability,build,build,11,@phsft-bot build! Looks like it tried to build it on Windows this time again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:41,deployability,build,build,41,@phsft-bot build! Looks like it tried to build it on Windows this time again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:66,performance,time,time,66,@phsft-bot build! Looks like it tried to build it on Windows this time again.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:43,energy efficiency,green,greenlight,43,"@peremato, IIUC this PR was waiting you to greenlight it. Is it good to go?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:55,deployability,version,version,55,"Hi @vgvassilev Please don't merge yet. I created a new version of VecCore and would like to update this pull request to use it first. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:92,deployability,updat,update,92,"Hi @vgvassilev Please don't merge yet. I created a new version of VecCore and would like to update this pull request to use it first. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:55,integrability,version,version,55,"Hi @vgvassilev Please don't merge yet. I created a new version of VecCore and would like to update this pull request to use it first. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:55,modifiability,version,version,55,"Hi @vgvassilev Please don't merge yet. I created a new version of VecCore and would like to update this pull request to use it first. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:92,safety,updat,update,92,"Hi @vgvassilev Please don't merge yet. I created a new version of VecCore and would like to update this pull request to use it first. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:92,security,updat,update,92,"Hi @vgvassilev Please don't merge yet. I created a new version of VecCore and would like to update this pull request to use it first. Cheers,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:9,deployability,build,build,9,"Only one build failed, because ccache was not found, other builds were all fine. Please feel free to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:15,deployability,fail,failed,15,"Only one build failed, because ccache was not found, other builds were all fine. Please feel free to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:59,deployability,build,builds,59,"Only one build failed, because ccache was not found, other builds were all fine. Please feel free to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/393:15,reliability,fail,failed,15,"Only one build failed, because ccache was not found, other builds were all fine. Please feel free to merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/393
https://github.com/root-project/root/pull/394:208,deployability,updat,update,208,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:155,energy efficiency,current,currently,155,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:278,integrability,sub,submission,278,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:222,modifiability,scal,scalar,222,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:12,safety,test,test,12,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:61,safety,test,test,61,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:138,safety,test,test,138,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:174,safety,test,tests,174,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:198,safety,test,test,198,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:208,safety,updat,update,208,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:291,safety,test,test,291,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:318,safety,test,test,318,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:375,safety,test,test,375,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:208,security,updat,update,208,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:12,testability,test,test,12,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:61,testability,test,test,61,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:138,testability,test,test,138,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:174,testability,test,tests,174,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:198,testability,test,test,198,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:291,testability,test,test,291,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:318,testability,test,test,318,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:375,testability,test,test,375,"Regarding a test case, no, I have not explicitly added a new test to the PR for the vectorised types. Frankly, I got a little lost in the test system. The currently existing tests should suffice to test this update w.r.t. scalar types. For vector types, I added to the original submission a test application I used to test using Vc types. I did not know how to add that as a test. I believe @lmoneta offered to do that bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:21,deployability,infrastructur,infrastructure,21,Testing clang-format infrastructure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:14,interoperability,format,format,14,Testing clang-format infrastructure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:0,safety,Test,Testing,0,Testing clang-format infrastructure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:0,testability,Test,Testing,0,Testing clang-format infrastructure...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:21,deployability,infrastructur,infrastructure,21,Testing clang-format infrastructure again...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:14,interoperability,format,format,14,Testing clang-format infrastructure again...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:0,safety,Test,Testing,0,Testing clang-format infrastructure again...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:0,testability,Test,Testing,0,Testing clang-format infrastructure again...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:14,interoperability,format,format,14,Another clang-format retry.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:48,interoperability,format,format,48,"@pcanal, can you fix the issues with our .clang-format file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:42,interoperability,format,format,42,"@cjones051073, thanks for doing the clang-format. Could you point me to the 'test application' you mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:77,safety,test,test,77,"@cjones051073, thanks for doing the clang-format. Could you point me to the 'test application' you mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:77,testability,test,test,77,"@cjones051073, thanks for doing the clang-format. Could you point me to the 'test application' you mentioned?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:121,integrability,sub,submission,121,"No worries, thanks for teaching me about clang format... The test application is in a file I attached to the original PR submission. See the top of this page...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:47,interoperability,format,format,47,"No worries, thanks for teaching me about clang format... The test application is in a file I attached to the original PR submission. See the top of this page...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:61,safety,test,test,61,"No worries, thanks for teaching me about clang format... The test application is in a file I attached to the original PR submission. See the top of this page...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:61,testability,test,test,61,"No worries, thanks for teaching me about clang format... The test application is in a file I attached to the original PR submission. See the top of this page...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:94,modifiability,exten,extending,94,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:32,safety,test,test,32,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:38,safety,test,testing,38,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:69,safety,test,test,69,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:74,safety,test,testVc,74,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:32,testability,test,test,32,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:38,testability,test,testing,38,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:69,testability,test,test,69,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:74,testability,test,testVc,74,"It seems that we have already a test, testing Vc functionality under test/testVc.cxx. Why not extending it with the attached collection of examples?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:25,interoperability,format,format,25,Verify with travis clang-format...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:0,testability,Verif,Verify,0,Verify with travis clang-format...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:96,interoperability,format,format,96,"@pcanal, the issue is resolved, sorry for the noise. @cjones051073, it seems that travis' clang-format is still unhappy. You can see the report by clicking on ""Details"" link.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:6,interoperability,format,format,6,clang format issues should be fixed now...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:50,interoperability,format,format,50,"> @pcanal, can you fix the issues with our .clang-format file? Can you be more specific?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:79,interoperability,specif,specific,79,"> @pcanal, can you fix the issues with our .clang-format file? Can you be more specific?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:26,modifiability,exten,extending,26,"regarding the testVc.cxx, extending that is a good idea. I will look into it when I can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:14,safety,test,testVc,14,"regarding the testVc.cxx, extending that is a good idea. I will look into it when I can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:14,testability,test,testVc,14,"regarding the testVc.cxx, extending that is a good idea. I will look into it when I can.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:281,interoperability,format,format,281,"It seems that would be the only thing (apart from the enable_if pattern) that holds off this PR for me. Maybe some commits are worth squashing, because we bloated quite a lot the history. This can be done by running `git rebase -i 22a3099132~1` and squashing the commits (eg clang-format fixes) into one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:22,availability,error,errors,22,It seems we got a few errors with this PR on slc6 gcc62 (click on the Jenkins CI build details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:81,deployability,build,build,81,It seems we got a few errors with this PR on slc6 gcc62 (click on the Jenkins CI build details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:22,performance,error,errors,22,It seems we got a few errors with this PR on slc6 gcc62 (click on the Jenkins CI build details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:22,safety,error,errors,22,It seems we got a few errors with this PR on slc6 gcc62 (click on the Jenkins CI build details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:22,usability,error,errors,22,It seems we got a few errors with this PR on slc6 gcc62 (click on the Jenkins CI build details).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:202,deployability,build,build,202,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:267,deployability,build,build,267,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:70,modifiability,scal,scalar,70,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:126,reliability,doe,does,126,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:19,safety,test,test,19,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:65,safety,test,test,65,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:227,safety,Test,Test,227,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:284,safety,test,test-GenVector-Vc,284,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:313,safety,test,test-Vc,313,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:326,safety,Test,Test,326,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:336,safety,test,test-GenVector-Vc,336,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:392,safety,Test,Test,392,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:402,safety,test,test-Vc,402,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:19,testability,test,test,19,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:65,testability,test,test,65,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:227,testability,Test,Test,227,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:284,testability,test,test-GenVector-Vc,284,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:313,testability,test,test-Vc,313,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:326,testability,Test,Test,326,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:336,testability,test,test-GenVector-Vc,336,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:392,testability,Test,Test,392,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:402,testability,test,test-Vc,402,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:241,usability,User,Users,241,"I have added a new test for Vc+GenVector. It creates a number of test scalar and vector instances of various GenVector types, does some calculations and compare the results. ```. Oberon ~/Projects/ROOT/build > ctest -j4 -R Vc. Test project /Users/chris/Projects/ROOT/build. Start 92: test-GenVector-Vc. Start 91: test-Vc. 1/2 Test #92: test-GenVector-Vc ................ Passed 0.06 sec. 2/2 Test #91: test-Vc .......................... Passed 0.06 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:34,safety,test,test,34,@cjones051073 thanks for adding a test!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:34,testability,test,test,34,@cjones051073 thanks for adding a test!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:55,availability,failur,failures,55,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:136,availability,failur,failures,136,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:28,deployability,build,build,28,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:37,deployability,fail,failing,37,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:55,deployability,fail,failures,55,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:136,deployability,fail,failures,136,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:157,deployability,build,build,157,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:175,deployability,build,build,175,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:55,performance,failur,failures,55,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:136,performance,failur,failures,136,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:37,reliability,fail,failing,37,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:55,reliability,fail,failures,55,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:136,reliability,fail,failures,136,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:50,safety,test,test,50,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:50,testability,test,test,50,"@cjones051073, it seems the build is failing with test failures. I've made some changes and you should be able to see the output of the failures on the next build. @phsft-bot build!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:37,deployability,build,build,37,Just so I don't have to wait for the build... Which test is failing ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:60,deployability,fail,failing,60,Just so I don't have to wait for the build... Which test is failing ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:60,reliability,fail,failing,60,Just so I don't have to wait for the build... Which test is failing ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:52,safety,test,test,52,Just so I don't have to wait for the build... Which test is failing ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:52,testability,test,test,52,Just so I don't have to wait for the build... Which test is failing ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:17,energy efficiency,cloud,cloud,17,![image](https://cloud.githubusercontent.com/assets/6516307/23857860/f3921930-07fe-11e7-9c0e-4d8da4eaf47f.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:4,deployability,fail,failing,4,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:25,deployability,fail,fail,25,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:116,deployability,log,logs,116,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:72,interoperability,specif,specific,72,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:4,reliability,fail,failing,4,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:25,reliability,fail,fail,25,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:12,safety,test,tests,12,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:81,safety,test,tests,81,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:116,safety,log,logs,116,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:116,security,log,logs,116,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:12,testability,test,tests,12,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:81,testability,test,tests,81,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:116,testability,log,logs,116,The failing tests do not fail for me. I need to see the output from the specific tests. Is it possible to get these logs from jenkins ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:29,deployability,build,build,29,"Yeah, just wait for the next build to finish.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:20,availability,failur,failures,20,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:872,availability,error,error,872,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:955,availability,failur,failures,955,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:1713,availability,error,error,1713,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:20,deployability,fail,failures,20,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:46,deployability,fail,failing,46,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:108,deployability,BUILD,BUILDTYPE,108,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:256,deployability,build,build,256,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
https://github.com/root-project/root/pull/394:298,deployability,BUILD,BUILDTYPE,298,"OK, so all the test failures seem to be tests failing to find math functions like sqrt(). ```. pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/root/math/genvector/test/testGenVector.cxx+... Info in <TUnixSystem::ACLiC>: creating shared library /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/roottest/root/math/genvector/testGenVector_cxx.so. In file included from input_line_11:21:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/etc/dictpch/allHeaders.h:680:. In file included from /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/Vector3D.h:11:. /mnt/build/jenkins/workspace/root-pullrequests/BUILDTYPE/Debug/COMPILER/gcc62/LABEL/slc6/build/include/Math/GenVector/Cartesian3D.h:121:14: error: no matching function for call to 'sqrt'. return sqrt(Mag2());. ```. All the failures seem to be in tests where the interpreter is being used to compile, so it looks like in this case the match functions are not being found via the 'using namespace' syntax. It works fine with clang, and also when compiled natively. Note, to answer a previous question, just sticking with the likes of `std::sqrt` indeed does not work with Vc types. Trying going back to this I get. ```. [100%] Linking CXX shared library libTrackMathCoreDict.so. [100%] Built target TrackMathCoreDict. In file included from /Users/chris/Projects/ROOT/source/test/testGenVectorVc.cxx:3:. In file included from /Users/chris/Projects/ROOT/build/include/Math/GenVector/PositionVector3D.h:22:. /Users/chris/Projects/ROOT/build/include/Math/GenVector/Cartesian3D.h:119:13: error: no matching function for call to 'sqrt'. return std::sqrt(Mag2());. ^~~~~~~~~. ```. So something needs to be changed, and my `using namespace` trick really should work. Any ideas why the interpreter seems unhappy with this, with gcc ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/394
